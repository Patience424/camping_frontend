{"ast":null,"code":"import { campingSpotAPI } from '@/services/api';\nexport default {\n  name: 'CampingSpots',\n  data() {\n    return {\n      campingSpots: [],\n      pagination: {\n        page: 1,\n        limit: 9,\n        total: 0,\n        pages: 0\n      },\n      filters: {\n        location: '',\n        priceRange: '',\n        capacity: '',\n        selectedAmenities: [],\n        sort: 'price_asc',\n        appliedAmenities: []\n      },\n      isLoading: false,\n      showAmenitiesDropdown: false,\n      showMapView: false,\n      amenitiesList: [{\n        id: 'wifi',\n        name: 'WiFi'\n      }, {\n        id: 'parking',\n        name: 'Parking'\n      }, {\n        id: 'shower',\n        name: 'Shower'\n      }, {\n        id: 'toilet',\n        name: 'Toilet'\n      }, {\n        id: 'firepit',\n        name: 'Fire Pit'\n      }, {\n        id: 'picnic_table',\n        name: 'Picnic Table'\n      }, {\n        id: 'pets_allowed',\n        name: 'Pets Allowed'\n      }, {\n        id: 'electricity',\n        name: 'Electricity'\n      }, {\n        id: 'water',\n        name: 'Water'\n      }, {\n        id: 'hiking',\n        name: 'Hiking Trails'\n      }],\n      isMobile: false,\n      mapLoaded: false,\n      map: null,\n      markers: [],\n      infoWindow: null\n    };\n  },\n  computed: {\n    pageTitle() {\n      if (this.filters.location) {\n        return `Camping Spots in ${this.filters.location}`;\n      }\n      return 'Explore Camping Spots';\n    },\n    hasActiveFilters() {\n      return this.filters.location || this.filters.priceRange || this.filters.capacity || this.filters.selectedAmenities.length > 0;\n    },\n    displayedPages() {\n      const {\n        page,\n        pages\n      } = this.pagination;\n      const maxPagesToShow = 5;\n      if (pages <= maxPagesToShow) {\n        // If total pages is less than the max to show, display all pages\n        return Array.from({\n          length: pages\n        }, (_, i) => i + 1);\n      }\n\n      // Calculate start and end page numbers\n      let startPage = Math.max(1, page - Math.floor(maxPagesToShow / 2));\n      let endPage = startPage + maxPagesToShow - 1;\n\n      // Adjust if end page exceeds total pages\n      if (endPage > pages) {\n        endPage = pages;\n        startPage = Math.max(1, endPage - maxPagesToShow + 1);\n      }\n      return Array.from({\n        length: endPage - startPage + 1\n      }, (_, i) => startPage + i);\n    }\n  },\n  methods: {\n    async fetchCampingSpots() {\n      try {\n        this.isLoading = true;\n\n        // Build query parameters\n        const params = {\n          page: this.pagination.page,\n          limit: this.pagination.limit\n        };\n        if (this.filters.location) {\n          params.location = this.filters.location;\n        }\n        if (this.filters.capacity) {\n          params.capacity = this.filters.capacity;\n        }\n\n        // Parse price range\n        if (this.filters.priceRange) {\n          const [min, max] = this.filters.priceRange.split('-');\n          if (min) params.minPrice = min;\n          if (max) params.maxPrice = max;\n        }\n\n        // Add amenities filter if any are selected\n        if (this.filters.appliedAmenities.length > 0) {\n          params.amenities = this.filters.appliedAmenities.join(',');\n        }\n\n        // Apply sorting\n        if (this.filters.sort) {\n          const [field, direction] = this.filters.sort.split('_');\n          params.sortBy = field;\n          params.sortDir = direction;\n        }\n        const response = await campingSpotAPI.getCampingSpots(params);\n        this.campingSpots = response.data.data || [];\n        this.pagination = response.data.pagination || {\n          page: 1,\n          limit: 9,\n          total: 0,\n          pages: 0\n        };\n      } catch (error) {\n        console.error('Error fetching camping spots:', error);\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: 'Failed to load camping spots'\n        });\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    toggleAmenitiesDropdown() {\n      this.showAmenitiesDropdown = !this.showAmenitiesDropdown;\n    },\n    applyAmenities() {\n      this.filters.appliedAmenities = [...this.filters.selectedAmenities];\n      this.showAmenitiesDropdown = false;\n      this.pagination.page = 1; // Reset to first page\n      this.fetchCampingSpots();\n    },\n    clearAmenities() {\n      this.filters.selectedAmenities = [];\n      this.filters.appliedAmenities = [];\n      this.showAmenitiesDropdown = false;\n      this.fetchCampingSpots();\n    },\n    clearFilter(filterName) {\n      if (filterName === 'selectedAmenities') {\n        this.filters.selectedAmenities = [];\n        this.filters.appliedAmenities = [];\n      } else {\n        this.filters[filterName] = '';\n      }\n      this.pagination.page = 1; // Reset to first page\n      this.fetchCampingSpots();\n    },\n    clearAllFilters() {\n      this.filters = {\n        location: '',\n        priceRange: '',\n        capacity: '',\n        selectedAmenities: [],\n        appliedAmenities: [],\n        sort: 'price_asc'\n      };\n      this.pagination.page = 1; // Reset to first page\n      this.fetchCampingSpots();\n    },\n    goToPage(page) {\n      if (page < 1 || page > this.pagination.pages) return;\n      this.pagination.page = page;\n      this.fetchCampingSpots();\n      // Scroll to top\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    },\n    toggleView() {\n      this.showMapView = !this.showMapView;\n    },\n    viewSpotDetails(id) {\n      this.$router.push(`/camping-spots/${id}`);\n    },\n    getFirstImage(images) {\n      // Parse images string or return a default image\n      try {\n        if (!images) return 'https://images.pexels.com/photos/6271625/pexels-photo-6271625.jpeg?auto=compress&cs=tinysrgb&w=1600';\n\n        // If images is a JSON string, parse it and get the first one\n        if (typeof images === 'string') {\n          const parsedImages = JSON.parse(images);\n          if (Array.isArray(parsedImages) && parsedImages.length > 0) {\n            return parsedImages[0];\n          }\n          return images; // Just return the string if not an array\n        }\n\n        // If images is already an array, get the first one\n        if (Array.isArray(images) && images.length > 0) {\n          return images[0];\n        }\n        return 'https://images.pexels.com/photos/6271625/pexels-photo-6271625.jpeg?auto=compress&cs=tinysrgb&w=1600';\n      } catch (e) {\n        console.error('Error parsing images:', e);\n        return 'https://images.pexels.com/photos/6271625/pexels-photo-6271625.jpeg?auto=compress&cs=tinysrgb&w=1600';\n      }\n    },\n    truncateDescription(description, length) {\n      if (!description) return '';\n      if (description.length <= length) return description;\n      return description.slice(0, length) + '...';\n    },\n    formatPrice(price) {\n      return new Intl.NumberFormat('de-DE', {\n        style: 'currency',\n        currency: 'EUR'\n      }).format(price);\n    },\n    formatPriceRange(range) {\n      if (!range) return '';\n      const [min, max] = range.split('-');\n      if (min && max) {\n        return `€${min} - €${max}`;\n      } else if (min) {\n        return `Over €${min}`;\n      } else if (max) {\n        return `Under €${max}`;\n      }\n      return range;\n    },\n    checkIfMobile() {\n      this.isMobile = window.innerWidth < 768;\n    },\n    // Apply URL query parameters\n    applyQueryParams() {\n      const query = this.$route.query;\n      if (query.location) {\n        this.filters.location = query.location;\n      }\n      if (query.capacity) {\n        this.filters.capacity = query.capacity;\n      }\n      if (query.minPrice && query.maxPrice) {\n        this.filters.priceRange = `${query.minPrice}-${query.maxPrice}`;\n      } else if (query.minPrice) {\n        this.filters.priceRange = `${query.minPrice}+`;\n      } else if (query.maxPrice) {\n        this.filters.priceRange = `0-${query.maxPrice}`;\n      }\n      if (query.amenities) {\n        const amenitiesList = query.amenities.split(',');\n        this.filters.selectedAmenities = amenitiesList;\n        this.filters.appliedAmenities = amenitiesList;\n      }\n      if (query.page) {\n        this.pagination.page = parseInt(query.page);\n      }\n      if (query.sort) {\n        this.filters.sort = query.sort;\n      }\n    },\n    initMap() {\n      if (typeof google === 'undefined' || !google.maps) {\n        console.error('Google Maps not loaded');\n        return;\n      }\n\n      // Initialize map\n      this.map = new google.maps.Map(document.getElementById('map'), {\n        center: {\n          lat: 0,\n          lng: 0\n        },\n        zoom: 2,\n        styles: [{\n          featureType: 'poi',\n          elementType: 'labels',\n          stylers: [{\n            visibility: 'off'\n          }]\n        }]\n      });\n\n      // Initialize info window\n      this.infoWindow = new google.maps.InfoWindow();\n\n      // Add markers for each camping spot\n      this.addMarkers();\n      this.mapLoaded = true;\n    },\n    addMarkers() {\n      // Clear existing markers\n      this.markers.forEach(marker => marker.setMap(null));\n      this.markers = [];\n\n      // Add new markers\n      this.campingSpots.forEach(spot => {\n        if (spot.latitude && spot.longitude) {\n          const marker = new google.maps.Marker({\n            position: {\n              lat: spot.latitude,\n              lng: spot.longitude\n            },\n            map: this.map,\n            title: spot.name\n          });\n\n          // Add click listener\n          marker.addListener('click', () => {\n            this.infoWindow.setContent(`\n              <div class=\"p-2\">\n                <h3 class=\"font-semibold\">${spot.name}</h3>\n                <p class=\"text-sm text-neutral-600\">${spot.location}</p>\n                <p class=\"text-sm font-medium mt-1\">${this.formatPrice(spot.pricePerNight)}/night</p>\n                <button \n                  onclick=\"window.location.href='/camping-spots/${spot.id}'\"\n                  class=\"mt-2 px-3 py-1 bg-primary-500 text-white rounded-md text-sm hover:bg-primary-600\"\n                >\n                  View Details\n                </button>\n              </div>\n            `);\n            this.infoWindow.open(this.map, marker);\n          });\n          this.markers.push(marker);\n        }\n      });\n\n      // Fit map bounds to show all markers\n      if (this.markers.length > 0) {\n        const bounds = new google.maps.LatLngBounds();\n        this.markers.forEach(marker => bounds.extend(marker.getPosition()));\n        this.map.fitBounds(bounds);\n      }\n    }\n  },\n  mounted() {\n    this.applyQueryParams();\n    this.fetchCampingSpots();\n    this.checkIfMobile();\n    window.addEventListener('resize', this.checkIfMobile);\n\n    // Close amenities dropdown when clicking outside\n    document.addEventListener('click', e => {\n      if (this.showAmenitiesDropdown && !e.target.closest('.amenities-dropdown')) {\n        this.showAmenitiesDropdown = false;\n      }\n    });\n\n    // Load Google Maps script\n    if (typeof google === 'undefined' || !google.maps) {\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.VUE_APP_GOOGLE_MAPS_API_KEY}&callback=initMap`;\n      script.async = true;\n      script.defer = true;\n      window.initMap = this.initMap;\n      document.head.appendChild(script);\n    } else {\n      this.initMap();\n    }\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.checkIfMobile);\n  },\n  watch: {\n    // Watch for filter changes\n    'filters.location'() {\n      this.pagination.page = 1;\n      this.fetchCampingSpots();\n    },\n    'filters.priceRange'() {\n      this.pagination.page = 1;\n      this.fetchCampingSpots();\n    },\n    'filters.capacity'() {\n      this.pagination.page = 1;\n      this.fetchCampingSpots();\n    },\n    'filters.sort'() {\n      this.fetchCampingSpots();\n    },\n    // Watch for route query changes\n    '$route.query'() {\n      this.applyQueryParams();\n      this.fetchCampingSpots();\n    },\n    campingSpots: {\n      handler() {\n        if (this.mapLoaded) {\n          this.addMarkers();\n        }\n      },\n      deep: true\n    }\n  }\n};","map":{"version":3,"names":["campingSpotAPI","name","data","campingSpots","pagination","page","limit","total","pages","filters","location","priceRange","capacity","selectedAmenities","sort","appliedAmenities","isLoading","showAmenitiesDropdown","showMapView","amenitiesList","id","isMobile","mapLoaded","map","markers","infoWindow","computed","pageTitle","hasActiveFilters","length","displayedPages","maxPagesToShow","Array","from","_","i","startPage","Math","max","floor","endPage","methods","fetchCampingSpots","params","min","split","minPrice","maxPrice","amenities","join","field","direction","sortBy","sortDir","response","getCampingSpots","error","console","$store","commit","type","message","toggleAmenitiesDropdown","applyAmenities","clearAmenities","clearFilter","filterName","clearAllFilters","goToPage","window","scrollTo","top","behavior","toggleView","viewSpotDetails","$router","push","getFirstImage","images","parsedImages","JSON","parse","isArray","e","truncateDescription","description","slice","formatPrice","price","Intl","NumberFormat","style","currency","format","formatPriceRange","range","checkIfMobile","innerWidth","applyQueryParams","query","$route","parseInt","initMap","google","maps","Map","document","getElementById","center","lat","lng","zoom","styles","featureType","elementType","stylers","visibility","InfoWindow","addMarkers","forEach","marker","setMap","spot","latitude","longitude","Marker","position","title","addListener","setContent","pricePerNight","open","bounds","LatLngBounds","extend","getPosition","fitBounds","mounted","addEventListener","target","closest","script","createElement","src","process","env","VUE_APP_GOOGLE_MAPS_API_KEY","async","defer","head","appendChild","beforeDestroy","removeEventListener","watch","filters.location","filters.priceRange","filters.capacity","filters.sort","$route.query","handler","deep"],"sources":["src/views/camping/CampingSpots.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-neutral-50\">\n    <!-- Filter Header -->\n    <div class=\"bg-white shadow-sm py-4 sticky top-16 z-30\">\n      <div class=\"container mx-auto px-4\">\n        <div class=\"flex flex-col md:flex-row md:items-center justify-between\">\n          <h1 class=\"text-2xl font-bold mb-4 md:mb-0\">{{ pageTitle }}</h1>\n          \n          <div class=\"flex flex-wrap gap-2\">\n            <!-- Location filter -->\n            <div class=\"relative\">\n              <input\n                type=\"text\"\n                v-model=\"filters.location\"\n                placeholder=\"Location\"\n                class=\"form-input py-2 pl-8 pr-4 rounded-full text-sm\"\n              >\n              <svg class=\"h-4 w-4 text-neutral-500 absolute left-3 top-1/2 transform -translate-y-1/2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z\" clip-rule=\"evenodd\" />\n              </svg>\n            </div>\n            \n            <!-- Price range filter -->\n            <div class=\"relative\">\n              <select v-model=\"filters.priceRange\" class=\"form-input py-2 pl-8 pr-4 rounded-full text-sm\">\n                <option value=\"\">Any price</option>\n                <option value=\"0-50\">Under $50</option>\n                <option value=\"50-100\">$50 - $100</option>\n                <option value=\"100-200\">$100 - $200</option>\n                <option value=\"200+\">$200+</option>\n              </select>\n              <svg class=\"h-4 w-4 text-neutral-500 absolute left-3 top-1/2 transform -translate-y-1/2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path d=\"M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z\" />\n                <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z\" clip-rule=\"evenodd\" />\n              </svg>\n            </div>\n            \n            <!-- Capacity filter -->\n            <div class=\"relative\">\n              <select v-model=\"filters.capacity\" class=\"form-input py-2 pl-8 pr-4 rounded-full text-sm\">\n                <option value=\"\">Any capacity</option>\n                <option value=\"1\">1 Person</option>\n                <option value=\"2\">2 People</option>\n                <option value=\"3\">3 People</option>\n                <option value=\"4\">4 People</option>\n                <option value=\"5\">5+ People</option>\n              </select>\n              <svg class=\"h-4 w-4 text-neutral-500 absolute left-3 top-1/2 transform -translate-y-1/2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path d=\"M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z\" />\n              </svg>\n            </div>\n            \n            <!-- Amenities filter (dropdown) -->\n            <div class=\"relative\">\n              <button \n                @click=\"toggleAmenitiesDropdown\" \n                class=\"form-input py-2 pl-8 pr-4 rounded-full text-sm flex items-center\"\n              >\n                <span>Amenities</span>\n                <svg class=\"h-4 w-4 ml-1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                </svg>\n              </button>\n              <svg class=\"h-4 w-4 text-neutral-500 absolute left-3 top-1/2 transform -translate-y-1/2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clip-rule=\"evenodd\" />\n              </svg>\n              \n              <!-- Amenities dropdown -->\n              <div v-if=\"showAmenitiesDropdown\" class=\"absolute top-full mt-2 left-0 bg-white rounded-lg shadow-lg p-3 z-10 w-56\">\n                <div v-for=\"amenity in amenitiesList\" :key=\"amenity.id\" class=\"flex items-center mb-2\">\n                  <input\n                    type=\"checkbox\"\n                    :id=\"`amenity-${amenity.id}`\"\n                    v-model=\"filters.selectedAmenities\"\n                    :value=\"amenity.id\"\n                    class=\"mr-2\"\n                  >\n                  <label :for=\"`amenity-${amenity.id}`\" class=\"text-sm\">{{ amenity.name }}</label>\n                </div>\n                <div class=\"mt-3 flex justify-end\">\n                  <button @click=\"clearAmenities\" class=\"text-xs text-neutral-500 mr-2\">Clear</button>\n                  <button @click=\"applyAmenities\" class=\"text-xs text-primary-500 font-medium\">Apply</button>\n                </div>\n              </div>\n            </div>\n            \n            <!-- Sort dropdown -->\n            <div class=\"relative ml-auto\">\n              <select v-model=\"filters.sort\" class=\"form-input py-2 pl-8 pr-4 rounded-full text-sm\">\n                <option value=\"price_asc\">Price: Low to High</option>\n                <option value=\"price_desc\">Price: High to Low</option>\n                <option value=\"rating_desc\">Highest Rated</option>\n                <option value=\"newest\">Newest</option>\n              </select>\n              <svg class=\"h-4 w-4 text-neutral-500 absolute left-3 top-1/2 transform -translate-y-1/2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path d=\"M5 4a1 1 0 00-2 0v7.268a2 2 0 000 3.464V16a1 1 0 102 0v-1.268a2 2 0 000-3.464V4zM11 4a1 1 0 10-2 0v1.268a2 2 0 000 3.464V16a1 1 0 102 0V8.732a2 2 0 000-3.464V4zM16 3a1 1 0 011 1v7.268a2 2 0 010 3.464V16a1 1 0 11-2 0v-1.268a2 2 0 010-3.464V4a1 1 0 011-1z\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Main Content -->\n    <div class=\"container mx-auto px-4 py-8\">\n      <div class=\"md:flex\">\n        <!-- Active Filters -->\n        <div v-if=\"hasActiveFilters\" class=\"mb-6 w-full\">\n          <div class=\"flex flex-wrap gap-2 items-center\">\n            <span class=\"text-sm font-medium text-neutral-600\">Active filters:</span>\n            \n            <button \n              v-if=\"filters.location\" \n              @click=\"clearFilter('location')\" \n              class=\"inline-flex items-center bg-primary-50 text-primary-700 rounded-full px-3 py-1 text-xs\"\n            >\n              Location: {{ filters.location }}\n              <svg class=\"h-3 w-3 ml-1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n              </svg>\n            </button>\n            \n            <button \n              v-if=\"filters.capacity\" \n              @click=\"clearFilter('capacity')\" \n              class=\"inline-flex items-center bg-primary-50 text-primary-700 rounded-full px-3 py-1 text-xs\"\n            >\n              Capacity: {{ filters.capacity }}+ people\n              <svg class=\"h-3 w-3 ml-1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n              </svg>\n            </button>\n            \n            <button \n              v-if=\"filters.priceRange\" \n              @click=\"clearFilter('priceRange')\" \n              class=\"inline-flex items-center bg-primary-50 text-primary-700 rounded-full px-3 py-1 text-xs\"\n            >\n              Price: {{ formatPriceRange(filters.priceRange) }}\n              <svg class=\"h-3 w-3 ml-1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n              </svg>\n            </button>\n            \n            <button \n              v-if=\"filters.selectedAmenities.length > 0\" \n              @click=\"clearFilter('selectedAmenities')\" \n              class=\"inline-flex items-center bg-primary-50 text-primary-700 rounded-full px-3 py-1 text-xs\"\n            >\n              {{ filters.selectedAmenities.length }} amenities selected\n              <svg class=\"h-3 w-3 ml-1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n              </svg>\n            </button>\n            \n            <button \n              @click=\"clearAllFilters\" \n              class=\"text-neutral-600 text-xs hover:text-neutral-800 underline ml-2\"\n            >\n              Clear all filters\n            </button>\n          </div>\n        </div>\n        \n        <!-- Map View Toggle -->\n        <div class=\"mb-6 flex justify-end w-full\">\n          <button \n            @click=\"toggleView\" \n            class=\"inline-flex items-center text-sm font-medium text-primary-600 hover:text-primary-800\"\n          >\n            <svg v-if=\"showMapView\" class=\"h-5 w-5 mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\" clip-rule=\"evenodd\" />\n            </svg>\n            <svg v-else class=\"h-5 w-5 mr-1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M12 1.586l-4 4v12.828l4-4V1.586zM3.707 3.293A1 1 0 002 4v10a1 1 0 00.293.707L6 18.414V5.586L3.707 3.293zM17.707 5.293L14 1.586v12.828l2.293 2.293A1 1 0 0018 16V6a1 1 0 00-.293-.707z\" clip-rule=\"evenodd\" />\n            </svg>\n            {{ showMapView ? 'Show List View' : 'Show Map View' }}\n          </button>\n        </div>\n      </div>\n      \n      <!-- Map and List Views -->\n      <div class=\"md:flex md:space-x-8\">\n        <!-- Camping Spots List -->\n        <div v-if=\"!showMapView || isMobile\" class=\"md:w-full\">\n          <div v-if=\"isLoading\" class=\"flex justify-center py-20\">\n            <svg class=\"animate-spin h-10 w-10 text-primary-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n          </div>\n          \n          <div v-else-if=\"campingSpots.length === 0\" class=\"text-center py-20\">\n            <svg class=\"w-16 h-16 text-neutral-300 mx-auto mb-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <h3 class=\"text-xl font-semibold mb-2\">No camping spots found</h3>\n            <p class=\"text-neutral-600 mb-6\">Try adjusting your filters to find more options</p>\n            <button @click=\"clearAllFilters\" class=\"btn-primary\">Clear all filters</button>\n          </div>\n          \n          <div v-else class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            <div \n              v-for=\"spot in campingSpots\" \n              :key=\"spot.id\" \n              class=\"card group cursor-pointer hover:transform hover:scale-[1.02] transition-all duration-300\"\n              @click=\"viewSpotDetails(spot.id)\"\n            >\n              <div class=\"relative h-48 md:h-56 rounded-lg overflow-hidden mb-4\">\n                <img :src=\"getFirstImage(spot.images)\" :alt=\"spot.name\" class=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-500\">\n                <div class=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent text-white p-4\">\n                  <div v-if=\"spot.averageRating\" class=\"flex items-center bg-black/50 rounded-full px-2 py-1 w-fit\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                    </svg>\n                    <span class=\"ml-1 text-xs\">{{ spot.averageRating.toFixed(1) }}</span>\n                    <span class=\"ml-1 text-xs\">({{ spot.reviewCount || 0 }})</span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"p-2\">\n                <h3 class=\"text-xl font-bold mb-2\">{{ spot.name }}</h3>\n                <p class=\"text-neutral-600 mb-2 flex items-center\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1 text-neutral-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z\" clip-rule=\"evenodd\" />\n                  </svg>\n                  {{ spot.location }}\n                </p>\n                <p class=\"text-neutral-600 mb-4\">{{ truncateDescription(spot.description, 100) }}</p>\n                <div class=\"flex justify-between items-center\">\n                  <div>\n                    <span class=\"font-bold text-lg\">{{ formatPrice(spot.pricePerNight) }}</span>\n                    <span class=\"text-neutral-600\">/night</span>\n                  </div>\n                  <router-link :to=\"`/camping-spots/${spot.id}`\" class=\"btn-primary\">View Details</router-link>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Pagination -->\n          <div v-if=\"pagination.pages > 1\" class=\"mt-10 flex justify-center\">\n            <div class=\"flex space-x-1\">\n              <button \n                @click=\"goToPage(pagination.page - 1)\" \n                :disabled=\"pagination.page === 1\"\n                :class=\"[\n                  'px-3 py-1 rounded-md',\n                  pagination.page === 1 \n                    ? 'bg-neutral-100 text-neutral-400 cursor-not-allowed' \n                    : 'bg-white text-neutral-700 hover:bg-neutral-100'\n                ]\"\n              >\n                <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n                </svg>\n              </button>\n              \n              <button \n                v-for=\"page in displayedPages\" \n                :key=\"page\" \n                @click=\"goToPage(page)\"\n                :class=\"[\n                  'px-3 py-1 rounded-md',\n                  page === pagination.page \n                    ? 'bg-primary-500 text-white' \n                    : 'bg-white text-neutral-700 hover:bg-neutral-100'\n                ]\"\n              >\n                {{ page }}\n              </button>\n              \n              <button \n                @click=\"goToPage(pagination.page + 1)\" \n                :disabled=\"pagination.page === pagination.pages\"\n                :class=\"[\n                  'px-3 py-1 rounded-md',\n                  pagination.page === pagination.pages \n                    ? 'bg-neutral-100 text-neutral-400 cursor-not-allowed' \n                    : 'bg-white text-neutral-700 hover:bg-neutral-100'\n                ]\"\n              >\n                <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clip-rule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Map View -->\n        <div v-if=\"showMapView && !isMobile\" class=\"w-full h-[800px] bg-neutral-100 rounded-xl relative overflow-hidden\">\n          <div v-if=\"!mapLoaded\" class=\"absolute inset-0 flex items-center justify-center text-neutral-500\">\n            <div class=\"text-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-16 w-16 mx-auto mb-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7\" />\n              </svg>\n              <p class=\"text-xl font-semibold\">Loading Map...</p>\n            </div>\n          </div>\n          <div id=\"map\" class=\"w-full h-full\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { campingSpotAPI } from '@/services/api'\n\nexport default {\n  name: 'CampingSpots',\n  data() {\n    return {\n      campingSpots: [],\n      pagination: {\n        page: 1,\n        limit: 9,\n        total: 0,\n        pages: 0\n      },\n      filters: {\n        location: '',\n        priceRange: '',\n        capacity: '',\n        selectedAmenities: [],\n        sort: 'price_asc',\n        appliedAmenities: []\n      },\n      isLoading: false,\n      showAmenitiesDropdown: false,\n      showMapView: false,\n      amenitiesList: [\n        { id: 'wifi', name: 'WiFi' },\n        { id: 'parking', name: 'Parking' },\n        { id: 'shower', name: 'Shower' },\n        { id: 'toilet', name: 'Toilet' },\n        { id: 'firepit', name: 'Fire Pit' },\n        { id: 'picnic_table', name: 'Picnic Table' },\n        { id: 'pets_allowed', name: 'Pets Allowed' },\n        { id: 'electricity', name: 'Electricity' },\n        { id: 'water', name: 'Water' },\n        { id: 'hiking', name: 'Hiking Trails' }\n      ],\n      isMobile: false,\n      mapLoaded: false,\n      map: null,\n      markers: [],\n      infoWindow: null\n    }\n  },\n  computed: {\n    pageTitle() {\n      if (this.filters.location) {\n        return `Camping Spots in ${this.filters.location}`\n      }\n      return 'Explore Camping Spots'\n    },\n    hasActiveFilters() {\n      return (\n        this.filters.location ||\n        this.filters.priceRange ||\n        this.filters.capacity ||\n        this.filters.selectedAmenities.length > 0\n      )\n    },\n    displayedPages() {\n      const { page, pages } = this.pagination\n      const maxPagesToShow = 5\n      \n      if (pages <= maxPagesToShow) {\n        // If total pages is less than the max to show, display all pages\n        return Array.from({ length: pages }, (_, i) => i + 1)\n      }\n      \n      // Calculate start and end page numbers\n      let startPage = Math.max(1, page - Math.floor(maxPagesToShow / 2))\n      let endPage = startPage + maxPagesToShow - 1\n      \n      // Adjust if end page exceeds total pages\n      if (endPage > pages) {\n        endPage = pages\n        startPage = Math.max(1, endPage - maxPagesToShow + 1)\n      }\n      \n      return Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i)\n    }\n  },\n  methods: {\n    async fetchCampingSpots() {\n      try {\n        this.isLoading = true\n        \n        // Build query parameters\n        const params = {\n          page: this.pagination.page,\n          limit: this.pagination.limit\n        }\n        \n        if (this.filters.location) {\n          params.location = this.filters.location\n        }\n        \n        if (this.filters.capacity) {\n          params.capacity = this.filters.capacity\n        }\n        \n        // Parse price range\n        if (this.filters.priceRange) {\n          const [min, max] = this.filters.priceRange.split('-')\n          if (min) params.minPrice = min\n          if (max) params.maxPrice = max\n        }\n        \n        // Add amenities filter if any are selected\n        if (this.filters.appliedAmenities.length > 0) {\n          params.amenities = this.filters.appliedAmenities.join(',')\n        }\n        \n        // Apply sorting\n        if (this.filters.sort) {\n          const [field, direction] = this.filters.sort.split('_')\n          params.sortBy = field\n          params.sortDir = direction\n        }\n        \n        const response = await campingSpotAPI.getCampingSpots(params)\n        \n        this.campingSpots = response.data.data || []\n        this.pagination = response.data.pagination || {\n          page: 1,\n          limit: 9,\n          total: 0,\n          pages: 0\n        }\n      } catch (error) {\n        console.error('Error fetching camping spots:', error)\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: 'Failed to load camping spots'\n        })\n      } finally {\n        this.isLoading = false\n      }\n    },\n    \n    toggleAmenitiesDropdown() {\n      this.showAmenitiesDropdown = !this.showAmenitiesDropdown\n    },\n    \n    applyAmenities() {\n      this.filters.appliedAmenities = [...this.filters.selectedAmenities]\n      this.showAmenitiesDropdown = false\n      this.pagination.page = 1 // Reset to first page\n      this.fetchCampingSpots()\n    },\n    \n    clearAmenities() {\n      this.filters.selectedAmenities = []\n      this.filters.appliedAmenities = []\n      this.showAmenitiesDropdown = false\n      this.fetchCampingSpots()\n    },\n    \n    clearFilter(filterName) {\n      if (filterName === 'selectedAmenities') {\n        this.filters.selectedAmenities = []\n        this.filters.appliedAmenities = []\n      } else {\n        this.filters[filterName] = ''\n      }\n      this.pagination.page = 1 // Reset to first page\n      this.fetchCampingSpots()\n    },\n    \n    clearAllFilters() {\n      this.filters = {\n        location: '',\n        priceRange: '',\n        capacity: '',\n        selectedAmenities: [],\n        appliedAmenities: [],\n        sort: 'price_asc'\n      }\n      this.pagination.page = 1 // Reset to first page\n      this.fetchCampingSpots()\n    },\n    \n    goToPage(page) {\n      if (page < 1 || page > this.pagination.pages) return\n      this.pagination.page = page\n      this.fetchCampingSpots()\n      // Scroll to top\n      window.scrollTo({ top: 0, behavior: 'smooth' })\n    },\n    \n    toggleView() {\n      this.showMapView = !this.showMapView\n    },\n    \n    viewSpotDetails(id) {\n      this.$router.push(`/camping-spots/${id}`)\n    },\n    \n    getFirstImage(images) {\n      // Parse images string or return a default image\n      try {\n        if (!images) return 'https://images.pexels.com/photos/6271625/pexels-photo-6271625.jpeg?auto=compress&cs=tinysrgb&w=1600'\n        \n        // If images is a JSON string, parse it and get the first one\n        if (typeof images === 'string') {\n          const parsedImages = JSON.parse(images)\n          if (Array.isArray(parsedImages) && parsedImages.length > 0) {\n            return parsedImages[0]\n          }\n          return images // Just return the string if not an array\n        }\n        \n        // If images is already an array, get the first one\n        if (Array.isArray(images) && images.length > 0) {\n          return images[0]\n        }\n        \n        return 'https://images.pexels.com/photos/6271625/pexels-photo-6271625.jpeg?auto=compress&cs=tinysrgb&w=1600'\n      } catch (e) {\n        console.error('Error parsing images:', e)\n        return 'https://images.pexels.com/photos/6271625/pexels-photo-6271625.jpeg?auto=compress&cs=tinysrgb&w=1600'\n      }\n    },\n    \n    truncateDescription(description, length) {\n      if (!description) return ''\n      if (description.length <= length) return description\n      return description.slice(0, length) + '...'\n    },\n    \n    formatPrice(price) {\n      return new Intl.NumberFormat('de-DE', {\n        style: 'currency',\n        currency: 'EUR'\n      }).format(price)\n    },\n    \n    formatPriceRange(range) {\n      if (!range) return ''\n      \n      const [min, max] = range.split('-')\n      \n      if (min && max) {\n        return `€${min} - €${max}`\n      } else if (min) {\n        return `Over €${min}`\n      } else if (max) {\n        return `Under €${max}`\n      }\n      \n      return range\n    },\n    \n    checkIfMobile() {\n      this.isMobile = window.innerWidth < 768\n    },\n    \n    // Apply URL query parameters\n    applyQueryParams() {\n      const query = this.$route.query\n      \n      if (query.location) {\n        this.filters.location = query.location\n      }\n      \n      if (query.capacity) {\n        this.filters.capacity = query.capacity\n      }\n      \n      if (query.minPrice && query.maxPrice) {\n        this.filters.priceRange = `${query.minPrice}-${query.maxPrice}`\n      } else if (query.minPrice) {\n        this.filters.priceRange = `${query.minPrice}+`\n      } else if (query.maxPrice) {\n        this.filters.priceRange = `0-${query.maxPrice}`\n      }\n      \n      if (query.amenities) {\n        const amenitiesList = query.amenities.split(',')\n        this.filters.selectedAmenities = amenitiesList\n        this.filters.appliedAmenities = amenitiesList\n      }\n      \n      if (query.page) {\n        this.pagination.page = parseInt(query.page)\n      }\n      \n      if (query.sort) {\n        this.filters.sort = query.sort\n      }\n    },\n    \n    initMap() {\n      if (typeof google === 'undefined' || !google.maps) {\n        console.error('Google Maps not loaded')\n        return\n      }\n\n      // Initialize map\n      this.map = new google.maps.Map(document.getElementById('map'), {\n        center: { lat: 0, lng: 0 },\n        zoom: 2,\n        styles: [\n          {\n            featureType: 'poi',\n            elementType: 'labels',\n            stylers: [{ visibility: 'off' }]\n          }\n        ]\n      })\n\n      // Initialize info window\n      this.infoWindow = new google.maps.InfoWindow()\n\n      // Add markers for each camping spot\n      this.addMarkers()\n\n      this.mapLoaded = true\n    },\n\n    addMarkers() {\n      // Clear existing markers\n      this.markers.forEach(marker => marker.setMap(null))\n      this.markers = []\n\n      // Add new markers\n      this.campingSpots.forEach(spot => {\n        if (spot.latitude && spot.longitude) {\n          const marker = new google.maps.Marker({\n            position: { lat: spot.latitude, lng: spot.longitude },\n            map: this.map,\n            title: spot.name\n          })\n\n          // Add click listener\n          marker.addListener('click', () => {\n            this.infoWindow.setContent(`\n              <div class=\"p-2\">\n                <h3 class=\"font-semibold\">${spot.name}</h3>\n                <p class=\"text-sm text-neutral-600\">${spot.location}</p>\n                <p class=\"text-sm font-medium mt-1\">${this.formatPrice(spot.pricePerNight)}/night</p>\n                <button \n                  onclick=\"window.location.href='/camping-spots/${spot.id}'\"\n                  class=\"mt-2 px-3 py-1 bg-primary-500 text-white rounded-md text-sm hover:bg-primary-600\"\n                >\n                  View Details\n                </button>\n              </div>\n            `)\n            this.infoWindow.open(this.map, marker)\n          })\n\n          this.markers.push(marker)\n        }\n      })\n\n      // Fit map bounds to show all markers\n      if (this.markers.length > 0) {\n        const bounds = new google.maps.LatLngBounds()\n        this.markers.forEach(marker => bounds.extend(marker.getPosition()))\n        this.map.fitBounds(bounds)\n      }\n    }\n  },\n  mounted() {\n    this.applyQueryParams()\n    this.fetchCampingSpots()\n    this.checkIfMobile()\n    window.addEventListener('resize', this.checkIfMobile)\n    \n    // Close amenities dropdown when clicking outside\n    document.addEventListener('click', (e) => {\n      if (this.showAmenitiesDropdown && !e.target.closest('.amenities-dropdown')) {\n        this.showAmenitiesDropdown = false\n      }\n    })\n    \n    // Load Google Maps script\n    if (typeof google === 'undefined' || !google.maps) {\n      const script = document.createElement('script')\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.VUE_APP_GOOGLE_MAPS_API_KEY}&callback=initMap`\n      script.async = true\n      script.defer = true\n      window.initMap = this.initMap\n      document.head.appendChild(script)\n    } else {\n      this.initMap()\n    }\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.checkIfMobile)\n  },\n  watch: {\n    // Watch for filter changes\n    'filters.location'() {\n      this.pagination.page = 1\n      this.fetchCampingSpots()\n    },\n    'filters.priceRange'() {\n      this.pagination.page = 1\n      this.fetchCampingSpots()\n    },\n    'filters.capacity'() {\n      this.pagination.page = 1\n      this.fetchCampingSpots()\n    },\n    'filters.sort'() {\n      this.fetchCampingSpots()\n    },\n    // Watch for route query changes\n    '$route.query'() {\n      this.applyQueryParams()\n      this.fetchCampingSpots()\n    },\n    campingSpots: {\n      handler() {\n        if (this.mapLoaded) {\n          this.addMarkers()\n        }\n      },\n      deep: true\n    }\n  }\n}\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}