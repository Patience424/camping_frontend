{"ast":null,"code":"export default {\n  name: 'UserBookings',\n  data() {\n    return {\n      bookings: [],\n      isLoading: true,\n      isCancelling: null,\n      statusStyles: {\n        PENDING: {\n          bg: 'bg-yellow-100 text-yellow-800'\n        },\n        CONFIRMED: {\n          bg: 'bg-green-100 text-green-800'\n        },\n        CANCELLED: {\n          bg: 'bg-red-100 text-red-800'\n        },\n        COMPLETED: {\n          bg: 'bg-blue-100 text-blue-800'\n        }\n      }\n    };\n  },\n  methods: {\n    async fetchBookings() {\n      try {\n        this.isLoading = true;\n        const response = await this.$axios.get('/bookings');\n        this.bookings = response.data;\n      } catch (error) {\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: 'Failed to load bookings'\n        });\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async cancelBooking(id) {\n      try {\n        if (!confirm('Are you sure you want to cancel this booking?')) return;\n        this.isCancelling = id;\n        await this.$axios.put(`/bookings/${id}/cancel`);\n\n        // Update booking status in the list\n        const index = this.bookings.findIndex(b => b.id === id);\n        if (index !== -1) {\n          this.bookings[index].status = 'CANCELLED';\n        }\n        this.$store.commit('setNotification', {\n          type: 'success',\n          message: 'Booking cancelled successfully'\n        });\n      } catch (error) {\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: error.response?.data?.message || 'Failed to cancel booking'\n        });\n      } finally {\n        this.isCancelling = null;\n      }\n    },\n    getFirstImage(images) {\n      try {\n        if (!images) return 'https://images.pexels.com/photos/6271625/pexels-photo-6271625.jpeg?auto=compress&cs=tinysrgb&w=1600';\n        if (typeof images === 'string') {\n          const parsedImages = JSON.parse(images);\n          if (Array.isArray(parsedImages) && parsedImages.length > 0) {\n            return parsedImages[0];\n          }\n          return images;\n        }\n        if (Array.isArray(images) && images.length > 0) {\n          return images[0];\n        }\n        return 'https://images.pexels.com/photos/6271625/pexels-photo-6271625.jpeg?auto=compress&cs=tinysrgb&w=1600';\n      } catch (e) {\n        return 'https://images.pexels.com/photos/6271625/pexels-photo-6271625.jpeg?auto=compress&cs=tinysrgb&w=1600';\n      }\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString('en-US', {\n        weekday: 'short',\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric'\n      });\n    },\n    formatPrice(price) {\n      return new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD'\n      }).format(price);\n    },\n    calculateNights(startDate, endDate) {\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      const diffTime = Math.abs(end - start);\n      return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    },\n    canReview(booking) {\n      return booking.status === 'COMPLETED' && new Date(booking.endDate) < new Date();\n    }\n  },\n  mounted() {\n    this.fetchBookings();\n  }\n};","map":{"version":3,"names":["name","data","bookings","isLoading","isCancelling","statusStyles","PENDING","bg","CONFIRMED","CANCELLED","COMPLETED","methods","fetchBookings","response","$axios","get","error","$store","commit","type","message","cancelBooking","id","confirm","put","index","findIndex","b","status","getFirstImage","images","parsedImages","JSON","parse","Array","isArray","length","e","formatDate","date","Date","toLocaleDateString","weekday","month","day","year","formatPrice","price","Intl","NumberFormat","style","currency","format","calculateNights","startDate","endDate","start","end","diffTime","Math","abs","ceil","canReview","booking","mounted"],"sources":["src/views/user/UserBookings.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-neutral-50 py-8\">\n    <div class=\"container mx-auto px-4\">\n      <h1 class=\"text-3xl font-bold mb-8\">Your Bookings</h1>\n      \n      <!-- Loading State -->\n      <div v-if=\"isLoading\" class=\"flex justify-center py-20\">\n        <svg class=\"animate-spin h-10 w-10 text-primary-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n      </div>\n      \n      <!-- No Bookings -->\n      <div v-else-if=\"bookings.length === 0\" class=\"text-center py-20\">\n        <svg class=\"w-16 h-16 text-neutral-300 mx-auto mb-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n        </svg>\n        <h3 class=\"text-xl font-semibold mb-2\">No bookings yet</h3>\n        <p class=\"text-neutral-600 mb-6\">Start exploring camping spots and plan your next adventure!</p>\n        <router-link to=\"/camping-spots\" class=\"btn-primary\">\n          Explore Camping Spots\n        </router-link>\n      </div>\n      \n      <!-- Bookings List -->\n      <div v-else class=\"space-y-6\">\n        <div \n          v-for=\"booking in bookings\" \n          :key=\"booking.id\" \n          class=\"bg-white rounded-lg shadow-md overflow-hidden\"\n        >\n          <div class=\"md:flex\">\n            <!-- Camping Spot Image -->\n            <div class=\"md:w-1/4 h-48 md:h-auto relative\">\n              <img \n                :src=\"getFirstImage(booking.campingSpot.images)\" \n                :alt=\"booking.campingSpot.name\"\n                class=\"w-full h-full object-cover\"\n              >\n              <div \n                :class=\"[\n                  'absolute top-4 right-4 px-3 py-1 rounded-full text-sm font-medium',\n                  statusStyles[booking.status].bg\n                ]\"\n              >\n                {{ booking.status }}\n              </div>\n            </div>\n            \n            <!-- Booking Details -->\n            <div class=\"p-6 md:w-3/4\">\n              <div class=\"md:flex justify-between items-start\">\n                <div>\n                  <h3 class=\"text-xl font-bold mb-2\">{{ booking.campingSpot.name }}</h3>\n                  <p class=\"text-neutral-600 flex items-center mb-4\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fill-rule=\"evenodd\" d=\"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z\" clip-rule=\"evenodd\" />\n                    </svg>\n                    {{ booking.campingSpot.location }}\n                  </p>\n                </div>\n                \n                <div class=\"text-right\">\n                  <p class=\"text-2xl font-bold text-primary-600\">\n                    {{ formatPrice(booking.totalPrice) }}\n                  </p>\n                  <p class=\"text-sm text-neutral-500\">\n                    {{ calculateNights(booking.startDate, booking.endDate) }} nights\n                  </p>\n                </div>\n              </div>\n              \n              <div class=\"flex flex-wrap gap-4 mb-4\">\n                <div>\n                  <p class=\"text-sm text-neutral-500\">Check-in</p>\n                  <p class=\"font-medium\">{{ formatDate(booking.startDate) }}</p>\n                </div>\n                <div>\n                  <p class=\"text-sm text-neutral-500\">Check-out</p>\n                  <p class=\"font-medium\">{{ formatDate(booking.endDate) }}</p>\n                </div>\n                <div>\n                  <p class=\"text-sm text-neutral-500\">Guests</p>\n                  <p class=\"font-medium\">{{ booking.guestCount }} {{ booking.guestCount === 1 ? 'guest' : 'guests' }}</p>\n                </div>\n              </div>\n              \n              <div class=\"flex flex-wrap gap-4\">\n                <router-link \n                  :to=\"`/bookings/${booking.id}`\" \n                  class=\"btn-primary\"\n                >\n                  View Details\n                </router-link>\n                \n                <button \n                  v-if=\"booking.status === 'PENDING' || booking.status === 'CONFIRMED'\"\n                  @click=\"cancelBooking(booking.id)\"\n                  class=\"btn-outline text-error border-error hover:bg-error/5\"\n                  :disabled=\"isCancelling === booking.id\"\n                >\n                  <span v-if=\"isCancelling === booking.id\">\n                    <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 inline-block\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                      <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    Cancelling...\n                  </span>\n                  <span v-else>Cancel Booking</span>\n                </button>\n                \n                <router-link \n                  v-if=\"canReview(booking)\"\n                  :to=\"`/camping-spots/${booking.campingSpot.id}?review=true`\" \n                  class=\"btn-outline\"\n                >\n                  Write a Review\n                </router-link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'UserBookings',\n  data() {\n    return {\n      bookings: [],\n      isLoading: true,\n      isCancelling: null,\n      statusStyles: {\n        PENDING: {\n          bg: 'bg-yellow-100 text-yellow-800'\n        },\n        CONFIRMED: {\n          bg: 'bg-green-100 text-green-800'\n        },\n        CANCELLED: {\n          bg: 'bg-red-100 text-red-800'\n        },\n        COMPLETED: {\n          bg: 'bg-blue-100 text-blue-800'\n        }\n      }\n    }\n  },\n  methods: {\n    async fetchBookings() {\n      try {\n        this.isLoading = true\n        const response = await this.$axios.get('/bookings')\n        this.bookings = response.data\n      } catch (error) {\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: 'Failed to load bookings'\n        })\n      } finally {\n        this.isLoading = false\n      }\n    },\n    \n    async cancelBooking(id) {\n      try {\n        if (!confirm('Are you sure you want to cancel this booking?')) return\n        \n        this.isCancelling = id\n        await this.$axios.put(`/bookings/${id}/cancel`)\n        \n        // Update booking status in the list\n        const index = this.bookings.findIndex(b => b.id === id)\n        if (index !== -1) {\n          this.bookings[index].status = 'CANCELLED'\n        }\n        \n        this.$store.commit('setNotification', {\n          type: 'success',\n          message: 'Booking cancelled successfully'\n        })\n      } catch (error) {\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: error.response?.data?.message || 'Failed to cancel booking'\n        })\n      } finally {\n        this.isCancelling = null\n      }\n    },\n    \n    getFirstImage(images) {\n      try {\n        if (!images) return 'https://images.pexels.com/photos/6271625/pexels-photo-6271625.jpeg?auto=compress&cs=tinysrgb&w=1600'\n        \n        if (typeof images === 'string') {\n          const parsedImages = JSON.parse(images)\n          if (Array.isArray(parsedImages) && parsedImages.length > 0) {\n            return parsedImages[0]\n          }\n          return images\n        }\n        \n        if (Array.isArray(images) && images.length > 0) {\n          return images[0]\n        }\n        \n        return 'https://images.pexels.com/photos/6271625/pexels-photo-6271625.jpeg?auto=compress&cs=tinysrgb&w=1600'\n      } catch (e) {\n        return 'https://images.pexels.com/photos/6271625/pexels-photo-6271625.jpeg?auto=compress&cs=tinysrgb&w=1600'\n      }\n    },\n    \n    formatDate(date) {\n      return new Date(date).toLocaleDateString('en-US', {\n        weekday: 'short',\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric'\n      })\n    },\n    \n    formatPrice(price) {\n      return new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD'\n      }).format(price)\n    },\n    \n    calculateNights(startDate, endDate) {\n      const start = new Date(startDate)\n      const end = new Date(endDate)\n      const diffTime = Math.abs(end - start)\n      return Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n    },\n    \n    canReview(booking) {\n      return booking.status === 'COMPLETED' && \n             new Date(booking.endDate) < new Date()\n    }\n  },\n  mounted() {\n    this.fetchBookings()\n  }\n}\n</script>"],"mappings":"AAiIA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,SAAA;MACAC,YAAA;MACAC,YAAA;QACAC,OAAA;UACAC,EAAA;QACA;QACAC,SAAA;UACAD,EAAA;QACA;QACAE,SAAA;UACAF,EAAA;QACA;QACAG,SAAA;UACAH,EAAA;QACA;MACA;IACA;EACA;EACAI,OAAA;IACA,MAAAC,cAAA;MACA;QACA,KAAAT,SAAA;QACA,MAAAU,QAAA,cAAAC,MAAA,CAAAC,GAAA;QACA,KAAAb,QAAA,GAAAW,QAAA,CAAAZ,IAAA;MACA,SAAAe,KAAA;QACA,KAAAC,MAAA,CAAAC,MAAA;UACAC,IAAA;UACAC,OAAA;QACA;MACA;QACA,KAAAjB,SAAA;MACA;IACA;IAEA,MAAAkB,cAAAC,EAAA;MACA;QACA,KAAAC,OAAA;QAEA,KAAAnB,YAAA,GAAAkB,EAAA;QACA,WAAAR,MAAA,CAAAU,GAAA,cAAAF,EAAA;;QAEA;QACA,MAAAG,KAAA,QAAAvB,QAAA,CAAAwB,SAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAL,EAAA,KAAAA,EAAA;QACA,IAAAG,KAAA;UACA,KAAAvB,QAAA,CAAAuB,KAAA,EAAAG,MAAA;QACA;QAEA,KAAAX,MAAA,CAAAC,MAAA;UACAC,IAAA;UACAC,OAAA;QACA;MACA,SAAAJ,KAAA;QACA,KAAAC,MAAA,CAAAC,MAAA;UACAC,IAAA;UACAC,OAAA,EAAAJ,KAAA,CAAAH,QAAA,EAAAZ,IAAA,EAAAmB,OAAA;QACA;MACA;QACA,KAAAhB,YAAA;MACA;IACA;IAEAyB,cAAAC,MAAA;MACA;QACA,KAAAA,MAAA;QAEA,WAAAA,MAAA;UACA,MAAAC,YAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAH,MAAA;UACA,IAAAI,KAAA,CAAAC,OAAA,CAAAJ,YAAA,KAAAA,YAAA,CAAAK,MAAA;YACA,OAAAL,YAAA;UACA;UACA,OAAAD,MAAA;QACA;QAEA,IAAAI,KAAA,CAAAC,OAAA,CAAAL,MAAA,KAAAA,MAAA,CAAAM,MAAA;UACA,OAAAN,MAAA;QACA;QAEA;MACA,SAAAO,CAAA;QACA;MACA;IACA;IAEAC,WAAAC,IAAA;MACA,WAAAC,IAAA,CAAAD,IAAA,EAAAE,kBAAA;QACAC,OAAA;QACAC,KAAA;QACAC,GAAA;QACAC,IAAA;MACA;IACA;IAEAC,YAAAC,KAAA;MACA,WAAAC,IAAA,CAAAC,YAAA;QACAC,KAAA;QACAC,QAAA;MACA,GAAAC,MAAA,CAAAL,KAAA;IACA;IAEAM,gBAAAC,SAAA,EAAAC,OAAA;MACA,MAAAC,KAAA,OAAAhB,IAAA,CAAAc,SAAA;MACA,MAAAG,GAAA,OAAAjB,IAAA,CAAAe,OAAA;MACA,MAAAG,QAAA,GAAAC,IAAA,CAAAC,GAAA,CAAAH,GAAA,GAAAD,KAAA;MACA,OAAAG,IAAA,CAAAE,IAAA,CAAAH,QAAA;IACA;IAEAI,UAAAC,OAAA;MACA,OAAAA,OAAA,CAAAnC,MAAA,oBACA,IAAAY,IAAA,CAAAuB,OAAA,CAAAR,OAAA,QAAAf,IAAA;IACA;EACA;EACAwB,QAAA;IACA,KAAApD,aAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}