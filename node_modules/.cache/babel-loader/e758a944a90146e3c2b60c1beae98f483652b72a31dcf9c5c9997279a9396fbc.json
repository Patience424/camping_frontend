{"ast":null,"code":"import { ownerAPI } from '@/services/api';\nexport default {\n  name: 'OwnerDashboard',\n  data() {\n    return {\n      totalSpots: 0,\n      activeBookings: 0,\n      totalRevenue: 0,\n      recentBookings: [],\n      isLoading: false\n    };\n  },\n  async created() {\n    await this.fetchDashboardData();\n  },\n  methods: {\n    async fetchDashboardData() {\n      try {\n        this.isLoading = true;\n        const [statsResponse, bookingsResponse] = await Promise.all([ownerAPI.getDashboardStats(), ownerAPI.getBookings()]);\n\n        // Update dashboard stats\n        const stats = statsResponse.data;\n        this.totalSpots = stats.totalSpots || 0;\n        this.activeBookings = stats.activeBookings || 0;\n        this.totalRevenue = stats.totalRevenue || 0;\n\n        // Update recent bookings\n        this.recentBookings = bookingsResponse.data.slice(0, 5).map(booking => ({\n          id: booking.id,\n          campingSpotName: booking.campingSpot.name,\n          guestName: booking.guest.name,\n          checkIn: new Date(booking.startDate).toLocaleDateString(),\n          checkOut: new Date(booking.endDate).toLocaleDateString(),\n          status: booking.status\n        }));\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: 'Failed to load dashboard data'\n        });\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["ownerAPI","name","data","totalSpots","activeBookings","totalRevenue","recentBookings","isLoading","created","fetchDashboardData","methods","statsResponse","bookingsResponse","Promise","all","getDashboardStats","getBookings","stats","slice","map","booking","id","campingSpotName","campingSpot","guestName","guest","checkIn","Date","startDate","toLocaleDateString","checkOut","endDate","status","error","console","$store","commit","type","message"],"sources":["src/views/owner/OwnerDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"owner-dashboard\">\r\n    <h1>Owner Dashboard</h1>\r\n    <div class=\"dashboard-stats\">\r\n      <div class=\"stat-card\">\r\n        <h3>Total Camping Spots</h3>\r\n        <p class=\"stat-number\">{{ totalSpots }}</p>\r\n      </div>\r\n      <div class=\"stat-card\">\r\n        <h3>Active Bookings</h3>\r\n        <p class=\"stat-number\">{{ activeBookings }}</p>\r\n      </div>\r\n      <div class=\"stat-card\">\r\n        <h3>Total Revenue</h3>\r\n        <p class=\"stat-number\">â‚¬{{ totalRevenue }}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"recent-bookings\">\r\n      <h2>Recent Bookings</h2>\r\n      <div v-if=\"recentBookings.length\" class=\"bookings-list\">\r\n        <div v-for=\"booking in recentBookings\" :key=\"booking.id\" class=\"booking-card\">\r\n          <h4>{{ booking.campingSpotName }}</h4>\r\n          <p>Guest: {{ booking.guestName }}</p>\r\n          <p>Dates: {{ booking.checkIn }} - {{ booking.checkOut }}</p>\r\n          <p>Status: {{ booking.status }}</p>\r\n        </div>\r\n      </div>\r\n      <p v-else>No recent bookings</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ownerAPI } from '@/services/api'\r\n\r\nexport default {\r\n  name: 'OwnerDashboard',\r\n  data() {\r\n    return {\r\n      totalSpots: 0,\r\n      activeBookings: 0,\r\n      totalRevenue: 0,\r\n      recentBookings: [],\r\n      isLoading: false\r\n    }\r\n  },\r\n  async created() {\r\n    await this.fetchDashboardData()\r\n  },\r\n  methods: {\r\n    async fetchDashboardData() {\r\n      try {\r\n        this.isLoading = true\r\n        const [statsResponse, bookingsResponse] = await Promise.all([\r\n          ownerAPI.getDashboardStats(),\r\n          ownerAPI.getBookings()\r\n        ])\r\n\r\n        // Update dashboard stats\r\n        const stats = statsResponse.data\r\n        this.totalSpots = stats.totalSpots || 0\r\n        this.activeBookings = stats.activeBookings || 0\r\n        this.totalRevenue = stats.totalRevenue || 0\r\n\r\n        // Update recent bookings\r\n        this.recentBookings = bookingsResponse.data.slice(0, 5).map(booking => ({\r\n          id: booking.id,\r\n          campingSpotName: booking.campingSpot.name,\r\n          guestName: booking.guest.name,\r\n          checkIn: new Date(booking.startDate).toLocaleDateString(),\r\n          checkOut: new Date(booking.endDate).toLocaleDateString(),\r\n          status: booking.status\r\n        }))\r\n      } catch (error) {\r\n        console.error('Error fetching dashboard data:', error)\r\n        this.$store.commit('setNotification', {\r\n          type: 'error',\r\n          message: 'Failed to load dashboard data'\r\n        })\r\n      } finally {\r\n        this.isLoading = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.owner-dashboard {\r\n  padding: 2rem;\r\n}\r\n\r\n.dashboard-stats {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 1.5rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.stat-card {\r\n  background: white;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.stat-card h3 {\r\n  margin: 0 0 0.5rem 0;\r\n  color: #666;\r\n  font-size: 0.875rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.05em;\r\n}\r\n\r\n.stat-number {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: #2c3e50;\r\n  margin: 0;\r\n}\r\n\r\n.recent-bookings {\r\n  background: white;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.recent-bookings h2 {\r\n  margin: 0 0 1.5rem 0;\r\n  color: #2c3e50;\r\n}\r\n\r\n.bookings-list {\r\n  display: grid;\r\n  gap: 1rem;\r\n}\r\n\r\n.booking-card {\r\n  padding: 1rem;\r\n  border: 1px solid #e5e7eb;\r\n  border-radius: 4px;\r\n}\r\n\r\n.booking-card h4 {\r\n  margin: 0 0 0.5rem 0;\r\n  color: #2c3e50;\r\n}\r\n\r\n.booking-card p {\r\n  margin: 0.25rem 0;\r\n  color: #666;\r\n}\r\n\r\n.booking-card p:last-child {\r\n  margin-top: 0.5rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.booking-card p:last-child.status-confirmed {\r\n  color: #42b983;\r\n}\r\n\r\n.booking-card p:last-child.status-pending {\r\n  color: #f59e0b;\r\n}\r\n\r\n.booking-card p:last-child.status-cancelled {\r\n  color: #ef4444;\r\n}\r\n</style> "],"mappings":"AAiCA,SAAAA,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,cAAA;MACAC,YAAA;MACAC,cAAA;MACAC,SAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,WAAAC,kBAAA;EACA;EACAC,OAAA;IACA,MAAAD,mBAAA;MACA;QACA,KAAAF,SAAA;QACA,OAAAI,aAAA,EAAAC,gBAAA,UAAAC,OAAA,CAAAC,GAAA,EACAd,QAAA,CAAAe,iBAAA,IACAf,QAAA,CAAAgB,WAAA,GACA;;QAEA;QACA,MAAAC,KAAA,GAAAN,aAAA,CAAAT,IAAA;QACA,KAAAC,UAAA,GAAAc,KAAA,CAAAd,UAAA;QACA,KAAAC,cAAA,GAAAa,KAAA,CAAAb,cAAA;QACA,KAAAC,YAAA,GAAAY,KAAA,CAAAZ,YAAA;;QAEA;QACA,KAAAC,cAAA,GAAAM,gBAAA,CAAAV,IAAA,CAAAgB,KAAA,OAAAC,GAAA,CAAAC,OAAA;UACAC,EAAA,EAAAD,OAAA,CAAAC,EAAA;UACAC,eAAA,EAAAF,OAAA,CAAAG,WAAA,CAAAtB,IAAA;UACAuB,SAAA,EAAAJ,OAAA,CAAAK,KAAA,CAAAxB,IAAA;UACAyB,OAAA,MAAAC,IAAA,CAAAP,OAAA,CAAAQ,SAAA,EAAAC,kBAAA;UACAC,QAAA,MAAAH,IAAA,CAAAP,OAAA,CAAAW,OAAA,EAAAF,kBAAA;UACAG,MAAA,EAAAZ,OAAA,CAAAY;QACA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,mCAAAA,KAAA;QACA,KAAAE,MAAA,CAAAC,MAAA;UACAC,IAAA;UACAC,OAAA;QACA;MACA;QACA,KAAA/B,SAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}