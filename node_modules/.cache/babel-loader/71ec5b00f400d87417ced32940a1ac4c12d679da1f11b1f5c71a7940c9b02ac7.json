{"ast":null,"code":"import { ownerAPI } from '@/services/api';\nexport default {\n  name: 'OwnerCampingSpotForm',\n  props: {\n    id: {\n      type: [String, Number],\n      default: null\n    }\n  },\n  data() {\n    return {\n      form: {\n        name: '',\n        location: '',\n        description: '',\n        pricePerNight: 0,\n        capacity: 1,\n        images: [],\n        amenities: []\n      },\n      availableAmenities: ['Electricity', 'Water', 'Showers', 'Restrooms', 'Fire Pit', 'Picnic Table', 'RV Hookup', 'WiFi', 'Pets Allowed'],\n      isSubmitting: false\n    };\n  },\n  computed: {\n    isEdit() {\n      return !!this.id;\n    }\n  },\n  async created() {\n    if (this.isEdit) {\n      try {\n        const response = await ownerAPI.getCampingSpotById(this.id);\n        this.form = {\n          name: response.data.name,\n          location: response.data.location,\n          description: response.data.description,\n          pricePerNight: response.data.pricePerNight,\n          capacity: response.data.capacity,\n          images: response.data.images || [],\n          amenities: response.data.amenities || []\n        };\n      } catch (error) {\n        console.error('Error fetching camping spot:', error);\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: 'Failed to load camping spot details'\n        });\n      }\n    }\n  },\n  methods: {\n    triggerFileInput() {\n      this.$refs.fileInput.click();\n    },\n    async handleImageUpload(event) {\n      const files = event.target.files;\n      if (!files.length) return;\n      for (const file of files) {\n        if (this.form.images.length >= 5) {\n          alert('Maximum 5 images allowed');\n          break;\n        }\n        if (file.size > 5 * 1024 * 1024) {\n          alert('Image size should be less than 5MB');\n          continue;\n        }\n        try {\n          // TODO: Implement actual image upload to server\n          // For now, we'll create a local URL\n          const imageUrl = URL.createObjectURL(file);\n          this.form.images.push({\n            url: imageUrl,\n            file\n          });\n        } catch (error) {\n          console.error('Error uploading image:', error);\n          alert('Error uploading image');\n        }\n      }\n\n      // Reset the file input\n      event.target.value = '';\n    },\n    removeImage(index) {\n      this.form.images.splice(index, 1);\n    },\n    async handleSubmit() {\n      try {\n        this.isSubmitting = true;\n\n        // First, upload any new images\n        const imageFiles = this.form.images.filter(img => img.file).map(img => img.file);\n        const existingImages = this.form.images.filter(img => !img.file).map(img => img.url);\n        let uploadedImageUrls = [];\n        if (imageFiles.length > 0) {\n          const formData = new FormData();\n          imageFiles.forEach(file => {\n            formData.append('images', file);\n          });\n          try {\n            const uploadResponse = await ownerAPI.uploadImages(this.id || 'new', formData);\n            uploadedImageUrls = uploadResponse.urls || [];\n          } catch (error) {\n            console.error('Error uploading images:', error);\n            throw new Error('Failed to upload images. Please try again.');\n          }\n        }\n\n        // Combine existing and new image URLs\n        const allImageUrls = [...existingImages, ...uploadedImageUrls];\n\n        // Prepare form data with the final image URLs\n        const formData = {\n          ...this.form,\n          images: allImageUrls\n        };\n\n        // Remove the file objects as they're not needed anymore\n        delete formData.file;\n        if (this.isEdit) {\n          await ownerAPI.updateCampingSpot(this.id, formData);\n          this.$store.commit('setNotification', {\n            type: 'success',\n            message: 'Camping spot updated successfully'\n          });\n        } else {\n          await ownerAPI.createCampingSpot(formData);\n          this.$store.commit('setNotification', {\n            type: 'success',\n            message: 'Camping spot created successfully'\n          });\n        }\n        this.$router.push('/owner/camping-spots');\n      } catch (error) {\n        console.error('Error saving camping spot:', error);\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: error.response?.data?.message || error.message || 'Failed to save camping spot'\n        });\n      } finally {\n        this.isSubmitting = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["ownerAPI","name","props","id","type","String","Number","default","data","form","location","description","pricePerNight","capacity","images","amenities","availableAmenities","isSubmitting","computed","isEdit","created","response","getCampingSpotById","error","console","$store","commit","message","methods","triggerFileInput","$refs","fileInput","click","handleImageUpload","event","files","target","length","file","alert","size","imageUrl","URL","createObjectURL","push","url","value","removeImage","index","splice","handleSubmit","imageFiles","filter","img","map","existingImages","uploadedImageUrls","formData","FormData","forEach","append","uploadResponse","uploadImages","urls","Error","allImageUrls","updateCampingSpot","createCampingSpot","$router"],"sources":["src/views/owner/OwnerCampingSpotForm.vue"],"sourcesContent":["<template>\n  <div class=\"camping-spot-form\">\n    <h1>{{ isEdit ? 'Edit Camping Spot' : 'Add New Camping Spot' }}</h1>\n    \n    <form @submit.prevent=\"handleSubmit\" class=\"form\">\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input\n          id=\"name\"\n          v-model=\"form.name\"\n          type=\"text\"\n          required\n          placeholder=\"Enter camping spot name\"\n        >\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"location\">Location</label>\n        <input\n          id=\"location\"\n          v-model=\"form.location\"\n          type=\"text\"\n          required\n          placeholder=\"Enter location\"\n        >\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"description\">Description</label>\n        <textarea\n          id=\"description\"\n          v-model=\"form.description\"\n          required\n          placeholder=\"Describe your camping spot\"\n          rows=\"4\"\n        ></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"pricePerNight\">Price per Night (€)</label>\n        <input\n          id=\"pricePerNight\"\n          v-model.number=\"form.pricePerNight\"\n          type=\"number\"\n          required\n          min=\"0\"\n          step=\"0.01\"\n        >\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"capacity\">Capacity</label>\n        <input\n          id=\"capacity\"\n          v-model.number=\"form.capacity\"\n          type=\"number\"\n          required\n          min=\"1\"\n        >\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"images\">Images</label>\n        <div class=\"image-upload-container\">\n          <div class=\"image-preview-grid\">\n            <div v-for=\"(image, index) in form.images\" :key=\"index\" class=\"image-preview\">\n              <img :src=\"image.url\" :alt=\"'Camping spot image ' + (index + 1)\">\n              <button type=\"button\" @click=\"removeImage(index)\" class=\"remove-image\">\n                ×\n              </button>\n            </div>\n            <div v-if=\"form.images.length < 5\" class=\"image-upload-box\" @click=\"triggerFileInput\">\n              <input\n                type=\"file\"\n                ref=\"fileInput\"\n                @change=\"handleImageUpload\"\n                accept=\"image/*\"\n                multiple\n                class=\"hidden\"\n              >\n              <div class=\"upload-placeholder\">\n                <span>+</span>\n                <p>Add Image</p>\n              </div>\n            </div>\n          </div>\n          <p class=\"image-help-text\">Upload up to 5 images (max 5MB each)</p>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"amenities\">Amenities</label>\n        <div class=\"amenities-grid\">\n          <label v-for=\"amenity in availableAmenities\" :key=\"amenity\" class=\"amenity-checkbox\">\n            <input\n              type=\"checkbox\"\n              v-model=\"form.amenities\"\n              :value=\"amenity\"\n            >\n            {{ amenity }}\n          </label>\n        </div>\n      </div>\n\n      <div class=\"form-actions\">\n        <button type=\"button\" @click=\"$router.back()\" class=\"btn-secondary\">\n          Cancel\n        </button>\n        <button type=\"submit\" class=\"btn-primary\" :disabled=\"isSubmitting\">\n          {{ isEdit ? 'Update' : 'Create' }} Camping Spot\n        </button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ownerAPI } from '@/services/api'\n\nexport default {\n  name: 'OwnerCampingSpotForm',\n  props: {\n    id: {\n      type: [String, Number],\n      default: null\n    }\n  },\n  data() {\n    return {\n      form: {\n        name: '',\n        location: '',\n        description: '',\n        pricePerNight: 0,\n        capacity: 1,\n        images: [],\n        amenities: []\n      },\n      availableAmenities: [\n        'Electricity',\n        'Water',\n        'Showers',\n        'Restrooms',\n        'Fire Pit',\n        'Picnic Table',\n        'RV Hookup',\n        'WiFi',\n        'Pets Allowed'\n      ],\n      isSubmitting: false\n    }\n  },\n  computed: {\n    isEdit() {\n      return !!this.id\n    }\n  },\n  async created() {\n    if (this.isEdit) {\n      try {\n        const response = await ownerAPI.getCampingSpotById(this.id)\n        this.form = {\n          name: response.data.name,\n          location: response.data.location,\n          description: response.data.description,\n          pricePerNight: response.data.pricePerNight,\n          capacity: response.data.capacity,\n          images: response.data.images || [],\n          amenities: response.data.amenities || []\n        }\n      } catch (error) {\n        console.error('Error fetching camping spot:', error)\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: 'Failed to load camping spot details'\n        })\n      }\n    }\n  },\n  methods: {\n    triggerFileInput() {\n      this.$refs.fileInput.click()\n    },\n    async handleImageUpload(event) {\n      const files = event.target.files\n      if (!files.length) return\n\n      for (const file of files) {\n        if (this.form.images.length >= 5) {\n          alert('Maximum 5 images allowed')\n          break\n        }\n\n        if (file.size > 5 * 1024 * 1024) {\n          alert('Image size should be less than 5MB')\n          continue\n        }\n\n        try {\n          // TODO: Implement actual image upload to server\n          // For now, we'll create a local URL\n          const imageUrl = URL.createObjectURL(file)\n          this.form.images.push({ url: imageUrl, file })\n        } catch (error) {\n          console.error('Error uploading image:', error)\n          alert('Error uploading image')\n        }\n      }\n\n      // Reset the file input\n      event.target.value = ''\n    },\n    removeImage(index) {\n      this.form.images.splice(index, 1)\n    },\n    async handleSubmit() {\n      try {\n        this.isSubmitting = true\n        \n        // First, upload any new images\n        const imageFiles = this.form.images.filter(img => img.file).map(img => img.file)\n        const existingImages = this.form.images.filter(img => !img.file).map(img => img.url)\n        let uploadedImageUrls = []\n\n        if (imageFiles.length > 0) {\n          const formData = new FormData()\n          imageFiles.forEach(file => {\n            formData.append('images', file)\n          })\n\n          try {\n            const uploadResponse = await ownerAPI.uploadImages(this.id || 'new', formData)\n            uploadedImageUrls = uploadResponse.urls || []\n          } catch (error) {\n            console.error('Error uploading images:', error)\n            throw new Error('Failed to upload images. Please try again.')\n          }\n        }\n\n        // Combine existing and new image URLs\n        const allImageUrls = [...existingImages, ...uploadedImageUrls]\n\n        // Prepare form data with the final image URLs\n        const formData = {\n          ...this.form,\n          images: allImageUrls\n        }\n\n        // Remove the file objects as they're not needed anymore\n        delete formData.file\n\n        if (this.isEdit) {\n          await ownerAPI.updateCampingSpot(this.id, formData)\n          this.$store.commit('setNotification', {\n            type: 'success',\n            message: 'Camping spot updated successfully'\n          })\n        } else {\n          await ownerAPI.createCampingSpot(formData)\n          this.$store.commit('setNotification', {\n            type: 'success',\n            message: 'Camping spot created successfully'\n          })\n        }\n        \n        this.$router.push('/owner/camping-spots')\n      } catch (error) {\n        console.error('Error saving camping spot:', error)\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: error.response?.data?.message || error.message || 'Failed to save camping spot'\n        })\n      } finally {\n        this.isSubmitting = false\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.camping-spot-form {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\n.form {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.form-group {\n  margin-bottom: 1.5rem;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  color: #2c3e50;\n  font-weight: 500;\n}\n\ninput[type=\"text\"],\ninput[type=\"number\"],\ninput[type=\"url\"],\ntextarea {\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n}\n\n.amenities-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 0.5rem;\n}\n\n.amenity-checkbox {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-weight: normal;\n}\n\n.form-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n  margin-top: 2rem;\n}\n\n.btn-primary,\n.btn-secondary {\n  padding: 0.75rem 1.5rem;\n  border-radius: 4px;\n  font-weight: 500;\n  cursor: pointer;\n}\n\n.btn-primary {\n  background: #42b983;\n  color: white;\n  border: none;\n}\n\n.btn-secondary {\n  background: #f3f4f6;\n  color: #374151;\n  border: 1px solid #d1d5db;\n}\n\n.image-upload-container {\n  margin-top: 0.5rem;\n}\n\n.image-preview-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  gap: 1rem;\n  margin-bottom: 0.5rem;\n}\n\n.image-preview {\n  position: relative;\n  aspect-ratio: 1;\n  border-radius: 4px;\n  overflow: hidden;\n}\n\n.image-preview img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.remove-image {\n  position: absolute;\n  top: 0.25rem;\n  right: 0.25rem;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.25rem;\n  line-height: 1;\n}\n\n.image-upload-box {\n  aspect-ratio: 1;\n  border: 2px dashed #ddd;\n  border-radius: 4px;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  transition: border-color 0.2s;\n}\n\n.image-upload-box:hover {\n  border-color: #42b983;\n}\n\n.upload-placeholder {\n  text-align: center;\n  color: #666;\n}\n\n.upload-placeholder span {\n  font-size: 2rem;\n  line-height: 1;\n  margin-bottom: 0.5rem;\n  color: #42b983;\n}\n\n.upload-placeholder p {\n  margin: 0;\n  font-size: 0.875rem;\n}\n\n.hidden {\n  display: none;\n}\n\n.image-help-text {\n  font-size: 0.875rem;\n  color: #666;\n  margin-top: 0.5rem;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}