{"ast":null,"code":"import { userAPI, bookingAPI } from '@/services/api';\nexport default {\n  name: 'UserBookings',\n  data() {\n    return {\n      bookings: [],\n      loading: true,\n      error: null,\n      isCancelling: null\n    };\n  },\n  methods: {\n    formatDate(dateString) {\n      if (!dateString) return 'Not specified';\n      try {\n        const date = new Date(dateString);\n        return date.toLocaleDateString('en-US', {\n          weekday: 'long',\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric'\n        });\n      } catch (e) {\n        console.error('Error formatting date:', e);\n        return dateString;\n      }\n    },\n    async cancelBooking(bookingId) {\n      if (!confirm('Are you sure you want to cancel this booking?')) {\n        return;\n      }\n      try {\n        this.isCancelling = bookingId;\n        await bookingAPI.cancel(bookingId);\n\n        // Update the booking status in the local list\n        const booking = this.bookings.find(b => b.id === bookingId);\n        if (booking) {\n          booking.status = 'CANCELLED';\n        }\n        this.$store.commit('setNotification', {\n          type: 'success',\n          message: 'Booking cancelled successfully'\n        });\n      } catch (err) {\n        console.error('Failed to cancel booking:', err);\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: err.response?.data?.message || 'Failed to cancel booking'\n        });\n      } finally {\n        this.isCancelling = null;\n      }\n    },\n    async fetchBookings() {\n      try {\n        console.log('Fetching bookings...');\n        const data = await userAPI.getBookings();\n        console.log('Bookings data:', data);\n        this.bookings = Array.isArray(data) ? data : [];\n        console.log('Processed bookings:', this.bookings);\n      } catch (err) {\n        console.error('Failed to load bookings:', err);\n        this.error = err.response?.data?.message || 'Failed to load bookings';\n        this.bookings = [];\n      } finally {\n        this.loading = false;\n      }\n    }\n  },\n  created() {\n    this.fetchBookings();\n  }\n};","map":{"version":3,"names":["userAPI","bookingAPI","name","data","bookings","loading","error","isCancelling","methods","formatDate","dateString","date","Date","toLocaleDateString","weekday","year","month","day","e","console","cancelBooking","bookingId","confirm","cancel","booking","find","b","id","status","$store","commit","type","message","err","response","fetchBookings","log","getBookings","Array","isArray","created"],"sources":["src/views/user/UserBookings.vue"],"sourcesContent":["<template>\r\n  <div class=\"bookings-page\">\r\n    <h2>Your Bookings</h2>\r\n    \r\n    <div v-if=\"loading\" class=\"loading\">\r\n      Loading your bookings...\r\n    </div>\r\n    \r\n    <template v-else>\r\n      <div v-if=\"error\" class=\"error\">\r\n        {{ error }}\r\n      </div>\r\n      \r\n      <template v-else>\r\n        <div v-if=\"bookings && bookings.length > 0\" class=\"bookings-list\">\r\n          <div v-for=\"booking in bookings\" :key=\"booking.id\" class=\"booking-card\">\r\n            <div class=\"booking-header\">\r\n              <h3>{{ booking.campingSpot?.name || 'Unknown Spot' }}</h3>\r\n              <span class=\"status\" :class=\"booking.status?.toLowerCase() || 'confirmed'\">\r\n                {{ booking.status || 'Confirmed' }}\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"booking-info\">\r\n              <div class=\"info-row\">\r\n                <span class=\"label\">Check-in:</span>\r\n                <span class=\"value\">{{ formatDate(booking.startDate) }}</span>\r\n              </div>\r\n              <div class=\"info-row\">\r\n                <span class=\"label\">Check-out:</span>\r\n                <span class=\"value\">{{ formatDate(booking.endDate) }}</span>\r\n              </div>\r\n              <div class=\"info-row\">\r\n                <span class=\"label\">Guests:</span>\r\n                <span class=\"value\">{{ booking.guestCount || 1 }} person(s)</span>\r\n              </div>\r\n              <div class=\"info-row\" v-if=\"booking.specialRequests\">\r\n                <span class=\"label\">Special Requests:</span>\r\n                <span class=\"value\">{{ booking.specialRequests }}</span>\r\n              </div>\r\n              <div class=\"booking-actions\" v-if=\"booking.status === 'PENDING' || booking.status === 'CONFIRMED'\">\r\n                <button \r\n                  @click=\"cancelBooking(booking.id)\" \r\n                  class=\"btn-cancel\"\r\n                  :disabled=\"isCancelling === booking.id\"\r\n                >\r\n                  {{ isCancelling === booking.id ? 'Cancelling...' : 'Cancel Booking' }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div v-else class=\"no-bookings\">\r\n          <p>No bookings yet.</p>\r\n          <router-link to=\"/camping-spots\" class=\"browse-link\">\r\n            Browse Camping Spots\r\n          </router-link>\r\n        </div>\r\n      </template>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { userAPI, bookingAPI } from '@/services/api';\r\n\r\nexport default {\r\n  name: 'UserBookings',\r\n  data() {\r\n    return {\r\n      bookings: [],\r\n      loading: true,\r\n      error: null,\r\n      isCancelling: null\r\n    }\r\n  },\r\n  methods: {\r\n    formatDate(dateString) {\r\n      if (!dateString) return 'Not specified';\r\n      try {\r\n        const date = new Date(dateString);\r\n        return date.toLocaleDateString('en-US', {\r\n          weekday: 'long',\r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        });\r\n      } catch (e) {\r\n        console.error('Error formatting date:', e);\r\n        return dateString;\r\n      }\r\n    },\r\n    async cancelBooking(bookingId) {\r\n      if (!confirm('Are you sure you want to cancel this booking?')) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        this.isCancelling = bookingId;\r\n        await bookingAPI.cancel(bookingId);\r\n        \r\n        // Update the booking status in the local list\r\n        const booking = this.bookings.find(b => b.id === bookingId);\r\n        if (booking) {\r\n          booking.status = 'CANCELLED';\r\n        }\r\n\r\n        this.$store.commit('setNotification', {\r\n          type: 'success',\r\n          message: 'Booking cancelled successfully'\r\n        });\r\n      } catch (err) {\r\n        console.error('Failed to cancel booking:', err);\r\n        this.$store.commit('setNotification', {\r\n          type: 'error',\r\n          message: err.response?.data?.message || 'Failed to cancel booking'\r\n        });\r\n      } finally {\r\n        this.isCancelling = null;\r\n      }\r\n    },\r\n    async fetchBookings() {\r\n      try {\r\n        console.log('Fetching bookings...');\r\n        const data = await userAPI.getBookings();\r\n        console.log('Bookings data:', data);\r\n        this.bookings = Array.isArray(data) ? data : [];\r\n        console.log('Processed bookings:', this.bookings);\r\n      } catch (err) {\r\n        console.error('Failed to load bookings:', err);\r\n        this.error = err.response?.data?.message || 'Failed to load bookings';\r\n        this.bookings = [];\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchBookings();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.bookings-page {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 2rem 1rem;\r\n}\r\n\r\nh2 {\r\n  font-size: 2rem;\r\n  color: #2c3e50;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.bookings-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.5rem;\r\n}\r\n\r\n.booking-card {\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n}\r\n\r\n.booking-header {\r\n  background: #f8fafc;\r\n  padding: 1rem 1.5rem;\r\n  border-bottom: 1px solid #e2e8f0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.booking-header h3 {\r\n  margin: 0;\r\n  font-size: 1.25rem;\r\n  color: #2c3e50;\r\n}\r\n\r\n.status {\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 9999px;\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.status.confirmed {\r\n  background: #e3fcef;\r\n  color: #42b983;\r\n}\r\n\r\n.status.pending {\r\n  background: #fef3c7;\r\n  color: #d97706;\r\n}\r\n\r\n.status.cancelled {\r\n  background: #fee2e2;\r\n  color: #ef4444;\r\n}\r\n\r\n.booking-info {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.info-row {\r\n  display: flex;\r\n  margin-bottom: 0.75rem;\r\n}\r\n\r\n.info-row:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.label {\r\n  flex: 0 0 120px;\r\n  color: #64748b;\r\n  font-weight: 500;\r\n}\r\n\r\n.value {\r\n  flex: 1;\r\n  color: #1e293b;\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 2rem;\r\n  color: #64748b;\r\n}\r\n\r\n.error {\r\n  text-align: center;\r\n  padding: 1rem;\r\n  background: #fee2e2;\r\n  color: #ef4444;\r\n  border-radius: 8px;\r\n  margin: 1rem 0;\r\n}\r\n\r\n.no-bookings {\r\n  text-align: center;\r\n  padding: 3rem 1rem;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.no-bookings p {\r\n  color: #64748b;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.browse-link {\r\n  display: inline-block;\r\n  padding: 0.75rem 1.5rem;\r\n  background: #3b82f6;\r\n  color: white;\r\n  text-decoration: none;\r\n  border-radius: 6px;\r\n  font-weight: 500;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.browse-link:hover {\r\n  background: #2563eb;\r\n}\r\n\r\n@media (max-width: 640px) {\r\n  .info-row {\r\n    flex-direction: column;\r\n    gap: 0.25rem;\r\n  }\r\n  \r\n  .label {\r\n    flex: none;\r\n  }\r\n}\r\n\r\n.booking-actions {\r\n  margin-top: 1rem;\r\n  padding-top: 1rem;\r\n  border-top: 1px solid #e2e8f0;\r\n}\r\n\r\n.btn-cancel {\r\n  background: white;\r\n  color: #ef4444;\r\n  border: 1px solid #ef4444;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 6px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.btn-cancel:hover:not(:disabled) {\r\n  background: #fee2e2;\r\n}\r\n\r\n.btn-cancel:disabled {\r\n  opacity: 0.7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.status.cancelled {\r\n  background: #fee2e2;\r\n  color: #ef4444;\r\n}\r\n</style>\r\n  "],"mappings":"AAiEA,SAAAA,OAAA,EAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,OAAA;MACAC,KAAA;MACAC,YAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,UAAA;MACA,KAAAA,UAAA;MACA;QACA,MAAAC,IAAA,OAAAC,IAAA,CAAAF,UAAA;QACA,OAAAC,IAAA,CAAAE,kBAAA;UACAC,OAAA;UACAC,IAAA;UACAC,KAAA;UACAC,GAAA;QACA;MACA,SAAAC,CAAA;QACAC,OAAA,CAAAb,KAAA,2BAAAY,CAAA;QACA,OAAAR,UAAA;MACA;IACA;IACA,MAAAU,cAAAC,SAAA;MACA,KAAAC,OAAA;QACA;MACA;MAEA;QACA,KAAAf,YAAA,GAAAc,SAAA;QACA,MAAApB,UAAA,CAAAsB,MAAA,CAAAF,SAAA;;QAEA;QACA,MAAAG,OAAA,QAAApB,QAAA,CAAAqB,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,EAAA,KAAAN,SAAA;QACA,IAAAG,OAAA;UACAA,OAAA,CAAAI,MAAA;QACA;QAEA,KAAAC,MAAA,CAAAC,MAAA;UACAC,IAAA;UACAC,OAAA;QACA;MACA,SAAAC,GAAA;QACAd,OAAA,CAAAb,KAAA,8BAAA2B,GAAA;QACA,KAAAJ,MAAA,CAAAC,MAAA;UACAC,IAAA;UACAC,OAAA,EAAAC,GAAA,CAAAC,QAAA,EAAA/B,IAAA,EAAA6B,OAAA;QACA;MACA;QACA,KAAAzB,YAAA;MACA;IACA;IACA,MAAA4B,cAAA;MACA;QACAhB,OAAA,CAAAiB,GAAA;QACA,MAAAjC,IAAA,SAAAH,OAAA,CAAAqC,WAAA;QACAlB,OAAA,CAAAiB,GAAA,mBAAAjC,IAAA;QACA,KAAAC,QAAA,GAAAkC,KAAA,CAAAC,OAAA,CAAApC,IAAA,IAAAA,IAAA;QACAgB,OAAA,CAAAiB,GAAA,6BAAAhC,QAAA;MACA,SAAA6B,GAAA;QACAd,OAAA,CAAAb,KAAA,6BAAA2B,GAAA;QACA,KAAA3B,KAAA,GAAA2B,GAAA,CAAAC,QAAA,EAAA/B,IAAA,EAAA6B,OAAA;QACA,KAAA5B,QAAA;MACA;QACA,KAAAC,OAAA;MACA;IACA;EACA;EACAmC,QAAA;IACA,KAAAL,aAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}