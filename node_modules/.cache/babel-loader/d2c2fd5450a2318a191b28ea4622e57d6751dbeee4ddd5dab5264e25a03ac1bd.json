{"ast":null,"code":"import { mapState } from 'vuex';\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      credentials: {\n        email: '',\n        password: ''\n      },\n      showPassword: false,\n      rememberMe: false,\n      errors: {\n        email: '',\n        password: ''\n      }\n    };\n  },\n  computed: {\n    ...mapState({\n      isLoading: state => state.isLoading\n    })\n  },\n  methods: {\n    validateForm() {\n      let isValid = true;\n      this.errors = {\n        email: '',\n        password: ''\n      };\n      if (!this.credentials.email) {\n        this.errors.email = 'Email is required';\n        isValid = false;\n      } else if (!/\\S+@\\S+\\.\\S+/.test(this.credentials.email)) {\n        this.errors.email = 'Please enter a valid email address';\n        isValid = false;\n      }\n      if (!this.credentials.password) {\n        this.errors.password = 'Password is required';\n        isValid = false;\n      }\n      return isValid;\n    },\n    async login() {\n      if (!this.validateForm()) return;\n      try {\n        console.log('Login: Attempting login with credentials:', this.credentials);\n        const user = await this.$store.dispatch('login', this.credentials);\n        console.log('Login: Login successful, user:', user);\n        console.log('Login: Store state after login:', {\n          token: this.$store.state.token,\n          user: this.$store.state.user\n        });\n\n        // Redirect based on user role\n        if (user.role === 'ADMIN') {\n          this.$router.push('/admin/dashboard');\n        } else if (user.role === 'OWNER') {\n          this.$router.push('/owner/dashboard');\n        } else {\n          // Get the redirect URL from query parameters or go to the home page\n          const redirectUrl = this.$route.query.redirect || '/';\n          this.$router.push(redirectUrl);\n        }\n      } catch (error) {\n        console.error('Login error details:', {\n          error,\n          response: error.response,\n          data: error.response?.data,\n          status: error.response?.status\n        });\n        if (error.response && error.response.data) {\n          const {\n            message\n          } = error.response.data;\n          if (message.includes('email')) {\n            this.errors.email = message;\n          } else if (message.includes('password')) {\n            this.errors.password = message;\n          } else {\n            this.$store.commit('setNotification', {\n              type: 'error',\n              message: message || 'Failed to sign in'\n            });\n          }\n        } else {\n          this.$store.commit('setNotification', {\n            type: 'error',\n            message: 'An error occurred during sign in'\n          });\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapState","name","data","credentials","email","password","showPassword","rememberMe","errors","computed","isLoading","state","methods","validateForm","isValid","test","login","console","log","user","$store","dispatch","token","role","$router","push","redirectUrl","$route","query","redirect","error","response","status","message","includes","commit","type"],"sources":["src/views/auth/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-neutral-50 py-12 px-4 sm:px-6 lg:px-8 flex items-center\">\r\n    <div class=\"max-w-md w-full mx-auto space-y-8\">\r\n      <div class=\"text-center\">\r\n        <h1 class=\"text-3xl font-bold text-neutral-900 mb-2\">Sign in to your account</h1>\r\n        <p class=\"text-neutral-600\">\r\n          Welcome back! Please enter your details.\r\n        </p>\r\n      </div>\r\n      \r\n      <div class=\"bg-white py-8 px-4 shadow-md sm:rounded-lg sm:px-10\">\r\n        <form class=\"space-y-6\" @submit.prevent=\"login\">\r\n          <div>\r\n            <label for=\"email\" class=\"form-label\">Email address</label>\r\n            <input \r\n              id=\"email\" \r\n              v-model=\"credentials.email\" \r\n              type=\"email\" \r\n              required \r\n              class=\"form-input\" \r\n              :class=\"{ 'border-red-300': errors.email }\"\r\n            >\r\n            <p v-if=\"errors.email\" class=\"form-error\">{{ errors.email }}</p>\r\n          </div>\r\n          \r\n          <div>\r\n            <label for=\"password\" class=\"form-label\">Password</label>\r\n            <div class=\"relative\">\r\n              <input \r\n                id=\"password\" \r\n                v-model=\"credentials.password\" \r\n                :type=\"showPassword ? 'text' : 'password'\" \r\n                required \r\n                class=\"form-input pr-10\"\r\n                :class=\"{ 'border-red-300': errors.password }\"\r\n                autocomplete=\"current-password\"\r\n              >\r\n              <button \r\n                type=\"button\"\r\n                class=\"absolute inset-y-0 right-0 pr-3 flex items-center text-neutral-400 hover:text-neutral-600\"\r\n                @click=\"showPassword = !showPassword\"\r\n              >\r\n                <svg v-if=\"showPassword\" class=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\" />\r\n                </svg>\r\n                <svg v-else class=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n            <p v-if=\"errors.password\" class=\"form-error\">{{ errors.password }}</p>\r\n          </div>\r\n          \r\n          <div class=\"flex items-center justify-between\">\r\n            <div class=\"flex items-center\">\r\n              <input\r\n                id=\"remember-me\"\r\n                v-model=\"rememberMe\"\r\n                type=\"checkbox\"\r\n                class=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-neutral-300 rounded\"\r\n              >\r\n              <label for=\"remember-me\" class=\"ml-2 block text-sm text-neutral-600\">\r\n                Remember me\r\n              </label>\r\n            </div>\r\n            \r\n            <div class=\"text-sm\">\r\n              <router-link to=\"/forgot-password\" class=\"text-primary-600 hover:text-primary-500\">\r\n                Forgot your password?\r\n              </router-link>\r\n            </div>\r\n          </div>\r\n          \r\n          <div>\r\n            <button \r\n              type=\"submit\" \r\n              class=\"w-full btn-primary py-3 text-base\"\r\n              :disabled=\"isLoading\"\r\n            >\r\n              <span v-if=\"isLoading\">\r\n                <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white inline-block\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                  <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n                  <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                </svg>\r\n                Signing in...\r\n              </span>\r\n              <span v-else>Sign in</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n        \r\n        <div class=\"mt-6 text-center\">\r\n          <p class=\"text-sm text-neutral-600\">\r\n            Don't have an account?\r\n            <router-link to=\"/register\" class=\"font-medium text-primary-600 hover:text-primary-500\">\r\n              Sign up\r\n            </router-link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n  name: 'LoginPage',\r\n  data() {\r\n    return {\r\n      credentials: {\r\n        email: '',\r\n        password: ''\r\n      },\r\n      showPassword: false,\r\n      rememberMe: false,\r\n      errors: {\r\n        email: '',\r\n        password: ''\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      isLoading: state => state.isLoading\r\n    })\r\n  },\r\n  methods: {\r\n    validateForm() {\r\n      let isValid = true\r\n      this.errors = {\r\n        email: '',\r\n        password: ''\r\n      }\r\n      \r\n      if (!this.credentials.email) {\r\n        this.errors.email = 'Email is required'\r\n        isValid = false\r\n      } else if (!/\\S+@\\S+\\.\\S+/.test(this.credentials.email)) {\r\n        this.errors.email = 'Please enter a valid email address'\r\n        isValid = false\r\n      }\r\n      \r\n      if (!this.credentials.password) {\r\n        this.errors.password = 'Password is required'\r\n        isValid = false\r\n      }\r\n      \r\n      return isValid\r\n    },\r\n    \r\n    async login() {\r\n      if (!this.validateForm()) return\r\n      \r\n      try {\r\n        console.log('Login: Attempting login with credentials:', this.credentials)\r\n        const user = await this.$store.dispatch('login', this.credentials)\r\n        console.log('Login: Login successful, user:', user)\r\n        console.log('Login: Store state after login:', {\r\n          token: this.$store.state.token,\r\n          user: this.$store.state.user\r\n        })\r\n        \r\n        // Redirect based on user role\r\n        if (user.role === 'ADMIN') {\r\n          this.$router.push('/admin/dashboard')\r\n        } else if (user.role === 'OWNER') {\r\n          this.$router.push('/owner/dashboard')\r\n        } else {\r\n          // Get the redirect URL from query parameters or go to the home page\r\n          const redirectUrl = this.$route.query.redirect || '/'\r\n          this.$router.push(redirectUrl)\r\n        }\r\n      } catch (error) {\r\n        console.error('Login error details:', {\r\n          error,\r\n          response: error.response,\r\n          data: error.response?.data,\r\n          status: error.response?.status\r\n        })\r\n        \r\n        if (error.response && error.response.data) {\r\n          const { message } = error.response.data\r\n          \r\n          if (message.includes('email')) {\r\n            this.errors.email = message\r\n          } else if (message.includes('password')) {\r\n            this.errors.password = message\r\n          } else {\r\n            this.$store.commit('setNotification', {\r\n              type: 'error',\r\n              message: message || 'Failed to sign in'\r\n            })\r\n          }\r\n        } else {\r\n          this.$store.commit('setNotification', {\r\n            type: 'error',\r\n            message: 'An error occurred during sign in'\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":"AA0GA,SAAAA,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;QACAC,KAAA;QACAC,QAAA;MACA;MACAC,YAAA;MACAC,UAAA;MACAC,MAAA;QACAJ,KAAA;QACAC,QAAA;MACA;IACA;EACA;EACAI,QAAA;IACA,GAAAT,QAAA;MACAU,SAAA,EAAAC,KAAA,IAAAA,KAAA,CAAAD;IACA;EACA;EACAE,OAAA;IACAC,aAAA;MACA,IAAAC,OAAA;MACA,KAAAN,MAAA;QACAJ,KAAA;QACAC,QAAA;MACA;MAEA,UAAAF,WAAA,CAAAC,KAAA;QACA,KAAAI,MAAA,CAAAJ,KAAA;QACAU,OAAA;MACA,2BAAAC,IAAA,MAAAZ,WAAA,CAAAC,KAAA;QACA,KAAAI,MAAA,CAAAJ,KAAA;QACAU,OAAA;MACA;MAEA,UAAAX,WAAA,CAAAE,QAAA;QACA,KAAAG,MAAA,CAAAH,QAAA;QACAS,OAAA;MACA;MAEA,OAAAA,OAAA;IACA;IAEA,MAAAE,MAAA;MACA,UAAAH,YAAA;MAEA;QACAI,OAAA,CAAAC,GAAA,mDAAAf,WAAA;QACA,MAAAgB,IAAA,cAAAC,MAAA,CAAAC,QAAA,eAAAlB,WAAA;QACAc,OAAA,CAAAC,GAAA,mCAAAC,IAAA;QACAF,OAAA,CAAAC,GAAA;UACAI,KAAA,OAAAF,MAAA,CAAAT,KAAA,CAAAW,KAAA;UACAH,IAAA,OAAAC,MAAA,CAAAT,KAAA,CAAAQ;QACA;;QAEA;QACA,IAAAA,IAAA,CAAAI,IAAA;UACA,KAAAC,OAAA,CAAAC,IAAA;QACA,WAAAN,IAAA,CAAAI,IAAA;UACA,KAAAC,OAAA,CAAAC,IAAA;QACA;UACA;UACA,MAAAC,WAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAC,QAAA;UACA,KAAAL,OAAA,CAAAC,IAAA,CAAAC,WAAA;QACA;MACA,SAAAI,KAAA;QACAb,OAAA,CAAAa,KAAA;UACAA,KAAA;UACAC,QAAA,EAAAD,KAAA,CAAAC,QAAA;UACA7B,IAAA,EAAA4B,KAAA,CAAAC,QAAA,EAAA7B,IAAA;UACA8B,MAAA,EAAAF,KAAA,CAAAC,QAAA,EAAAC;QACA;QAEA,IAAAF,KAAA,CAAAC,QAAA,IAAAD,KAAA,CAAAC,QAAA,CAAA7B,IAAA;UACA;YAAA+B;UAAA,IAAAH,KAAA,CAAAC,QAAA,CAAA7B,IAAA;UAEA,IAAA+B,OAAA,CAAAC,QAAA;YACA,KAAA1B,MAAA,CAAAJ,KAAA,GAAA6B,OAAA;UACA,WAAAA,OAAA,CAAAC,QAAA;YACA,KAAA1B,MAAA,CAAAH,QAAA,GAAA4B,OAAA;UACA;YACA,KAAAb,MAAA,CAAAe,MAAA;cACAC,IAAA;cACAH,OAAA,EAAAA,OAAA;YACA;UACA;QACA;UACA,KAAAb,MAAA,CAAAe,MAAA;YACAC,IAAA;YACAH,OAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}