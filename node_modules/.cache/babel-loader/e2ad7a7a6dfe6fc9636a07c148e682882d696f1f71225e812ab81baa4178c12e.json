{"ast":null,"code":"export default {\n  name: 'OwnerCampingSpots',\n  data() {\n    return {\n      campingSpots: []\n    };\n  },\n  async created() {\n    // TODO: Fetch camping spots from API\n    this.campingSpots = [{\n      id: 1,\n      name: 'Mountain View Camp',\n      location: 'Rocky Mountains, CO',\n      pricePerNight: 75,\n      status: 'Active',\n      imageUrl: 'https://example.com/camp1.jpg'\n    }, {\n      id: 2,\n      name: 'Lakeside Retreat',\n      location: 'Lake Tahoe, CA',\n      pricePerNight: 95,\n      status: 'Active',\n      imageUrl: 'https://example.com/camp2.jpg'\n    }];\n  },\n  methods: {\n    async deleteSpot(id) {\n      if (confirm('Are you sure you want to delete this camping spot?')) {\n        // TODO: Implement delete functionality\n        this.campingSpots = this.campingSpots.filter(spot => spot.id !== id);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","campingSpots","created","id","location","pricePerNight","status","imageUrl","methods","deleteSpot","confirm","filter","spot"],"sources":["src/views/owner/OwnerCampingSpots.vue"],"sourcesContent":["<template>\r\n  <div class=\"owner-camping-spots\">\r\n    <div class=\"header\">\r\n      <h1>My Camping Spots</h1>\r\n      <router-link to=\"/owner/camping-spots/new\" class=\"btn-primary\">\r\n        Add New Camping Spot\r\n      </router-link>\r\n    </div>\r\n\r\n    <div class=\"spots-list\">\r\n      <div v-if=\"campingSpots.length\" class=\"spots-grid\">\r\n        <div v-for=\"spot in campingSpots\" :key=\"spot.id\" class=\"spot-card\">\r\n          <img :src=\"spot.imageUrl\" :alt=\"spot.name\" class=\"spot-image\">\r\n          <div class=\"spot-info\">\r\n            <h3>{{ spot.name }}</h3>\r\n            <p class=\"location\">{{ spot.location }}</p>\r\n            <p class=\"price\">â‚¬{{ spot.pricePerNight }} per night</p>\r\n            <div class=\"status\" :class=\"spot.status.toLowerCase()\">\r\n              {{ spot.status }}\r\n            </div>\r\n            <div class=\"actions\">\r\n              <router-link :to=\"`/owner/camping-spots/${spot.id}/edit`\" class=\"btn-edit\">\r\n                Edit\r\n              </router-link>\r\n              <button @click=\"deleteSpot(spot.id)\" class=\"btn-delete\">\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <p v-else class=\"no-spots\">You haven't added any camping spots yet.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'OwnerCampingSpots',\r\n  data() {\r\n    return {\r\n      campingSpots: []\r\n    }\r\n  },\r\n  async created() {\r\n    // TODO: Fetch camping spots from API\r\n    this.campingSpots = [\r\n      {\r\n        id: 1,\r\n        name: 'Mountain View Camp',\r\n        location: 'Rocky Mountains, CO',\r\n        pricePerNight: 75,\r\n        status: 'Active',\r\n        imageUrl: 'https://example.com/camp1.jpg'\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Lakeside Retreat',\r\n        location: 'Lake Tahoe, CA',\r\n        pricePerNight: 95,\r\n        status: 'Active',\r\n        imageUrl: 'https://example.com/camp2.jpg'\r\n      }\r\n    ]\r\n  },\r\n  methods: {\r\n    async deleteSpot(id) {\r\n      if (confirm('Are you sure you want to delete this camping spot?')) {\r\n        // TODO: Implement delete functionality\r\n        this.campingSpots = this.campingSpots.filter(spot => spot.id !== id)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.owner-camping-spots {\r\n  padding: 2rem;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.btn-primary {\r\n  background: #42b983;\r\n  color: white;\r\n  padding: 0.75rem 1.5rem;\r\n  border-radius: 4px;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n}\r\n\r\n.spots-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 2rem;\r\n}\r\n\r\n.spot-card {\r\n  background: white;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.spot-image {\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n}\r\n\r\n.spot-info {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.spot-info h3 {\r\n  margin: 0 0 0.5rem 0;\r\n  color: #2c3e50;\r\n}\r\n\r\n.location {\r\n  color: #666;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.price {\r\n  font-weight: bold;\r\n  color: #42b983;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.status {\r\n  display: inline-block;\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 20px;\r\n  font-size: 0.875rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.status.active {\r\n  background: #e3fcef;\r\n  color: #42b983;\r\n}\r\n\r\n.status.inactive {\r\n  background: #fee2e2;\r\n  color: #ef4444;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  gap: 1rem;\r\n}\r\n\r\n.btn-edit, .btn-delete {\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 4px;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n}\r\n\r\n.btn-edit {\r\n  background: #e3fcef;\r\n  color: #42b983;\r\n}\r\n\r\n.btn-delete {\r\n  background: #fee2e2;\r\n  color: #ef4444;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.no-spots {\r\n  text-align: center;\r\n  color: #666;\r\n  margin-top: 2rem;\r\n}\r\n</style> "],"mappings":"AAqCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA;IACA,KAAAD,YAAA,IACA;MACAE,EAAA;MACAJ,IAAA;MACAK,QAAA;MACAC,aAAA;MACAC,MAAA;MACAC,QAAA;IACA,GACA;MACAJ,EAAA;MACAJ,IAAA;MACAK,QAAA;MACAC,aAAA;MACAC,MAAA;MACAC,QAAA;IACA,EACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAAN,EAAA;MACA,IAAAO,OAAA;QACA;QACA,KAAAT,YAAA,QAAAA,YAAA,CAAAU,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAT,EAAA,KAAAA,EAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}