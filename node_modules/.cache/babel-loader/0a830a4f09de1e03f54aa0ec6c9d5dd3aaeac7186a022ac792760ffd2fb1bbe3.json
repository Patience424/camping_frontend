{"ast":null,"code":"import { api } from '@/plugins/axios';\nimport axios from 'axios';\nimport { store } from '@/store';\n\n// Add request interceptor for logging\napi.interceptors.request.use(config => {\n  console.log('API Request:', {\n    method: config.method,\n    url: config.url,\n    params: config.params,\n    data: config.data\n  });\n  return config;\n}, error => {\n  console.error('API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for logging\napi.interceptors.response.use(response => {\n  // Response is already transformed by the axios instance interceptor\n  console.log('API Response:', {\n    data: response,\n    url: response?.request?.responseURL || 'unknown'\n  });\n  return response;\n}, error => {\n  console.error('API Error:', {\n    status: error.response?.status,\n    data: error.response?.data,\n    url: error.config?.url || 'unknown'\n  });\n  if (error.response?.status === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  forgotPassword: email => api.post('/auth/forgot-password', {\n    email\n  }),\n  resetPassword: data => api.post('/auth/reset-password', data),\n  verifyToken: () => api.get('/auth/verify')\n};\nexport const userAPI = {\n  getProfile: () => api.get('/users/profile'),\n  updateProfile: data => api.put('/users/profile', data),\n  getBookings: () => api.get('/users/bookings'),\n  getReviews: () => api.get('/users/reviews')\n};\nexport const campingSpotAPI = {\n  getAll: params => api.get('/users/camping-spots', {\n    params\n  }),\n  getById: id => api.get(`/users/camping-spots/${id}`),\n  create: data => api.post('/users/camping-spots', data),\n  update: (id, data) => api.put(`/users/camping-spots/${id}`, data),\n  delete: id => api.delete(`/users/camping-spots/${id}`),\n  getFeatured: () => api.get('/users/camping-spots/featured'),\n  search: params => api.get('/users/camping-spots/search', {\n    params\n  }),\n  getCampingSpots: params => api.get('/users/camping-spots', {\n    params\n  }),\n  checkAvailability: (id, data) => api.post(`/users/camping-spots/${id}/check-availability`, data),\n  createReview: (id, data) => api.post(`/users/camping-spots/${id}/reviews`, data),\n  uploadImages: (id, formData) => {\n    // Create a new axios instance with the correct content type for multipart/form-data\n    const uploadInstance = axios.create({\n      baseURL: api.defaults.baseURL,\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'Authorization': `Bearer ${store.state.token}`\n      }\n    });\n    return uploadInstance.post(`/users/camping-spots/${id}/images`, formData);\n  },\n  deleteImage: (id, imageId) => api.delete(`/users/camping-spots/${id}/images/${imageId}`),\n  createBooking: (id, data) => api.post(`/users/camping-spots/${id}/bookings`, data)\n};\nexport const bookingAPI = {\n  create: data => api.post('/bookings', data),\n  getAll: params => api.get('/bookings', {\n    params\n  }),\n  getById: id => api.get(`/bookings/${id}`),\n  update: (id, data) => api.put(`/bookings/${id}`, data),\n  cancel: id => api.post(`/bookings/${id}/cancel`)\n};\nexport const reviewAPI = {\n  create: data => api.post('/reviews', data),\n  getAll: params => api.get('/reviews', {\n    params\n  }),\n  getById: id => api.get(`/reviews/${id}`),\n  update: (id, data) => api.put(`/reviews/${id}`, data),\n  delete: id => api.delete(`/reviews/${id}`)\n};\nexport const adminAPI = {\n  getDashboardStats: () => api.get('/admin/dashboard/stats'),\n  getAllUsers: params => api.get('/admin/users', {\n    params\n  }),\n  updateUser: (id, data) => api.put(`/admin/users/${id}`, data),\n  deleteUser: id => api.delete(`/admin/users/${id}`),\n  getAllBookings: params => api.get('/admin/bookings', {\n    params\n  }),\n  updateBooking: (id, data) => api.put(`/admin/bookings/${id}`, data),\n  getAllReviews: params => api.get('/admin/reviews', {\n    params\n  }),\n  updateReview: (id, data) => api.put(`/admin/reviews/${id}`, data)\n};\nexport const ownerAPI = {\n  getDashboardStats: () => api.get('/owner/dashboard/stats'),\n  getCampingSpots: () => api.get('/owner/camping-spots'),\n  getCampingSpotById: id => api.get(`/owner/camping-spots/${id}`),\n  createCampingSpot: data => api.post('/owner/camping-spots', data),\n  updateCampingSpot: (id, data) => api.put(`/owner/camping-spots/${id}`, data),\n  deleteCampingSpot: id => api.delete(`/owner/camping-spots/${id}`),\n  getBookings: () => api.get('/users/bookings'),\n  getReviews: () => api.get('/owner/reviews')\n};\nexport default api;","map":{"version":3,"names":["api","axios","store","interceptors","request","use","config","console","log","method","url","params","data","error","Promise","reject","response","responseURL","status","localStorage","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","forgotPassword","email","resetPassword","verifyToken","get","userAPI","getProfile","updateProfile","put","getBookings","getReviews","campingSpotAPI","getAll","getById","id","create","update","delete","getFeatured","search","getCampingSpots","checkAvailability","createReview","uploadImages","formData","uploadInstance","baseURL","defaults","headers","state","token","deleteImage","imageId","createBooking","bookingAPI","cancel","reviewAPI","adminAPI","getDashboardStats","getAllUsers","updateUser","deleteUser","getAllBookings","updateBooking","getAllReviews","updateReview","ownerAPI","getCampingSpotById","createCampingSpot","updateCampingSpot","deleteCampingSpot"],"sources":["C:/Users/pmake/OneDrive - Thomas More/Desktop/Web Programming/Final/project/frontend/src/services/api.js"],"sourcesContent":["import { api } from '@/plugins/axios'\r\nimport axios from 'axios'\r\nimport { store } from '@/store'\r\n\r\n// Add request interceptor for logging\r\napi.interceptors.request.use(\r\n  config => {\r\n    console.log('API Request:', {\r\n      method: config.method,\r\n      url: config.url,\r\n      params: config.params,\r\n      data: config.data\r\n    })\r\n    return config\r\n  },\r\n  error => {\r\n    console.error('API Request Error:', error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// Add response interceptor for logging\r\napi.interceptors.response.use(\r\n  response => {\r\n    // Response is already transformed by the axios instance interceptor\r\n    console.log('API Response:', {\r\n      data: response,\r\n      url: response?.request?.responseURL || 'unknown'\r\n    })\r\n    return response\r\n  },\r\n  error => {\r\n    console.error('API Error:', {\r\n      status: error.response?.status,\r\n      data: error.response?.data,\r\n      url: error.config?.url || 'unknown'\r\n    })\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token')\r\n      window.location.href = '/login'\r\n    }\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  forgotPassword: (email) => api.post('/auth/forgot-password', { email }),\r\n  resetPassword: (data) => api.post('/auth/reset-password', data),\r\n  verifyToken: () => api.get('/auth/verify')\r\n}\r\n\r\nexport const userAPI = {\r\n  getProfile: () => api.get('/users/profile'),\r\n  updateProfile: (data) => api.put('/users/profile', data),\r\n  getBookings: () => api.get('/users/bookings'),\r\n  getReviews: () => api.get('/users/reviews')\r\n}\r\n\r\nexport const campingSpotAPI = {\r\n  getAll: (params) => api.get('/users/camping-spots', { params }),\r\n  getById: (id) => api.get(`/users/camping-spots/${id}`),\r\n  create: (data) => api.post('/users/camping-spots', data),\r\n  update: (id, data) => api.put(`/users/camping-spots/${id}`, data),\r\n  delete: (id) => api.delete(`/users/camping-spots/${id}`),\r\n  getFeatured: () => api.get('/users/camping-spots/featured'),\r\n  search: (params) => api.get('/users/camping-spots/search', { params }),\r\n  getCampingSpots: (params) => api.get('/users/camping-spots', { params }),\r\n  checkAvailability: (id, data) => api.post(`/users/camping-spots/${id}/check-availability`, data),\r\n  createReview: (id, data) => api.post(`/users/camping-spots/${id}/reviews`, data),\r\n  uploadImages: (id, formData) => {\r\n    // Create a new axios instance with the correct content type for multipart/form-data\r\n    const uploadInstance = axios.create({\r\n      baseURL: api.defaults.baseURL,\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        'Authorization': `Bearer ${store.state.token}`\r\n      }\r\n    })\r\n    return uploadInstance.post(`/users/camping-spots/${id}/images`, formData)\r\n  },\r\n  deleteImage: (id, imageId) => api.delete(`/users/camping-spots/${id}/images/${imageId}`),\r\n  createBooking: (id, data) => api.post(`/users/camping-spots/${id}/bookings`, data)\r\n}\r\n\r\nexport const bookingAPI = {\r\n  create: (data) => api.post('/bookings', data),\r\n  getAll: (params) => api.get('/bookings', { params }),\r\n  getById: (id) => api.get(`/bookings/${id}`),\r\n  update: (id, data) => api.put(`/bookings/${id}`, data),\r\n  cancel: (id) => api.post(`/bookings/${id}/cancel`)\r\n}\r\n\r\nexport const reviewAPI = {\r\n  create: (data) => api.post('/reviews', data),\r\n  getAll: (params) => api.get('/reviews', { params }),\r\n  getById: (id) => api.get(`/reviews/${id}`),\r\n  update: (id, data) => api.put(`/reviews/${id}`, data),\r\n  delete: (id) => api.delete(`/reviews/${id}`)\r\n}\r\n\r\nexport const adminAPI = {\r\n  getDashboardStats: () => api.get('/admin/dashboard/stats'),\r\n  getAllUsers: (params) => api.get('/admin/users', { params }),\r\n  updateUser: (id, data) => api.put(`/admin/users/${id}`, data),\r\n  deleteUser: (id) => api.delete(`/admin/users/${id}`),\r\n  getAllBookings: (params) => api.get('/admin/bookings', { params }),\r\n  updateBooking: (id, data) => api.put(`/admin/bookings/${id}`, data),\r\n  getAllReviews: (params) => api.get('/admin/reviews', { params }),\r\n  updateReview: (id, data) => api.put(`/admin/reviews/${id}`, data)\r\n}\r\n\r\nexport const ownerAPI = {\r\n  getDashboardStats: () => api.get('/owner/dashboard/stats'),\r\n  getCampingSpots: () => api.get('/owner/camping-spots'),\r\n  getCampingSpotById: (id) => api.get(`/owner/camping-spots/${id}`),\r\n  createCampingSpot: (data) => api.post('/owner/camping-spots', data),\r\n  updateCampingSpot: (id, data) => api.put(`/owner/camping-spots/${id}`, data),\r\n  deleteCampingSpot: (id) => api.delete(`/owner/camping-spots/${id}`),\r\n  getBookings: () => api.get('/users/bookings'),\r\n  getReviews: () => api.get('/owner/reviews')\r\n}\r\n\r\nexport default api "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}