{"ast":null,"code":"import { mapGetters } from 'vuex';\nimport { campingSpotAPI } from '@/services/api';\nexport default {\n  name: 'CampingSpotDetails',\n  props: {\n    id: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  data() {\n    return {\n      spot: null,\n      isLoading: true,\n      showAllPhotos: false,\n      showReviewForm: false,\n      showBookingModal: false,\n      review: {\n        rating: 5,\n        comment: ''\n      },\n      booking: {\n        startDate: '',\n        endDate: '',\n        guestCount: 1,\n        specialRequests: ''\n      },\n      isSubmittingReview: false,\n      isSubmittingBooking: false,\n      isCheckingAvailability: false,\n      availabilityStatus: null,\n      availabilityMessage: '',\n      bookingCalculation: {\n        nights: 0,\n        subtotal: 0,\n        serviceFee: 0,\n        total: 0\n      }\n    };\n  },\n  computed: {\n    ...mapGetters(['isAuthenticated', 'userId']),\n    spotId() {\n      const id = parseInt(this.id);\n      if (isNaN(id)) {\n        console.error('Invalid camping spot ID:', this.id);\n        return null;\n      }\n      return id;\n    },\n    minDate() {\n      const today = new Date();\n      return today.toISOString().split('T')[0];\n    }\n  },\n  methods: {\n    formatPrice(price) {\n      return price.toFixed(2);\n    },\n    async fetchCampingSpot() {\n      try {\n        this.isLoading = true;\n        console.log('Fetching camping spot with ID:', this.spotId);\n        if (!this.spotId) {\n          throw new Error('Invalid camping spot ID');\n        }\n        const response = await campingSpotAPI.getById(this.spotId);\n        console.log('Camping spot response:', response);\n        this.spot = response;\n      } catch (error) {\n        console.error('Error fetching camping spot:', error);\n        console.error('Error response:', error.response);\n        console.error('Error status:', error.response?.status);\n        console.error('Error data:', error.response?.data);\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: 'Failed to load camping spot details'\n        });\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    },\n    async submitReview() {\n      if (!this.isAuthenticated) {\n        this.$router.push('/login');\n        return;\n      }\n      try {\n        this.isSubmittingReview = true;\n        await campingSpotAPI.createReview(this.spotId, {\n          rating: this.review.rating,\n          comment: this.review.comment\n        });\n        this.showReviewForm = false;\n        this.review = {\n          rating: 5,\n          comment: ''\n        };\n        await this.fetchCampingSpot();\n        this.$store.commit('setNotification', {\n          type: 'success',\n          message: 'Review submitted successfully'\n        });\n      } catch (error) {\n        console.error('Error submitting review:', error);\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: 'Failed to submit review'\n        });\n      } finally {\n        this.isSubmittingReview = false;\n      }\n    },\n    calculateBookingDetails() {\n      if (!this.booking.startDate || !this.booking.endDate) {\n        this.bookingCalculation = {\n          nights: 0,\n          subtotal: 0,\n          serviceFee: 0,\n          total: 0\n        };\n        return;\n      }\n      const start = new Date(this.booking.startDate);\n      const end = new Date(this.booking.endDate);\n      const nights = Math.ceil((end - start) / (1000 * 60 * 60 * 24));\n      const subtotal = nights * this.spot.pricePerNight;\n      const serviceFee = Math.round(subtotal * 0.1); // 10% service fee\n      const total = subtotal + serviceFee;\n      this.bookingCalculation = {\n        nights,\n        subtotal,\n        serviceFee,\n        total\n      };\n    },\n    async checkAvailability() {\n      if (!this.isAuthenticated) {\n        this.$router.push('/login');\n        return;\n      }\n      try {\n        this.isCheckingAvailability = true;\n        const response = await campingSpotAPI.checkAvailability(this.spotId, {\n          startDate: this.booking.startDate,\n          endDate: this.booking.endDate,\n          guestCount: this.booking.guestCount\n        });\n        if (response.data.available) {\n          this.availabilityStatus = 'available';\n          this.availabilityMessage = 'These dates are available!';\n          this.showBookingModal = true;\n        } else {\n          this.availabilityStatus = 'unavailable';\n          this.availabilityMessage = 'These dates are not available. Please try different dates.';\n        }\n      } catch (error) {\n        console.error('Error checking availability:', error);\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: 'Failed to check availability'\n        });\n      } finally {\n        this.isCheckingAvailability = false;\n      }\n    },\n    async submitBooking() {\n      try {\n        this.isSubmittingBooking = true;\n        await campingSpotAPI.createBooking(this.spotId, {\n          startDate: this.booking.startDate,\n          endDate: this.booking.endDate,\n          guestCount: this.booking.guestCount,\n          specialRequests: this.booking.specialRequests\n        });\n        this.showBookingModal = false;\n        this.$router.push('/bookings');\n        this.$store.commit('setNotification', {\n          type: 'success',\n          message: 'Booking confirmed successfully'\n        });\n      } catch (error) {\n        console.error('Error submitting booking:', error);\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: 'Failed to confirm booking'\n        });\n      } finally {\n        this.isSubmittingBooking = false;\n      }\n    }\n  },\n  watch: {\n    'booking.startDate'() {\n      this.calculateBookingDetails();\n    },\n    'booking.endDate'() {\n      this.calculateBookingDetails();\n    },\n    'booking.guestCount'() {\n      this.calculateBookingDetails();\n    },\n    '$route.params.id'() {\n      this.fetchCampingSpot();\n    }\n  },\n  created() {\n    this.fetchCampingSpot();\n  }\n};","map":{"version":3,"names":["mapGetters","campingSpotAPI","name","props","id","type","String","Number","required","data","spot","isLoading","showAllPhotos","showReviewForm","showBookingModal","review","rating","comment","booking","startDate","endDate","guestCount","specialRequests","isSubmittingReview","isSubmittingBooking","isCheckingAvailability","availabilityStatus","availabilityMessage","bookingCalculation","nights","subtotal","serviceFee","total","computed","spotId","parseInt","isNaN","console","error","minDate","today","Date","toISOString","split","methods","formatPrice","price","toFixed","fetchCampingSpot","log","Error","response","getById","status","$store","commit","message","formatDate","date","toLocaleDateString","year","month","day","submitReview","isAuthenticated","$router","push","createReview","calculateBookingDetails","start","end","Math","ceil","pricePerNight","round","checkAvailability","available","submitBooking","createBooking","watch","booking.startDate","booking.endDate","booking.guestCount","$route.params.id","created"],"sources":["src/views/camping/CampingSpotDetails.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-neutral-50\">\r\n    <div v-if=\"isLoading\" class=\"flex justify-center items-center min-h-screen\">\r\n      <svg class=\"animate-spin h-10 w-10 text-primary-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n        <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n        <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n      </svg>\r\n    </div>\r\n\r\n    <div v-else-if=\"!spot\" class=\"flex flex-col items-center justify-center min-h-screen\">\r\n      <svg class=\"w-16 h-16 text-neutral-300 mb-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n      </svg>\r\n      <h2 class=\"text-2xl font-semibold mb-2\">Camping spot not found</h2>\r\n      <p class=\"text-neutral-600 mb-6\">The camping spot you're looking for doesn't exist or has been removed.</p>\r\n      <router-link to=\"/camping-spots\" class=\"btn-primary\">Browse Camping Spots</router-link>\r\n    </div>\r\n\r\n    <div v-else class=\"container mx-auto px-4 py-8\">\r\n      <!-- Header Section -->\r\n      <div class=\"mb-8\">\r\n        <h1 class=\"text-3xl font-bold mb-2\">{{ spot.name }}</h1>\r\n        <div class=\"flex items-center text-neutral-600\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n            <path fill-rule=\"evenodd\" d=\"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z\" clip-rule=\"evenodd\" />\r\n          </svg>\r\n          <span>{{ spot.location }}</span>\r\n          <span class=\"mx-2\">â€¢</span>\r\n          <div v-if=\"spot.averageRating !== null && spot.averageRating !== undefined\" class=\"flex items-center\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n              <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n            </svg>\r\n            <span class=\"ml-1\">{{ spot.averageRating.toFixed(1) }}</span>\r\n            <span class=\"ml-1\">({{ spot.reviewCount || 0 }} reviews)</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Image Gallery -->\r\n      <div class=\"mb-8\">\r\n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div class=\"relative h-96 rounded-lg overflow-hidden\">\r\n            <img \r\n              :src=\"spot.images[0]\" \r\n              :alt=\"spot.name\"\r\n              class=\"w-full h-full object-cover\"\r\n            >\r\n          </div>\r\n          <div class=\"grid grid-cols-2 gap-4\">\r\n            <div v-for=\"(image, index) in spot.images.slice(1, 5)\" :key=\"index\" class=\"relative h-44 rounded-lg overflow-hidden\">\r\n              <img \r\n                :src=\"image\" \r\n                :alt=\"`${spot.name} - Image ${index + 2}`\"\r\n                class=\"w-full h-full object-cover\"\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button \r\n          v-if=\"spot.images.length > 5\"\r\n          @click=\"showAllPhotos = true\"\r\n          class=\"mt-4 text-primary-600 hover:text-primary-700 font-medium\"\r\n        >\r\n          Show all {{ spot.images.length }} photos\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Main Content -->\r\n      <div class=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n        <!-- Left Column -->\r\n        <div class=\"lg:col-span-2\">\r\n          <!-- Description -->\r\n          <div class=\"bg-white rounded-lg shadow-sm p-6 mb-8\">\r\n            <h2 class=\"text-2xl font-semibold mb-4\">About this camping spot</h2>\r\n            <p class=\"text-neutral-600 whitespace-pre-line\">{{ spot.description }}</p>\r\n          </div>\r\n\r\n          <!-- Amenities -->\r\n          <div class=\"bg-white rounded-lg shadow-sm p-6 mb-8\">\r\n            <h2 class=\"text-2xl font-semibold mb-4\">Amenities</h2>\r\n            <div class=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\r\n              <div v-for=\"amenity in spot.amenities\" :key=\"amenity\" class=\"flex items-center\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-primary-500 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                  <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\r\n                </svg>\r\n                <span>{{ amenity }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Reviews -->\r\n          <div class=\"bg-white rounded-lg shadow-sm p-6\">\r\n            <div class=\"flex justify-between items-center mb-6\">\r\n              <h2 class=\"text-2xl font-semibold\">Reviews</h2>\r\n              <button \r\n                v-if=\"isAuthenticated\"\r\n                @click=\"showReviewForm = true\"\r\n                class=\"btn-primary\"\r\n              >\r\n                Write a Review\r\n              </button>\r\n            </div>\r\n\r\n            <!-- Review Form -->\r\n            <div v-if=\"showReviewForm\" class=\"mb-8\">\r\n              <form @submit.prevent=\"submitReview\" class=\"space-y-4\">\r\n                <div>\r\n                  <label class=\"block text-sm font-medium text-neutral-700 mb-1\">Rating</label>\r\n                  <div class=\"flex items-center\">\r\n                    <button \r\n                      v-for=\"rating in 5\" \r\n                      :key=\"rating\"\r\n                      type=\"button\"\r\n                      @click=\"review.rating = rating\"\r\n                      class=\"focus:outline-none\"\r\n                    >\r\n                      <svg \r\n                        xmlns=\"http://www.w3.org/2000/svg\" \r\n                        class=\"h-8 w-8\"\r\n                        :class=\"rating <= review.rating ? 'text-yellow-400' : 'text-neutral-300'\"\r\n                        viewBox=\"0 0 20 20\" \r\n                        fill=\"currentColor\"\r\n                      >\r\n                        <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <label for=\"review\" class=\"block text-sm font-medium text-neutral-700 mb-1\">Your Review</label>\r\n                  <textarea\r\n                    id=\"review\"\r\n                    v-model=\"review.comment\"\r\n                    rows=\"4\"\r\n                    class=\"w-full rounded-md border-neutral-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\r\n                    placeholder=\"Share your experience...\"\r\n                    required\r\n                  ></textarea>\r\n                </div>\r\n                <div class=\"flex justify-end space-x-4\">\r\n                  <button \r\n                    type=\"button\"\r\n                    @click=\"showReviewForm = false\"\r\n                    class=\"btn-secondary\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button \r\n                    type=\"submit\"\r\n                    class=\"btn-primary\"\r\n                    :disabled=\"isSubmittingReview\"\r\n                  >\r\n                    {{ isSubmittingReview ? 'Submitting...' : 'Submit Review' }}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n\r\n            <!-- Reviews List -->\r\n            <div v-if=\"spot.reviews && spot.reviews.length > 0\" class=\"space-y-6\">\r\n              <div \r\n                v-for=\"review in spot.reviews\" \r\n                :key=\"review.id\"\r\n                class=\"border-b border-neutral-200 pb-6 last:border-0 last:pb-0\"\r\n              >\r\n                <div class=\"flex items-center mb-2\">\r\n                  <div class=\"flex items-center\">\r\n                    <svg \r\n                      v-for=\"rating in 5\" \r\n                      :key=\"rating\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\" \r\n                      class=\"h-5 w-5\"\r\n                      :class=\"rating <= review.rating ? 'text-yellow-400' : 'text-neutral-300'\"\r\n                      viewBox=\"0 0 20 20\" \r\n                      fill=\"currentColor\"\r\n                    >\r\n                      <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n                    </svg>\r\n                  </div>\r\n                  <span class=\"ml-2 text-sm text-neutral-600\">{{ review.userName }}</span>\r\n                  <span class=\"mx-2 text-neutral-400\">â€¢</span>\r\n                  <span class=\"text-sm text-neutral-600\">{{ formatDate(review.createdAt) }}</span>\r\n                </div>\r\n                <p class=\"text-neutral-600\">{{ review.comment }}</p>\r\n              </div>\r\n            </div>\r\n            <div v-else class=\"text-center py-8\">\r\n              <p class=\"text-neutral-600\">No reviews yet. Be the first to review this camping spot!</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Right Column - Booking Card -->\r\n        <div class=\"lg:col-span-1\">\r\n          <div class=\"bg-white rounded-lg shadow-sm p-6 sticky top-8\">\r\n            <div class=\"mb-6\">\r\n              <div class=\"flex items-baseline mb-2\">\r\n                <span class=\"text-2xl font-bold\">â‚¬{{ formatPrice(spot.pricePerNight) }}</span>\r\n                <span class=\"text-neutral-600 ml-1\">/night</span>\r\n              </div>\r\n              <div class=\"flex items-center text-neutral-600\">\r\n                <svg \r\n                  v-for=\"rating in 5\" \r\n                  :key=\"rating\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\" \r\n                  class=\"h-4 w-4\"\r\n                  :class=\"spot.averageRating && rating <= spot.averageRating ? 'text-yellow-400' : 'text-neutral-300'\"\r\n                  viewBox=\"0 0 20 20\" \r\n                  fill=\"currentColor\"\r\n                >\r\n                  <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n                </svg>\r\n                <span v-if=\"spot.averageRating\" class=\"ml-1\">{{ spot.averageRating.toFixed(1) }}</span>\r\n                <span class=\"ml-1\">({{ spot.reviewCount || 0 }} reviews)</span>\r\n              </div>\r\n            </div>\r\n\r\n            <form @submit.prevent=\"checkAvailability\" class=\"space-y-4\">\r\n              <div class=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label for=\"startDate\" class=\"block text-sm font-medium text-neutral-700 mb-1\">Check-in</label>\r\n                  <input\r\n                    id=\"startDate\"\r\n                    v-model=\"booking.startDate\"\r\n                    type=\"date\"\r\n                    :min=\"minDate\"\r\n                    required\r\n                    class=\"w-full rounded-md border-neutral-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\r\n                  >\r\n                </div>\r\n                <div>\r\n                  <label for=\"endDate\" class=\"block text-sm font-medium text-neutral-700 mb-1\">Check-out</label>\r\n                  <input\r\n                    id=\"endDate\"\r\n                    v-model=\"booking.endDate\"\r\n                    type=\"date\"\r\n                    :min=\"booking.startDate || minDate\"\r\n                    required\r\n                    class=\"w-full rounded-md border-neutral-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\r\n                  >\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label for=\"guestCount\" class=\"block text-sm font-medium text-neutral-700 mb-1\">Guests</label>\r\n                <select\r\n                  id=\"guestCount\"\r\n                  v-model=\"booking.guestCount\"\r\n                  required\r\n                  class=\"w-full rounded-md border-neutral-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\r\n                >\r\n                  <option v-for=\"n in spot.capacity\" :key=\"n\" :value=\"n\">{{ n }} {{ n === 1 ? 'guest' : 'guests' }}</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div v-if=\"availabilityStatus\" class=\"p-4 rounded-md\" :class=\"availabilityStatus === 'available' ? 'bg-green-50 text-green-700' : 'bg-red-50 text-red-700'\">\r\n                {{ availabilityMessage }}\r\n              </div>\r\n\r\n              <div v-if=\"bookingCalculation.nights > 0\" class=\"space-y-2 pt-4 border-t border-neutral-200\">\r\n                <div class=\"flex justify-between\">\r\n                  <span>â‚¬{{ formatPrice(spot.pricePerNight) }} Ã— {{ bookingCalculation.nights }} nights</span>\r\n                  <span>â‚¬{{ formatPrice(bookingCalculation.subtotal) }}</span>\r\n                </div>\r\n                <div class=\"flex justify-between\">\r\n                  <span>Service fee</span>\r\n                  <span>â‚¬{{ formatPrice(bookingCalculation.serviceFee) }}</span>\r\n                </div>\r\n                <div class=\"flex justify-between font-bold pt-2 border-t border-neutral-200\">\r\n                  <span>Total</span>\r\n                  <span>â‚¬{{ formatPrice(bookingCalculation.total) }}</span>\r\n                </div>\r\n              </div>\r\n\r\n              <button \r\n                type=\"submit\"\r\n                class=\"w-full btn-primary\"\r\n                :disabled=\"isCheckingAvailability || !booking.startDate || !booking.endDate\"\r\n              >\r\n                {{ isCheckingAvailability ? 'Checking...' : 'Check Availability' }}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Booking Modal -->\r\n    <div v-if=\"showBookingModal\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n      <div class=\"bg-white rounded-lg max-w-lg w-full p-6\">\r\n        <h2 class=\"text-2xl font-semibold mb-4\">Complete Your Booking</h2>\r\n        <form @submit.prevent=\"submitBooking\" class=\"space-y-4\">\r\n          <div>\r\n            <label for=\"specialRequests\" class=\"block text-sm font-medium text-neutral-700 mb-1\">Special Requests (Optional)</label>\r\n            <textarea\r\n              id=\"specialRequests\"\r\n              v-model=\"booking.specialRequests\"\r\n              rows=\"4\"\r\n              class=\"w-full rounded-md border-neutral-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\r\n              placeholder=\"Any special requests or requirements?\"\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div class=\"space-y-2 pt-4 border-t border-neutral-200\">\r\n            <div class=\"flex justify-between\">\r\n              <span>â‚¬{{ formatPrice(spot.pricePerNight) }} Ã— {{ bookingCalculation.nights }} nights</span>\r\n              <span>â‚¬{{ formatPrice(bookingCalculation.subtotal) }}</span>\r\n            </div>\r\n            <div class=\"flex justify-between\">\r\n              <span>Service fee</span>\r\n              <span>â‚¬{{ formatPrice(bookingCalculation.serviceFee) }}</span>\r\n            </div>\r\n            <div class=\"flex justify-between font-bold pt-2 border-t border-neutral-200\">\r\n              <span>Total</span>\r\n              <span>â‚¬{{ formatPrice(bookingCalculation.total) }}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"flex justify-end space-x-4\">\r\n            <button \r\n              type=\"button\"\r\n              @click=\"showBookingModal = false\"\r\n              class=\"btn-secondary\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button \r\n              type=\"submit\"\r\n              class=\"btn-primary\"\r\n              :disabled=\"isSubmittingBooking\"\r\n            >\r\n              {{ isSubmittingBooking ? 'Processing...' : 'Confirm Booking' }}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport { campingSpotAPI } from '@/services/api'\r\n\r\nexport default {\r\n  name: 'CampingSpotDetails',\r\n  props: {\r\n    id: {\r\n      type: [String, Number],\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      spot: null,\r\n      isLoading: true,\r\n      showAllPhotos: false,\r\n      showReviewForm: false,\r\n      showBookingModal: false,\r\n      review: {\r\n        rating: 5,\r\n        comment: ''\r\n      },\r\n      booking: {\r\n        startDate: '',\r\n        endDate: '',\r\n        guestCount: 1,\r\n        specialRequests: ''\r\n      },\r\n      isSubmittingReview: false,\r\n      isSubmittingBooking: false,\r\n      isCheckingAvailability: false,\r\n      availabilityStatus: null,\r\n      availabilityMessage: '',\r\n      bookingCalculation: {\r\n        nights: 0,\r\n        subtotal: 0,\r\n        serviceFee: 0,\r\n        total: 0\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['isAuthenticated', 'userId']),\r\n    \r\n    spotId() {\r\n      const id = parseInt(this.id)\r\n      if (isNaN(id)) {\r\n        console.error('Invalid camping spot ID:', this.id)\r\n        return null\r\n      }\r\n      return id\r\n    },\r\n    \r\n    minDate() {\r\n      const today = new Date()\r\n      return today.toISOString().split('T')[0]\r\n    }\r\n  },\r\n  methods: {\r\n    formatPrice(price) {\r\n      return price.toFixed(2)\r\n    },\r\n\r\n    async fetchCampingSpot() {\r\n      try {\r\n        this.isLoading = true\r\n        console.log('Fetching camping spot with ID:', this.spotId)\r\n        if (!this.spotId) {\r\n          throw new Error('Invalid camping spot ID')\r\n        }\r\n        const response = await campingSpotAPI.getById(this.spotId)\r\n        console.log('Camping spot response:', response)\r\n        this.spot = response\r\n      } catch (error) {\r\n        console.error('Error fetching camping spot:', error)\r\n        console.error('Error response:', error.response)\r\n        console.error('Error status:', error.response?.status)\r\n        console.error('Error data:', error.response?.data)\r\n        this.$store.commit('setNotification', {\r\n          type: 'error',\r\n          message: 'Failed to load camping spot details'\r\n        })\r\n      } finally {\r\n        this.isLoading = false\r\n      }\r\n    },\r\n\r\n    formatDate(date) {\r\n      return new Date(date).toLocaleDateString('en-US', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n      })\r\n    },\r\n\r\n    async submitReview() {\r\n      if (!this.isAuthenticated) {\r\n        this.$router.push('/login')\r\n        return\r\n      }\r\n\r\n      try {\r\n        this.isSubmittingReview = true\r\n        await campingSpotAPI.createReview(this.spotId, {\r\n          rating: this.review.rating,\r\n          comment: this.review.comment\r\n        })\r\n        \r\n        this.showReviewForm = false\r\n        this.review = { rating: 5, comment: '' }\r\n        await this.fetchCampingSpot()\r\n        \r\n        this.$store.commit('setNotification', {\r\n          type: 'success',\r\n          message: 'Review submitted successfully'\r\n        })\r\n      } catch (error) {\r\n        console.error('Error submitting review:', error)\r\n        this.$store.commit('setNotification', {\r\n          type: 'error',\r\n          message: 'Failed to submit review'\r\n        })\r\n      } finally {\r\n        this.isSubmittingReview = false\r\n      }\r\n    },\r\n\r\n    calculateBookingDetails() {\r\n      if (!this.booking.startDate || !this.booking.endDate) {\r\n        this.bookingCalculation = {\r\n          nights: 0,\r\n          subtotal: 0,\r\n          serviceFee: 0,\r\n          total: 0\r\n        }\r\n        return\r\n      }\r\n\r\n      const start = new Date(this.booking.startDate)\r\n      const end = new Date(this.booking.endDate)\r\n      const nights = Math.ceil((end - start) / (1000 * 60 * 60 * 24))\r\n      \r\n      const subtotal = nights * this.spot.pricePerNight\r\n      const serviceFee = Math.round(subtotal * 0.1) // 10% service fee\r\n      const total = subtotal + serviceFee\r\n\r\n      this.bookingCalculation = {\r\n        nights,\r\n        subtotal,\r\n        serviceFee,\r\n        total\r\n      }\r\n    },\r\n\r\n    async checkAvailability() {\r\n      if (!this.isAuthenticated) {\r\n        this.$router.push('/login')\r\n        return\r\n      }\r\n\r\n      try {\r\n        this.isCheckingAvailability = true\r\n        const response = await campingSpotAPI.checkAvailability(this.spotId, {\r\n          startDate: this.booking.startDate,\r\n          endDate: this.booking.endDate,\r\n          guestCount: this.booking.guestCount\r\n        })\r\n\r\n        if (response.data.available) {\r\n          this.availabilityStatus = 'available'\r\n          this.availabilityMessage = 'These dates are available!'\r\n          this.showBookingModal = true\r\n        } else {\r\n          this.availabilityStatus = 'unavailable'\r\n          this.availabilityMessage = 'These dates are not available. Please try different dates.'\r\n        }\r\n      } catch (error) {\r\n        console.error('Error checking availability:', error)\r\n        this.$store.commit('setNotification', {\r\n          type: 'error',\r\n          message: 'Failed to check availability'\r\n        })\r\n      } finally {\r\n        this.isCheckingAvailability = false\r\n      }\r\n    },\r\n\r\n    async submitBooking() {\r\n      try {\r\n        this.isSubmittingBooking = true\r\n        await campingSpotAPI.createBooking(this.spotId, {\r\n          startDate: this.booking.startDate,\r\n          endDate: this.booking.endDate,\r\n          guestCount: this.booking.guestCount,\r\n          specialRequests: this.booking.specialRequests\r\n        })\r\n\r\n        this.showBookingModal = false\r\n        this.$router.push('/bookings')\r\n        \r\n        this.$store.commit('setNotification', {\r\n          type: 'success',\r\n          message: 'Booking confirmed successfully'\r\n        })\r\n      } catch (error) {\r\n        console.error('Error submitting booking:', error)\r\n        this.$store.commit('setNotification', {\r\n          type: 'error',\r\n          message: 'Failed to confirm booking'\r\n        })\r\n      } finally {\r\n        this.isSubmittingBooking = false\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    'booking.startDate'() {\r\n      this.calculateBookingDetails()\r\n    },\r\n    'booking.endDate'() {\r\n      this.calculateBookingDetails()\r\n    },\r\n    'booking.guestCount'() {\r\n      this.calculateBookingDetails()\r\n    },\r\n    '$route.params.id'() {\r\n      this.fetchCampingSpot()\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchCampingSpot()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.btn-primary {\r\n  background-color: var(--color-primary-600);\r\n  color: white;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 0.375rem;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: var(--color-primary-700);\r\n}\r\n\r\n.btn-primary:focus {\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px var(--color-primary-500);\r\n  box-shadow: 0 0 0 4px white;\r\n}\r\n\r\n.btn-primary:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.btn-secondary {\r\n  background-color: white;\r\n  color: var(--color-neutral-700);\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 0.375rem;\r\n  border: 1px solid var(--color-neutral-300);\r\n}\r\n\r\n.btn-secondary:hover {\r\n  background-color: var(--color-neutral-50);\r\n}\r\n\r\n.btn-secondary:focus {\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px var(--color-primary-500);\r\n  box-shadow: 0 0 0 4px white;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}