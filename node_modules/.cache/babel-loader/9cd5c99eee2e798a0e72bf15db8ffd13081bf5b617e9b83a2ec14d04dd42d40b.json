{"ast":null,"code":"import axios from 'axios';\nimport store from '@/store';\nimport router from '@/router';\n\n// Create axios instance\nconst baseURL = process.env.VUE_APP_API_URL || 'http://localhost:3000/api';\nconst instance = axios.create({\n  baseURL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for API calls\ninstance.interceptors.request.use(config => {\n  const token = store.state.token;\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  store.commit('setLoading', false);\n  return Promise.reject(error);\n});\n\n// Response interceptor for API calls\ninstance.interceptors.response.use(response => {\n  console.log('Axios: Response interceptor:', {\n    status: response.status,\n    data: response.data,\n    headers: response.headers\n  });\n\n  // Check if response has data\n  if (!response.data) {\n    console.error('Axios: No data in response');\n    return Promise.reject(new Error('No data received from server'));\n  }\n\n  // Return the response data\n  return response.data;\n}, error => {\n  console.error('Axios: Response error:', {\n    status: error.response?.status,\n    data: error.response?.data,\n    message: error.message\n  });\n  const originalRequest = error.config;\n\n  // If the error response is 401 (Unauthorized) and not a retry\n  if (error.response && error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n\n    // If the path isn't login or auth-related, logout the user\n    if (!originalRequest.url.includes('login') && !originalRequest.url.includes('auth')) {\n      store.dispatch('logout');\n      router.push('/login');\n      store.commit('setNotification', {\n        type: 'error',\n        message: 'Your session has expired. Please log in again.'\n      });\n    }\n  }\n\n  // Show user-friendly error message\n  if (error.response && error.response.data && error.response.data.message) {\n    store.commit('setNotification', {\n      type: 'error',\n      message: error.response.data.message\n    });\n  } else {\n    store.commit('setNotification', {\n      type: 'error',\n      message: 'An error occurred. Please try again later.'\n    });\n  }\n  store.commit('setLoading', false);\n  return Promise.reject(error);\n});\n\n// Plugin\nexport default {\n  install(Vue) {\n    Vue.prototype.$axios = instance;\n  }\n};\nexport const api = instance;","map":{"version":3,"names":["axios","store","router","baseURL","process","env","VUE_APP_API_URL","instance","create","timeout","headers","interceptors","request","use","config","token","state","error","commit","Promise","reject","response","console","log","status","data","Error","message","originalRequest","_retry","url","includes","dispatch","push","type","install","Vue","prototype","$axios","api"],"sources":["C:/Users/pmake/OneDrive - Thomas More/Desktop/Web Programming/Final/project/frontend/src/plugins/axios.js"],"sourcesContent":["import axios from 'axios'\nimport store from '@/store'\nimport router from '@/router'\n\n// Create axios instance\nconst baseURL = process.env.VUE_APP_API_URL || 'http://localhost:3000/api'\n\nconst instance = axios.create({\n  baseURL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\n// Request interceptor for API calls\ninstance.interceptors.request.use(\n  config => {\n    const token = store.state.token\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`\n    }\n    return config\n  },\n  error => {\n    store.commit('setLoading', false)\n    return Promise.reject(error)\n  }\n)\n\n// Response interceptor for API calls\ninstance.interceptors.response.use(\n  response => {\n    console.log('Axios: Response interceptor:', {\n      status: response.status,\n      data: response.data,\n      headers: response.headers\n    })\n    \n    // Check if response has data\n    if (!response.data) {\n      console.error('Axios: No data in response')\n      return Promise.reject(new Error('No data received from server'))\n    }\n    \n    // Return the response data\n    return response.data\n  },\n  error => {\n    console.error('Axios: Response error:', {\n      status: error.response?.status,\n      data: error.response?.data,\n      message: error.message\n    })\n    \n    const originalRequest = error.config\n    \n    // If the error response is 401 (Unauthorized) and not a retry\n    if (error.response && error.response.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true\n      \n      // If the path isn't login or auth-related, logout the user\n      if (!originalRequest.url.includes('login') && !originalRequest.url.includes('auth')) {\n        store.dispatch('logout')\n        router.push('/login')\n        \n        store.commit('setNotification', {\n          type: 'error',\n          message: 'Your session has expired. Please log in again.'\n        })\n      }\n    }\n    \n    // Show user-friendly error message\n    if (error.response && error.response.data && error.response.data.message) {\n      store.commit('setNotification', {\n        type: 'error',\n        message: error.response.data.message\n      })\n    } else {\n      store.commit('setNotification', {\n        type: 'error',\n        message: 'An error occurred. Please try again later.'\n      })\n    }\n    \n    store.commit('setLoading', false)\n    return Promise.reject(error)\n  }\n)\n\n// Plugin\nexport default {\n  install(Vue) {\n    Vue.prototype.$axios = instance\n  }\n}\n\nexport const api = instance"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}