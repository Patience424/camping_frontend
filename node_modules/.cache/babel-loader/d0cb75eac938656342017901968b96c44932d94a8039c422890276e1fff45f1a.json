{"ast":null,"code":"import { ownerAPI } from '@/services/api';\nexport default {\n  name: 'OwnerCampingSpots',\n  data() {\n    return {\n      campingSpots: [],\n      currentImageIndex: {},\n      isLoading: false\n    };\n  },\n  async created() {\n    await this.fetchCampingSpots();\n  },\n  methods: {\n    async fetchCampingSpots() {\n      try {\n        this.isLoading = true;\n        const response = await ownerAPI.getCampingSpots();\n        this.campingSpots = response.data.data || [];\n\n        // Initialize current image index for each spot\n        this.campingSpots.forEach(spot => {\n          this.$set(this.currentImageIndex, spot.id, 0);\n        });\n      } catch (error) {\n        console.error('Error fetching camping spots:', error);\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: 'Failed to load camping spots'\n        });\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    prevImage(spotId) {\n      if (this.currentImageIndex[spotId] > 0) {\n        this.$set(this.currentImageIndex, spotId, this.currentImageIndex[spotId] - 1);\n      }\n    },\n    nextImage(spotId) {\n      const spot = this.campingSpots.find(s => s.id === spotId);\n      if (this.currentImageIndex[spotId] < spot.images.length - 1) {\n        this.$set(this.currentImageIndex, spotId, this.currentImageIndex[spotId] + 1);\n      }\n    },\n    setImageIndex(spotId, index) {\n      this.$set(this.currentImageIndex, spotId, index);\n    },\n    async deleteSpot(id) {\n      if (confirm('Are you sure you want to delete this camping spot?')) {\n        try {\n          await ownerAPI.deleteCampingSpot(id);\n          this.campingSpots = this.campingSpots.filter(spot => spot.id !== id);\n          this.$store.commit('setNotification', {\n            type: 'success',\n            message: 'Camping spot deleted successfully'\n          });\n        } catch (error) {\n          console.error('Error deleting camping spot:', error);\n          this.$store.commit('setNotification', {\n            type: 'error',\n            message: 'Failed to delete camping spot'\n          });\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["ownerAPI","name","data","campingSpots","currentImageIndex","isLoading","created","fetchCampingSpots","methods","response","getCampingSpots","forEach","spot","$set","id","error","console","$store","commit","type","message","prevImage","spotId","nextImage","find","s","images","length","setImageIndex","index","deleteSpot","confirm","deleteCampingSpot","filter"],"sources":["src/views/owner/OwnerCampingSpots.vue"],"sourcesContent":["<template>\n  <div class=\"owner-camping-spots\">\n    <div class=\"header\">\n      <h1>My Camping Spots</h1>\n      <router-link to=\"/owner/camping-spots/new\" class=\"btn-primary\">\n        Add New Camping Spot\n      </router-link>\n    </div>\n\n    <div class=\"spots-list\">\n      <div v-if=\"campingSpots.length\" class=\"spots-grid\">\n        <div v-for=\"spot in campingSpots\" :key=\"spot.id\" class=\"spot-card\">\n          <div class=\"image-carousel\">\n            <img \n              v-for=\"(image, index) in spot.images\" \n              :key=\"index\"\n              :src=\"image.url\" \n              :alt=\"spot.name\"\n              class=\"spot-image\"\n              :class=\"{ active: currentImageIndex[spot.id] === index }\"\n            >\n            <div v-if=\"spot.images.length > 1\" class=\"carousel-controls\">\n              <button \n                @click=\"prevImage(spot.id)\" \n                class=\"carousel-btn prev\"\n                :disabled=\"currentImageIndex[spot.id] === 0\"\n              >\n                ‹\n              </button>\n              <button \n                @click=\"nextImage(spot.id)\" \n                class=\"carousel-btn next\"\n                :disabled=\"currentImageIndex[spot.id] === spot.images.length - 1\"\n              >\n                ›\n              </button>\n            </div>\n            <div v-if=\"spot.images.length > 1\" class=\"carousel-dots\">\n              <button\n                v-for=\"(_, index) in spot.images\"\n                :key=\"index\"\n                @click=\"setImageIndex(spot.id, index)\"\n                class=\"dot\"\n                :class=\"{ active: currentImageIndex[spot.id] === index }\"\n              ></button>\n            </div>\n          </div>\n          <div class=\"spot-info\">\n            <h3>{{ spot.name }}</h3>\n            <p class=\"location\">{{ spot.location }}</p>\n            <p class=\"price\">€{{ spot.pricePerNight }} per night</p>\n            <div class=\"status\" :class=\"spot.status.toLowerCase()\">\n              {{ spot.status }}\n            </div>\n            <div class=\"actions\">\n              <router-link :to=\"`/owner/camping-spots/${spot.id}/edit`\" class=\"btn-edit\">\n                Edit\n              </router-link>\n              <button @click=\"deleteSpot(spot.id)\" class=\"btn-delete\">\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <p v-else class=\"no-spots\">You haven't added any camping spots yet.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ownerAPI } from '@/services/api'\n\nexport default {\n  name: 'OwnerCampingSpots',\n  data() {\n    return {\n      campingSpots: [],\n      currentImageIndex: {},\n      isLoading: false\n    }\n  },\n  async created() {\n    await this.fetchCampingSpots()\n  },\n  methods: {\n    async fetchCampingSpots() {\n      try {\n        this.isLoading = true\n        const response = await ownerAPI.getCampingSpots()\n        this.campingSpots = response.data.data || []\n        \n        // Initialize current image index for each spot\n        this.campingSpots.forEach(spot => {\n          this.$set(this.currentImageIndex, spot.id, 0)\n        })\n      } catch (error) {\n        console.error('Error fetching camping spots:', error)\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: 'Failed to load camping spots'\n        })\n      } finally {\n        this.isLoading = false\n      }\n    },\n    prevImage(spotId) {\n      if (this.currentImageIndex[spotId] > 0) {\n        this.$set(this.currentImageIndex, spotId, this.currentImageIndex[spotId] - 1)\n      }\n    },\n    nextImage(spotId) {\n      const spot = this.campingSpots.find(s => s.id === spotId)\n      if (this.currentImageIndex[spotId] < spot.images.length - 1) {\n        this.$set(this.currentImageIndex, spotId, this.currentImageIndex[spotId] + 1)\n      }\n    },\n    setImageIndex(spotId, index) {\n      this.$set(this.currentImageIndex, spotId, index)\n    },\n    async deleteSpot(id) {\n      if (confirm('Are you sure you want to delete this camping spot?')) {\n        try {\n          await ownerAPI.deleteCampingSpot(id)\n          this.campingSpots = this.campingSpots.filter(spot => spot.id !== id)\n          this.$store.commit('setNotification', {\n            type: 'success',\n            message: 'Camping spot deleted successfully'\n          })\n        } catch (error) {\n          console.error('Error deleting camping spot:', error)\n          this.$store.commit('setNotification', {\n            type: 'error',\n            message: 'Failed to delete camping spot'\n          })\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.owner-camping-spots {\n  padding: 2rem;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n}\n\n.btn-primary {\n  background: #42b983;\n  color: white;\n  padding: 0.75rem 1.5rem;\n  border-radius: 4px;\n  text-decoration: none;\n  font-weight: 500;\n}\n\n.spots-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 2rem;\n}\n\n.spot-card {\n  background: white;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.image-carousel {\n  position: relative;\n  width: 100%;\n  height: 200px;\n  overflow: hidden;\n}\n\n.spot-image {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.spot-image.active {\n  opacity: 1;\n}\n\n.spot-info {\n  padding: 1.5rem;\n}\n\n.spot-info h3 {\n  margin: 0 0 0.5rem 0;\n  color: #2c3e50;\n}\n\n.location {\n  color: #666;\n  margin-bottom: 0.5rem;\n}\n\n.price {\n  font-weight: bold;\n  color: #42b983;\n  margin-bottom: 1rem;\n}\n\n.status {\n  display: inline-block;\n  padding: 0.25rem 0.75rem;\n  border-radius: 20px;\n  font-size: 0.875rem;\n  margin-bottom: 1rem;\n}\n\n.status.active {\n  background: #e3fcef;\n  color: #42b983;\n}\n\n.status.inactive {\n  background: #fee2e2;\n  color: #ef4444;\n}\n\n.actions {\n  display: flex;\n  gap: 1rem;\n}\n\n.btn-edit, .btn-delete {\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  text-decoration: none;\n  font-weight: 500;\n}\n\n.btn-edit {\n  background: #e3fcef;\n  color: #42b983;\n}\n\n.btn-delete {\n  background: #fee2e2;\n  color: #ef4444;\n  border: none;\n  cursor: pointer;\n}\n\n.no-spots {\n  text-align: center;\n  color: #666;\n  margin-top: 2rem;\n}\n\n.carousel-controls {\n  position: absolute;\n  top: 50%;\n  left: 0;\n  right: 0;\n  transform: translateY(-50%);\n  display: flex;\n  justify-content: space-between;\n  padding: 0 1rem;\n  pointer-events: none;\n}\n\n.carousel-btn {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background: rgba(255, 255, 255, 0.8);\n  border: none;\n  cursor: pointer;\n  font-size: 1.5rem;\n  line-height: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  pointer-events: auto;\n  transition: background-color 0.2s;\n}\n\n.carousel-btn:hover {\n  background: white;\n}\n\n.carousel-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.carousel-dots {\n  position: absolute;\n  bottom: 1rem;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 0.5rem;\n}\n\n.dot {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: rgba(255, 255, 255, 0.5);\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  transition: background-color 0.2s;\n}\n\n.dot.active {\n  background: white;\n}\n</style> "],"mappings":"AAuEA,SAAAA,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;MACAC,iBAAA;MACAC,SAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,WAAAC,iBAAA;EACA;EACAC,OAAA;IACA,MAAAD,kBAAA;MACA;QACA,KAAAF,SAAA;QACA,MAAAI,QAAA,SAAAT,QAAA,CAAAU,eAAA;QACA,KAAAP,YAAA,GAAAM,QAAA,CAAAP,IAAA,CAAAA,IAAA;;QAEA;QACA,KAAAC,YAAA,CAAAQ,OAAA,CAAAC,IAAA;UACA,KAAAC,IAAA,MAAAT,iBAAA,EAAAQ,IAAA,CAAAE,EAAA;QACA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,kCAAAA,KAAA;QACA,KAAAE,MAAA,CAAAC,MAAA;UACAC,IAAA;UACAC,OAAA;QACA;MACA;QACA,KAAAf,SAAA;MACA;IACA;IACAgB,UAAAC,MAAA;MACA,SAAAlB,iBAAA,CAAAkB,MAAA;QACA,KAAAT,IAAA,MAAAT,iBAAA,EAAAkB,MAAA,OAAAlB,iBAAA,CAAAkB,MAAA;MACA;IACA;IACAC,UAAAD,MAAA;MACA,MAAAV,IAAA,QAAAT,YAAA,CAAAqB,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAX,EAAA,KAAAQ,MAAA;MACA,SAAAlB,iBAAA,CAAAkB,MAAA,IAAAV,IAAA,CAAAc,MAAA,CAAAC,MAAA;QACA,KAAAd,IAAA,MAAAT,iBAAA,EAAAkB,MAAA,OAAAlB,iBAAA,CAAAkB,MAAA;MACA;IACA;IACAM,cAAAN,MAAA,EAAAO,KAAA;MACA,KAAAhB,IAAA,MAAAT,iBAAA,EAAAkB,MAAA,EAAAO,KAAA;IACA;IACA,MAAAC,WAAAhB,EAAA;MACA,IAAAiB,OAAA;QACA;UACA,MAAA/B,QAAA,CAAAgC,iBAAA,CAAAlB,EAAA;UACA,KAAAX,YAAA,QAAAA,YAAA,CAAA8B,MAAA,CAAArB,IAAA,IAAAA,IAAA,CAAAE,EAAA,KAAAA,EAAA;UACA,KAAAG,MAAA,CAAAC,MAAA;YACAC,IAAA;YACAC,OAAA;UACA;QACA,SAAAL,KAAA;UACAC,OAAA,CAAAD,KAAA,iCAAAA,KAAA;UACA,KAAAE,MAAA,CAAAC,MAAA;YACAC,IAAA;YACAC,OAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}