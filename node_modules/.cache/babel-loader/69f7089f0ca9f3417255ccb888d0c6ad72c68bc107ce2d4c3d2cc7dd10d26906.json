{"ast":null,"code":"import { ownerAPI } from '@/services/api';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'OwnerDashboard',\n  data() {\n    return {\n      totalSpots: 0,\n      activeBookings: 0,\n      totalRevenue: 0,\n      recentBookings: [],\n      isLoading: false,\n      error: null\n    };\n  },\n  computed: {\n    ...mapGetters(['userId'])\n  },\n  async created() {\n    if (this.userId) {\n      await this.fetchDashboardData();\n    }\n  },\n  methods: {\n    async fetchDashboardData() {\n      try {\n        this.isLoading = true;\n        this.error = null;\n\n        // Fetch dashboard stats\n        const statsResponse = await ownerAPI.getDashboardStats();\n        if (statsResponse.data) {\n          const stats = statsResponse.data;\n          this.totalSpots = stats.totalSpots || 0;\n          this.activeBookings = stats.activeBookings || 0;\n          this.totalRevenue = parseFloat(stats.totalRevenue || 0);\n        }\n\n        // Fetch recent bookings\n        const bookingsResponse = await ownerAPI.getBookings();\n        if (bookingsResponse.data) {\n          this.recentBookings = bookingsResponse.data.filter(booking => booking.status !== 'cancelled').slice(0, 5).map(booking => ({\n            id: booking.id,\n            campingSpotName: booking.campingSpot?.name || 'Unknown Spot',\n            guestName: booking.guest?.name || 'Unknown Guest',\n            checkIn: new Date(booking.startDate).toLocaleDateString(),\n            checkOut: new Date(booking.endDate).toLocaleDateString(),\n            status: booking.status.charAt(0).toUpperCase() + booking.status.slice(1),\n            amount: parseFloat(booking.amount || 0).toFixed(2)\n          }));\n        }\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        this.error = error.response?.data?.message || 'Failed to load dashboard data';\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: this.error\n        });\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["ownerAPI","mapGetters","name","data","totalSpots","activeBookings","totalRevenue","recentBookings","isLoading","error","computed","created","userId","fetchDashboardData","methods","statsResponse","getDashboardStats","stats","parseFloat","bookingsResponse","getBookings","filter","booking","status","slice","map","id","campingSpotName","campingSpot","guestName","guest","checkIn","Date","startDate","toLocaleDateString","checkOut","endDate","charAt","toUpperCase","amount","toFixed","console","response","message","$store","commit","type"],"sources":["src/views/owner/OwnerDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"owner-dashboard\">\r\n    <h1>Owner Dashboard</h1>\r\n    \r\n    <div v-if=\"isLoading\" class=\"loading\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Loading dashboard data...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"error\" class=\"error-message\">\r\n      <p>{{ error }}</p>\r\n      <button @click=\"fetchDashboardData\" class=\"btn-retry\">Retry</button>\r\n    </div>\r\n    \r\n    <template v-else>\r\n      <div class=\"dashboard-stats\">\r\n        <div class=\"stat-card\">\r\n          <h3>Total Camping Spots</h3>\r\n          <p class=\"stat-number\">{{ totalSpots }}</p>\r\n        </div>\r\n        <div class=\"stat-card\">\r\n          <h3>Active Bookings</h3>\r\n          <p class=\"stat-number\">{{ activeBookings }}</p>\r\n        </div>\r\n        <div class=\"stat-card\">\r\n          <h3>Total Revenue</h3>\r\n          <p class=\"stat-number\">€{{ totalRevenue.toFixed(2) }}</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"recent-bookings\">\r\n        <h2>Recent Bookings</h2>\r\n        <div v-if=\"recentBookings.length\" class=\"bookings-list\">\r\n          <div v-for=\"booking in recentBookings\" :key=\"booking.id\" class=\"booking-card\">\r\n            <div class=\"booking-header\">\r\n              <h4>{{ booking.campingSpotName }}</h4>\r\n              <span class=\"booking-status\" :class=\"booking.status.toLowerCase()\">\r\n                {{ booking.status }}\r\n              </span>\r\n            </div>\r\n            <div class=\"booking-details\">\r\n              <p><strong>Guest:</strong> {{ booking.guestName }}</p>\r\n              <p><strong>Dates:</strong> {{ booking.checkIn }} - {{ booking.checkOut }}</p>\r\n              <p><strong>Amount:</strong> €{{ booking.amount }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p v-else class=\"no-bookings\">No recent bookings</p>\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ownerAPI } from '@/services/api'\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'OwnerDashboard',\r\n  data() {\r\n    return {\r\n      totalSpots: 0,\r\n      activeBookings: 0,\r\n      totalRevenue: 0,\r\n      recentBookings: [],\r\n      isLoading: false,\r\n      error: null\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['userId'])\r\n  },\r\n  async created() {\r\n    if (this.userId) {\r\n      await this.fetchDashboardData()\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchDashboardData() {\r\n      try {\r\n        this.isLoading = true\r\n        this.error = null\r\n\r\n        // Fetch dashboard stats\r\n        const statsResponse = await ownerAPI.getDashboardStats()\r\n        if (statsResponse.data) {\r\n          const stats = statsResponse.data\r\n          this.totalSpots = stats.totalSpots || 0\r\n          this.activeBookings = stats.activeBookings || 0\r\n          this.totalRevenue = parseFloat(stats.totalRevenue || 0)\r\n        }\r\n\r\n        // Fetch recent bookings\r\n        const bookingsResponse = await ownerAPI.getBookings()\r\n        if (bookingsResponse.data) {\r\n          this.recentBookings = bookingsResponse.data\r\n            .filter(booking => booking.status !== 'cancelled')\r\n            .slice(0, 5)\r\n            .map(booking => ({\r\n              id: booking.id,\r\n              campingSpotName: booking.campingSpot?.name || 'Unknown Spot',\r\n              guestName: booking.guest?.name || 'Unknown Guest',\r\n              checkIn: new Date(booking.startDate).toLocaleDateString(),\r\n              checkOut: new Date(booking.endDate).toLocaleDateString(),\r\n              status: booking.status.charAt(0).toUpperCase() + booking.status.slice(1),\r\n              amount: parseFloat(booking.amount || 0).toFixed(2)\r\n            }))\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching dashboard data:', error)\r\n        this.error = error.response?.data?.message || 'Failed to load dashboard data'\r\n        this.$store.commit('setNotification', {\r\n          type: 'error',\r\n          message: this.error\r\n        })\r\n      } finally {\r\n        this.isLoading = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.owner-dashboard {\r\n  padding: 2rem;\r\n}\r\n\r\n.loading {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 200px;\r\n}\r\n\r\n.error-message {\r\n  text-align: center;\r\n  padding: 2rem;\r\n  background: #fee2e2;\r\n  border-radius: 8px;\r\n  margin: 1rem 0;\r\n}\r\n\r\n.btn-retry {\r\n  margin-top: 1rem;\r\n  padding: 0.5rem 1rem;\r\n  background: #ef4444;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn-retry:hover {\r\n  background: #dc2626;\r\n}\r\n\r\n.spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 4px solid #f3f3f3;\r\n  border-top: 4px solid #42b983;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.dashboard-stats {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 1.5rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.stat-card {\r\n  background: white;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.stat-card h3 {\r\n  margin: 0 0 0.5rem 0;\r\n  color: #666;\r\n  font-size: 1rem;\r\n}\r\n\r\n.stat-number {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: #2c3e50;\r\n  margin: 0;\r\n}\r\n\r\n.recent-bookings {\r\n  background: white;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.recent-bookings h2 {\r\n  margin: 0 0 1rem 0;\r\n  color: #2c3e50;\r\n}\r\n\r\n.bookings-list {\r\n  display: grid;\r\n  gap: 1rem;\r\n}\r\n\r\n.booking-card {\r\n  padding: 1rem;\r\n  border: 1px solid #eee;\r\n  border-radius: 4px;\r\n  background: #f8fafc;\r\n}\r\n\r\n.booking-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.booking-header h4 {\r\n  margin: 0;\r\n  color: #2c3e50;\r\n}\r\n\r\n.booking-status {\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 20px;\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.booking-status.confirmed {\r\n  background: #e3fcef;\r\n  color: #42b983;\r\n}\r\n\r\n.booking-status.pending {\r\n  background: #fff7ed;\r\n  color: #f97316;\r\n}\r\n\r\n.booking-status.cancelled {\r\n  background: #fee2e2;\r\n  color: #ef4444;\r\n}\r\n\r\n.booking-details {\r\n  color: #666;\r\n}\r\n\r\n.booking-details p {\r\n  margin: 0.25rem 0;\r\n}\r\n\r\n.booking-details strong {\r\n  color: #4b5563;\r\n}\r\n\r\n.no-bookings {\r\n  text-align: center;\r\n  color: #666;\r\n  padding: 2rem;\r\n  background: #f8fafc;\r\n  border-radius: 4px;\r\n}\r\n</style> "],"mappings":"AAsDA,SAAAA,QAAA;AACA,SAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,cAAA;MACAC,YAAA;MACAC,cAAA;MACAC,SAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAT,UAAA;EACA;EACA,MAAAU,QAAA;IACA,SAAAC,MAAA;MACA,WAAAC,kBAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAD,mBAAA;MACA;QACA,KAAAL,SAAA;QACA,KAAAC,KAAA;;QAEA;QACA,MAAAM,aAAA,SAAAf,QAAA,CAAAgB,iBAAA;QACA,IAAAD,aAAA,CAAAZ,IAAA;UACA,MAAAc,KAAA,GAAAF,aAAA,CAAAZ,IAAA;UACA,KAAAC,UAAA,GAAAa,KAAA,CAAAb,UAAA;UACA,KAAAC,cAAA,GAAAY,KAAA,CAAAZ,cAAA;UACA,KAAAC,YAAA,GAAAY,UAAA,CAAAD,KAAA,CAAAX,YAAA;QACA;;QAEA;QACA,MAAAa,gBAAA,SAAAnB,QAAA,CAAAoB,WAAA;QACA,IAAAD,gBAAA,CAAAhB,IAAA;UACA,KAAAI,cAAA,GAAAY,gBAAA,CAAAhB,IAAA,CACAkB,MAAA,CAAAC,OAAA,IAAAA,OAAA,CAAAC,MAAA,kBACAC,KAAA,OACAC,GAAA,CAAAH,OAAA;YACAI,EAAA,EAAAJ,OAAA,CAAAI,EAAA;YACAC,eAAA,EAAAL,OAAA,CAAAM,WAAA,EAAA1B,IAAA;YACA2B,SAAA,EAAAP,OAAA,CAAAQ,KAAA,EAAA5B,IAAA;YACA6B,OAAA,MAAAC,IAAA,CAAAV,OAAA,CAAAW,SAAA,EAAAC,kBAAA;YACAC,QAAA,MAAAH,IAAA,CAAAV,OAAA,CAAAc,OAAA,EAAAF,kBAAA;YACAX,MAAA,EAAAD,OAAA,CAAAC,MAAA,CAAAc,MAAA,IAAAC,WAAA,KAAAhB,OAAA,CAAAC,MAAA,CAAAC,KAAA;YACAe,MAAA,EAAArB,UAAA,CAAAI,OAAA,CAAAiB,MAAA,OAAAC,OAAA;UACA;QACA;MACA,SAAA/B,KAAA;QACAgC,OAAA,CAAAhC,KAAA,mCAAAA,KAAA;QACA,KAAAA,KAAA,GAAAA,KAAA,CAAAiC,QAAA,EAAAvC,IAAA,EAAAwC,OAAA;QACA,KAAAC,MAAA,CAAAC,MAAA;UACAC,IAAA;UACAH,OAAA,OAAAlC;QACA;MACA;QACA,KAAAD,SAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}