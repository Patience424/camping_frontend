{"ast":null,"code":"import { ownerAPI } from '@/services/api';\nimport { mapState } from 'vuex';\nexport default {\n  name: 'OwnerDashboard',\n  data() {\n    return {\n      totalSpots: 0,\n      activeBookings: 0,\n      totalRevenue: 0,\n      recentBookings: [],\n      isLoading: false\n    };\n  },\n  computed: {\n    ...mapState({\n      user: state => state.user\n    })\n  },\n  async created() {\n    await this.fetchDashboardData();\n  },\n  methods: {\n    async fetchDashboardData() {\n      try {\n        this.isLoading = true;\n        console.log('Fetching dashboard data...');\n        const [statsResponse, bookingsResponse] = await Promise.all([ownerAPI.getDashboardStats().catch(error => {\n          console.error('Error fetching dashboard stats:', error);\n          return {\n            data: {\n              totalSpots: 0,\n              activeBookings: 0,\n              totalRevenue: 0\n            }\n          };\n        }), ownerAPI.getBookings().catch(error => {\n          console.error('Error fetching bookings:', error);\n          return {\n            data: []\n          };\n        })]);\n        console.log('Stats response:', statsResponse);\n        console.log('Bookings response:', bookingsResponse);\n\n        // Update dashboard stats\n        const stats = statsResponse.data;\n        this.totalSpots = stats.totalSpots || 0;\n        this.activeBookings = stats.activeBookings || 0;\n        this.totalRevenue = stats.totalRevenue || 0;\n\n        // Update recent bookings\n        const bookings = bookingsResponse.data || [];\n        console.log('Raw bookings data:', bookings);\n        this.recentBookings = bookings.slice(0, 5).map(booking => {\n          console.log('Processing booking:', booking);\n          return {\n            id: booking.id,\n            campingSpotName: booking.campingSpot?.name || booking.spotName || 'Unknown Spot',\n            guestName: booking.user?.name || booking.userName || 'Unknown Guest',\n            checkIn: new Date(booking.startDate || booking.checkIn).toLocaleDateString(),\n            checkOut: new Date(booking.endDate || booking.checkOut).toLocaleDateString(),\n            status: booking.status || 'Unknown',\n            total: booking.total || 0\n          };\n        });\n        console.log('Processed dashboard stats:', {\n          totalSpots: this.totalSpots,\n          activeBookings: this.activeBookings,\n          totalRevenue: this.totalRevenue\n        });\n        console.log('Processed recent bookings:', this.recentBookings);\n      } catch (error) {\n        console.error('Error in fetchDashboardData:', error);\n        this.$store.commit('setNotification', {\n          type: 'error',\n          message: 'Failed to load dashboard data'\n        });\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["ownerAPI","mapState","name","data","totalSpots","activeBookings","totalRevenue","recentBookings","isLoading","computed","user","state","created","fetchDashboardData","methods","console","log","statsResponse","bookingsResponse","Promise","all","getDashboardStats","catch","error","getBookings","stats","bookings","slice","map","booking","id","campingSpotName","campingSpot","spotName","guestName","userName","checkIn","Date","startDate","toLocaleDateString","checkOut","endDate","status","total","$store","commit","type","message"],"sources":["src/views/owner/OwnerDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"owner-dashboard\">\r\n    <div class=\"dashboard-header\">\r\n      <div class=\"owner-profile\">\r\n        <div class=\"profile-avatar\">\r\n          <div v-if=\"user?.avatar\" class=\"avatar-image\">\r\n            <img :src=\"user.avatar\" alt=\"Profile picture\">\r\n          </div>\r\n          <div v-else class=\"avatar-placeholder\">\r\n            {{ user?.name?.[0]?.toUpperCase() || 'O' }}\r\n          </div>\r\n        </div>\r\n        <div class=\"profile-info\">\r\n          <h1>Welcome, {{ user?.name || 'Owner' }}</h1>\r\n          <p>{{ user?.email }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div v-if=\"isLoading\" class=\"loading\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Loading dashboard data...</p>\r\n    </div>\r\n    \r\n    <template v-else>\r\n      <div class=\"dashboard-stats\">\r\n        <div class=\"stat-card\">\r\n          <h3>Total Camping Spots</h3>\r\n          <p class=\"stat-number\">{{ totalSpots }}</p>\r\n        </div>\r\n        <div class=\"stat-card\">\r\n          <h3>Active Bookings</h3>\r\n          <p class=\"stat-number\">{{ activeBookings }}</p>\r\n        </div>\r\n        <div class=\"stat-card\">\r\n          <h3>Total Revenue</h3>\r\n          <p class=\"stat-number\">â‚¬{{ totalRevenue.toFixed(2) }}</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"recent-bookings\">\r\n        <h2>Recent Bookings</h2>\r\n        <div v-if=\"recentBookings.length\" class=\"bookings-list\">\r\n          <div v-for=\"booking in recentBookings\" :key=\"booking.id\" class=\"booking-card\">\r\n            <h4>{{ booking.campingSpotName }}</h4>\r\n            <p>Guest: {{ booking.guestName }}</p>\r\n            <p>Dates: {{ booking.checkIn }} - {{ booking.checkOut }}</p>\r\n            <p>Status: {{ booking.status }}</p>\r\n          </div>\r\n        </div>\r\n        <p v-else>No recent bookings</p>\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ownerAPI } from '@/services/api'\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n  name: 'OwnerDashboard',\r\n  data() {\r\n    return {\r\n      totalSpots: 0,\r\n      activeBookings: 0,\r\n      totalRevenue: 0,\r\n      recentBookings: [],\r\n      isLoading: false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      user: state => state.user\r\n    })\r\n  },\r\n  async created() {\r\n    await this.fetchDashboardData()\r\n  },\r\n  methods: {\r\n    async fetchDashboardData() {\r\n      try {\r\n        this.isLoading = true\r\n        console.log('Fetching dashboard data...')\r\n        \r\n        const [statsResponse, bookingsResponse] = await Promise.all([\r\n          ownerAPI.getDashboardStats().catch(error => {\r\n            console.error('Error fetching dashboard stats:', error)\r\n            return { data: { totalSpots: 0, activeBookings: 0, totalRevenue: 0 } }\r\n          }),\r\n          ownerAPI.getBookings().catch(error => {\r\n            console.error('Error fetching bookings:', error)\r\n            return { data: [] }\r\n          })\r\n        ])\r\n\r\n        console.log('Stats response:', statsResponse)\r\n        console.log('Bookings response:', bookingsResponse)\r\n\r\n        // Update dashboard stats\r\n        const stats = statsResponse.data\r\n        this.totalSpots = stats.totalSpots || 0\r\n        this.activeBookings = stats.activeBookings || 0\r\n        this.totalRevenue = stats.totalRevenue || 0\r\n\r\n        // Update recent bookings\r\n        const bookings = bookingsResponse.data || []\r\n        console.log('Raw bookings data:', bookings)\r\n        \r\n        this.recentBookings = bookings.slice(0, 5).map(booking => {\r\n          console.log('Processing booking:', booking)\r\n          return {\r\n            id: booking.id,\r\n            campingSpotName: booking.campingSpot?.name || booking.spotName || 'Unknown Spot',\r\n            guestName: booking.user?.name || booking.userName || 'Unknown Guest',\r\n            checkIn: new Date(booking.startDate || booking.checkIn).toLocaleDateString(),\r\n            checkOut: new Date(booking.endDate || booking.checkOut).toLocaleDateString(),\r\n            status: booking.status || 'Unknown',\r\n            total: booking.total || 0\r\n          }\r\n        })\r\n\r\n        console.log('Processed dashboard stats:', {\r\n          totalSpots: this.totalSpots,\r\n          activeBookings: this.activeBookings,\r\n          totalRevenue: this.totalRevenue\r\n        })\r\n        console.log('Processed recent bookings:', this.recentBookings)\r\n      } catch (error) {\r\n        console.error('Error in fetchDashboardData:', error)\r\n        this.$store.commit('setNotification', {\r\n          type: 'error',\r\n          message: 'Failed to load dashboard data'\r\n        })\r\n      } finally {\r\n        this.isLoading = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.owner-dashboard {\r\n  padding: 2rem;\r\n}\r\n\r\n.dashboard-header {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.owner-profile {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1.5rem;\r\n  padding: 1.5rem;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.profile-avatar {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n}\r\n\r\n.avatar-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.avatar-placeholder {\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #42b983;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.profile-info h1 {\r\n  margin: 0;\r\n  font-size: 1.5rem;\r\n  color: #2c3e50;\r\n}\r\n\r\n.profile-info p {\r\n  margin: 0.25rem 0 0 0;\r\n  color: #666;\r\n}\r\n\r\n.loading {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 200px;\r\n}\r\n\r\n.spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 4px solid #f3f3f3;\r\n  border-top: 4px solid #42b983;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.dashboard-stats {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 1.5rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.stat-card {\r\n  background: white;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.stat-card h3 {\r\n  margin: 0 0 0.5rem 0;\r\n  color: #666;\r\n  font-size: 1rem;\r\n}\r\n\r\n.stat-number {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: #2c3e50;\r\n  margin: 0;\r\n}\r\n\r\n.recent-bookings {\r\n  background: white;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.recent-bookings h2 {\r\n  margin: 0 0 1rem 0;\r\n  color: #2c3e50;\r\n}\r\n\r\n.bookings-list {\r\n  display: grid;\r\n  gap: 1rem;\r\n}\r\n\r\n.booking-card {\r\n  padding: 1rem;\r\n  border: 1px solid #eee;\r\n  border-radius: 4px;\r\n}\r\n\r\n.booking-card h4 {\r\n  margin: 0 0 0.5rem 0;\r\n  color: #2c3e50;\r\n}\r\n\r\n.booking-card p {\r\n  margin: 0.25rem 0;\r\n  color: #666;\r\n}\r\n</style> "],"mappings":"AAyDA,SAAAA,QAAA;AACA,SAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,cAAA;MACAC,YAAA;MACAC,cAAA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAR,QAAA;MACAS,IAAA,EAAAC,KAAA,IAAAA,KAAA,CAAAD;IACA;EACA;EACA,MAAAE,QAAA;IACA,WAAAC,kBAAA;EACA;EACAC,OAAA;IACA,MAAAD,mBAAA;MACA;QACA,KAAAL,SAAA;QACAO,OAAA,CAAAC,GAAA;QAEA,OAAAC,aAAA,EAAAC,gBAAA,UAAAC,OAAA,CAAAC,GAAA,EACApB,QAAA,CAAAqB,iBAAA,GAAAC,KAAA,CAAAC,KAAA;UACAR,OAAA,CAAAQ,KAAA,oCAAAA,KAAA;UACA;YAAApB,IAAA;cAAAC,UAAA;cAAAC,cAAA;cAAAC,YAAA;YAAA;UAAA;QACA,IACAN,QAAA,CAAAwB,WAAA,GAAAF,KAAA,CAAAC,KAAA;UACAR,OAAA,CAAAQ,KAAA,6BAAAA,KAAA;UACA;YAAApB,IAAA;UAAA;QACA,GACA;QAEAY,OAAA,CAAAC,GAAA,oBAAAC,aAAA;QACAF,OAAA,CAAAC,GAAA,uBAAAE,gBAAA;;QAEA;QACA,MAAAO,KAAA,GAAAR,aAAA,CAAAd,IAAA;QACA,KAAAC,UAAA,GAAAqB,KAAA,CAAArB,UAAA;QACA,KAAAC,cAAA,GAAAoB,KAAA,CAAApB,cAAA;QACA,KAAAC,YAAA,GAAAmB,KAAA,CAAAnB,YAAA;;QAEA;QACA,MAAAoB,QAAA,GAAAR,gBAAA,CAAAf,IAAA;QACAY,OAAA,CAAAC,GAAA,uBAAAU,QAAA;QAEA,KAAAnB,cAAA,GAAAmB,QAAA,CAAAC,KAAA,OAAAC,GAAA,CAAAC,OAAA;UACAd,OAAA,CAAAC,GAAA,wBAAAa,OAAA;UACA;YACAC,EAAA,EAAAD,OAAA,CAAAC,EAAA;YACAC,eAAA,EAAAF,OAAA,CAAAG,WAAA,EAAA9B,IAAA,IAAA2B,OAAA,CAAAI,QAAA;YACAC,SAAA,EAAAL,OAAA,CAAAnB,IAAA,EAAAR,IAAA,IAAA2B,OAAA,CAAAM,QAAA;YACAC,OAAA,MAAAC,IAAA,CAAAR,OAAA,CAAAS,SAAA,IAAAT,OAAA,CAAAO,OAAA,EAAAG,kBAAA;YACAC,QAAA,MAAAH,IAAA,CAAAR,OAAA,CAAAY,OAAA,IAAAZ,OAAA,CAAAW,QAAA,EAAAD,kBAAA;YACAG,MAAA,EAAAb,OAAA,CAAAa,MAAA;YACAC,KAAA,EAAAd,OAAA,CAAAc,KAAA;UACA;QACA;QAEA5B,OAAA,CAAAC,GAAA;UACAZ,UAAA,OAAAA,UAAA;UACAC,cAAA,OAAAA,cAAA;UACAC,YAAA,OAAAA;QACA;QACAS,OAAA,CAAAC,GAAA,oCAAAT,cAAA;MACA,SAAAgB,KAAA;QACAR,OAAA,CAAAQ,KAAA,iCAAAA,KAAA;QACA,KAAAqB,MAAA,CAAAC,MAAA;UACAC,IAAA;UACAC,OAAA;QACA;MACA;QACA,KAAAvC,SAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}