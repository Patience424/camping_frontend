{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport { api } from '@/plugins/axios';\nimport jwtDecode from 'jwt-decode';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    token: localStorage.getItem('token') || null,\n    user: JSON.parse(localStorage.getItem('user')) || null,\n    notification: null,\n    isLoading: false,\n    error: null\n  },\n  getters: {\n    isAuthenticated: state => !!state.token,\n    isUser: state => state.user && state.user.role === 'USER',\n    isOwner: state => state.user && state.user.role === 'OWNER',\n    isAdmin: state => state.user && state.user.role === 'ADMIN',\n    userRole: state => state.user ? state.user.role : null,\n    userId: state => state.user ? state.user.id : null\n  },\n  mutations: {\n    setToken(state, token) {\n      state.token = token;\n      localStorage.setItem('token', token);\n    },\n    setUser(state, user) {\n      state.user = user;\n      localStorage.setItem('user', JSON.stringify(user));\n    },\n    clearAuth(state) {\n      state.token = null;\n      state.user = null;\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    },\n    setNotification(state, notification) {\n      state.notification = notification;\n\n      // Auto-clear notification after 5 seconds\n      setTimeout(() => {\n        if (state.notification === notification) {\n          state.notification = null;\n        }\n      }, 5000);\n    },\n    clearNotification(state) {\n      state.notification = null;\n    },\n    setLoading(state, isLoading) {\n      state.isLoading = isLoading;\n    },\n    setError(state, error) {\n      state.error = error;\n    },\n    clearError(state) {\n      state.error = null;\n    }\n  },\n  actions: {\n    async login({\n      commit\n    }, credentials) {\n      try {\n        commit('setLoading', true);\n        const response = await api.post('/auth/login', credentials);\n        const {\n          token,\n          user\n        } = response.data;\n        commit('setToken', token);\n        commit('setUser', user);\n        commit('setNotification', {\n          type: 'success',\n          message: 'Successfully logged in!'\n        });\n        return user;\n      } catch (error) {\n        console.error('Login error:', error.response || error);\n        throw error;\n      } finally {\n        commit('setLoading', false);\n      }\n    },\n    async register({\n      commit\n    }, userData) {\n      try {\n        commit('setLoading', true);\n        const response = await api.post('/auth/register', userData);\n        const {\n          token,\n          user\n        } = response.data;\n        commit('setToken', token);\n        commit('setUser', user);\n        commit('setNotification', {\n          type: 'success',\n          message: 'Successfully registered!'\n        });\n        return user;\n      } catch (error) {\n        console.error('Registration error:', error.response || error);\n        throw error;\n      } finally {\n        commit('setLoading', false);\n      }\n    },\n    logout({\n      commit\n    }) {\n      commit('clearAuth');\n      commit('setNotification', {\n        type: 'info',\n        message: 'You have been logged out.'\n      });\n    },\n    async checkAuth({\n      state,\n      commit\n    }) {\n      if (!state.token) return false;\n      try {\n        // Check if token is expired\n        const decoded = jwtDecode(state.token);\n        const currentTime = Date.now() / 1000;\n        if (decoded.exp < currentTime) {\n          // Token expired\n          commit('clearAuth');\n          return false;\n        }\n\n        // Token still valid, get current user profile\n        const response = await api.get('/auth/profile');\n        commit('setUser', response.data.user);\n        return true;\n      } catch (error) {\n        console.error('Auth check error:', error);\n        commit('clearAuth');\n        return false;\n      }\n    },\n    async updateProfile({\n      commit,\n      state\n    }, profileData) {\n      try {\n        commit('setLoading', true);\n        const response = await api.put('/users/profile', profileData);\n\n        // Update user data in store\n        const updatedUser = {\n          ...state.user,\n          ...response.data.user\n        };\n        commit('setUser', updatedUser);\n        commit('setNotification', {\n          type: 'success',\n          message: 'Profile updated successfully!'\n        });\n        return updatedUser;\n      } catch (error) {\n        console.error('Update profile error:', error.response || error);\n        throw error;\n      } finally {\n        commit('setLoading', false);\n      }\n    },\n    async changePassword({\n      commit\n    }, passwordData) {\n      try {\n        commit('setLoading', true);\n        await api.put('/users/change-password', passwordData);\n        commit('setNotification', {\n          type: 'success',\n          message: 'Password changed successfully!'\n        });\n      } catch (error) {\n        console.error('Change password error:', error.response || error);\n        throw error;\n      } finally {\n        commit('setLoading', false);\n      }\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","api","jwtDecode","use","Store","state","token","localStorage","getItem","user","JSON","parse","notification","isLoading","error","getters","isAuthenticated","isUser","role","isOwner","isAdmin","userRole","userId","id","mutations","setToken","setItem","setUser","stringify","clearAuth","removeItem","setNotification","setTimeout","clearNotification","setLoading","setError","clearError","actions","login","commit","credentials","response","post","data","type","message","console","register","userData","logout","checkAuth","decoded","currentTime","Date","now","exp","get","updateProfile","profileData","put","updatedUser","changePassword","passwordData"],"sources":["C:/Users/pmake/OneDrive - Thomas More/Desktop/Web Programming/Final/project/frontend/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport { api } from '@/plugins/axios'\r\nimport jwtDecode from 'jwt-decode'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    token: localStorage.getItem('token') || null,\r\n    user: JSON.parse(localStorage.getItem('user')) || null,\r\n    notification: null,\r\n    isLoading: false,\r\n    error: null\r\n  },\r\n  getters: {\r\n    isAuthenticated: state => !!state.token,\r\n    isUser: state => state.user && state.user.role === 'USER',\r\n    isOwner: state => state.user && state.user.role === 'OWNER',\r\n    isAdmin: state => state.user && state.user.role === 'ADMIN',\r\n    userRole: state => state.user ? state.user.role : null,\r\n    userId: state => state.user ? state.user.id : null\r\n  },\r\n  mutations: {\r\n    setToken(state, token) {\r\n      state.token = token\r\n      localStorage.setItem('token', token)\r\n    },\r\n    setUser(state, user) {\r\n      state.user = user\r\n      localStorage.setItem('user', JSON.stringify(user))\r\n    },\r\n    clearAuth(state) {\r\n      state.token = null\r\n      state.user = null\r\n      localStorage.removeItem('token')\r\n      localStorage.removeItem('user')\r\n    },\r\n    setNotification(state, notification) {\r\n      state.notification = notification\r\n      \r\n      // Auto-clear notification after 5 seconds\r\n      setTimeout(() => {\r\n        if (state.notification === notification) {\r\n          state.notification = null\r\n        }\r\n      }, 5000)\r\n    },\r\n    clearNotification(state) {\r\n      state.notification = null\r\n    },\r\n    setLoading(state, isLoading) {\r\n      state.isLoading = isLoading\r\n    },\r\n    setError(state, error) {\r\n      state.error = error\r\n    },\r\n    clearError(state) {\r\n      state.error = null\r\n    }\r\n  },\r\n  actions: {\r\n    async login({ commit }, credentials) {\r\n      try {\r\n        commit('setLoading', true)\r\n        const response = await api.post('/auth/login', credentials)\r\n        \r\n        const { token, user } = response.data\r\n        \r\n        commit('setToken', token)\r\n        commit('setUser', user)\r\n        \r\n        commit('setNotification', {\r\n          type: 'success',\r\n          message: 'Successfully logged in!'\r\n        })\r\n        \r\n        return user\r\n      } catch (error) {\r\n        console.error('Login error:', error.response || error)\r\n        throw error\r\n      } finally {\r\n        commit('setLoading', false)\r\n      }\r\n    },\r\n    \r\n    async register({ commit }, userData) {\r\n      try {\r\n        commit('setLoading', true)\r\n        const response = await api.post('/auth/register', userData)\r\n        \r\n        const { token, user } = response.data\r\n        \r\n        commit('setToken', token)\r\n        commit('setUser', user)\r\n        \r\n        commit('setNotification', {\r\n          type: 'success',\r\n          message: 'Successfully registered!'\r\n        })\r\n        \r\n        return user\r\n      } catch (error) {\r\n        console.error('Registration error:', error.response || error)\r\n        throw error\r\n      } finally {\r\n        commit('setLoading', false)\r\n      }\r\n    },\r\n    \r\n    logout({ commit }) {\r\n      commit('clearAuth')\r\n      commit('setNotification', {\r\n        type: 'info',\r\n        message: 'You have been logged out.'\r\n      })\r\n    },\r\n    \r\n    async checkAuth({ state, commit }) {\r\n      if (!state.token) return false\r\n      \r\n      try {\r\n        // Check if token is expired\r\n        const decoded = jwtDecode(state.token)\r\n        const currentTime = Date.now() / 1000\r\n        \r\n        if (decoded.exp < currentTime) {\r\n          // Token expired\r\n          commit('clearAuth')\r\n          return false\r\n        }\r\n        \r\n        // Token still valid, get current user profile\r\n        const response = await api.get('/auth/profile')\r\n        commit('setUser', response.data.user)\r\n        return true\r\n      } catch (error) {\r\n        console.error('Auth check error:', error)\r\n        commit('clearAuth')\r\n        return false\r\n      }\r\n    },\r\n    \r\n    async updateProfile({ commit, state }, profileData) {\r\n      try {\r\n        commit('setLoading', true)\r\n        const response = await api.put('/users/profile', profileData)\r\n        \r\n        // Update user data in store\r\n        const updatedUser = { ...state.user, ...response.data.user }\r\n        commit('setUser', updatedUser)\r\n        \r\n        commit('setNotification', {\r\n          type: 'success',\r\n          message: 'Profile updated successfully!'\r\n        })\r\n        \r\n        return updatedUser\r\n      } catch (error) {\r\n        console.error('Update profile error:', error.response || error)\r\n        throw error\r\n      } finally {\r\n        commit('setLoading', false)\r\n      }\r\n    },\r\n    \r\n    async changePassword({ commit }, passwordData) {\r\n      try {\r\n        commit('setLoading', true)\r\n        await api.put('/users/change-password', passwordData)\r\n        \r\n        commit('setNotification', {\r\n          type: 'success',\r\n          message: 'Password changed successfully!'\r\n        })\r\n      } catch (error) {\r\n        console.error('Change password error:', error.response || error)\r\n        throw error\r\n      } finally {\r\n        commit('setLoading', false)\r\n      }\r\n    }\r\n  }\r\n})"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}