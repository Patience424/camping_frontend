{"ast":null,"code":"import { api } from '@/plugins/axios';\n\n// Add request interceptor for logging\napi.interceptors.request.use(config => {\n  console.log('API Request:', {\n    method: config.method,\n    url: config.url,\n    params: config.params,\n    data: config.data\n  });\n  return config;\n}, error => {\n  console.error('API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for logging\napi.interceptors.response.use(response => {\n  console.log('API Response:', {\n    status: response.status,\n    data: response.data,\n    url: response.config.url\n  });\n  return response.data;\n}, error => {\n  console.error('API Error:', {\n    status: error.response?.status,\n    data: error.response?.data,\n    url: error.config?.url\n  });\n  if (error.response?.status === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  forgotPassword: email => api.post('/auth/forgot-password', {\n    email\n  }),\n  resetPassword: data => api.post('/auth/reset-password', data),\n  verifyToken: () => api.get('/auth/verify')\n};\nexport const userAPI = {\n  getProfile: () => api.get('/users/profile'),\n  updateProfile: data => api.put('/users/profile', data),\n  getBookings: () => api.get('/users/bookings'),\n  getReviews: () => api.get('/users/reviews')\n};\nexport const campingSpotAPI = {\n  getAll: params => api.get('/api/users/camping-spots', {\n    params\n  }),\n  getById: id => api.get(`/api/users/camping-spots/${id}`),\n  create: data => api.post('/api/users/camping-spots', data),\n  update: (id, data) => api.put(`/api/users/camping-spots/${id}`, data),\n  delete: id => api.delete(`/api/users/camping-spots/${id}`),\n  getFeatured: () => api.get('/api/users/camping-spots/featured'),\n  search: params => api.get('/api/users/camping-spots/search', {\n    params\n  }),\n  getCampingSpots: params => api.get('/api/users/camping-spots', {\n    params\n  }),\n  checkAvailability: (id, data) => api.post(`/api/users/camping-spots/${id}/check-availability`, data),\n  createReview: (id, data) => api.post(`/api/users/camping-spots/${id}/reviews`, data),\n  uploadImages: (id, formData) => api.post(`/api/users/camping-spots/${id}/images`, formData),\n  deleteImage: (id, imageId) => api.delete(`/api/users/camping-spots/${id}/images/${imageId}`),\n  createBooking: (id, data) => api.post(`/api/users/camping-spots/${id}/bookings`, data)\n};\nexport const bookingAPI = {\n  create: data => api.post('/bookings', data),\n  getAll: params => api.get('/bookings', {\n    params\n  }),\n  getById: id => api.get(`/bookings/${id}`),\n  update: (id, data) => api.put(`/bookings/${id}`, data),\n  cancel: id => api.post(`/bookings/${id}/cancel`)\n};\nexport const reviewAPI = {\n  create: data => api.post('/reviews', data),\n  getAll: params => api.get('/reviews', {\n    params\n  }),\n  getById: id => api.get(`/reviews/${id}`),\n  update: (id, data) => api.put(`/reviews/${id}`, data),\n  delete: id => api.delete(`/reviews/${id}`)\n};\nexport const adminAPI = {\n  getDashboardStats: () => api.get('/admin/dashboard/stats'),\n  getAllUsers: params => api.get('/admin/users', {\n    params\n  }),\n  updateUser: (id, data) => api.put(`/admin/users/${id}`, data),\n  deleteUser: id => api.delete(`/admin/users/${id}`),\n  getAllBookings: params => api.get('/admin/bookings', {\n    params\n  }),\n  updateBooking: (id, data) => api.put(`/admin/bookings/${id}`, data),\n  getAllReviews: params => api.get('/admin/reviews', {\n    params\n  }),\n  updateReview: (id, data) => api.put(`/admin/reviews/${id}`, data)\n};\nexport const ownerAPI = {\n  getDashboardStats: () => api.get('/owner/dashboard/stats'),\n  getCampingSpots: () => api.get('/owner/camping-spots'),\n  getCampingSpotById: id => api.get(`/owner/camping-spots/${id}`),\n  createCampingSpot: data => api.post('/owner/camping-spots', data),\n  updateCampingSpot: (id, data) => api.put(`/owner/camping-spots/${id}`, data),\n  deleteCampingSpot: id => api.delete(`/owner/camping-spots/${id}`),\n  getBookings: () => api.get('/users/bookings'),\n  getReviews: () => api.get('/owner/reviews')\n};\nexport default api;","map":{"version":3,"names":["api","interceptors","request","use","config","console","log","method","url","params","data","error","Promise","reject","response","status","localStorage","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","forgotPassword","email","resetPassword","verifyToken","get","userAPI","getProfile","updateProfile","put","getBookings","getReviews","campingSpotAPI","getAll","getById","id","create","update","delete","getFeatured","search","getCampingSpots","checkAvailability","createReview","uploadImages","formData","deleteImage","imageId","createBooking","bookingAPI","cancel","reviewAPI","adminAPI","getDashboardStats","getAllUsers","updateUser","deleteUser","getAllBookings","updateBooking","getAllReviews","updateReview","ownerAPI","getCampingSpotById","createCampingSpot","updateCampingSpot","deleteCampingSpot"],"sources":["C:/Users/pmake/OneDrive - Thomas More/Desktop/Web Programming/Final/project/frontend/src/services/api.js"],"sourcesContent":["import { api } from '@/plugins/axios'\r\n\r\n// Add request interceptor for logging\r\napi.interceptors.request.use(\r\n  config => {\r\n    console.log('API Request:', {\r\n      method: config.method,\r\n      url: config.url,\r\n      params: config.params,\r\n      data: config.data\r\n    })\r\n    return config\r\n  },\r\n  error => {\r\n    console.error('API Request Error:', error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// Add response interceptor for logging\r\napi.interceptors.response.use(\r\n  response => {\r\n    console.log('API Response:', {\r\n      status: response.status,\r\n      data: response.data,\r\n      url: response.config.url\r\n    })\r\n    return response.data\r\n  },\r\n  error => {\r\n    console.error('API Error:', {\r\n      status: error.response?.status,\r\n      data: error.response?.data,\r\n      url: error.config?.url\r\n    })\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token')\r\n      window.location.href = '/login'\r\n    }\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  forgotPassword: (email) => api.post('/auth/forgot-password', { email }),\r\n  resetPassword: (data) => api.post('/auth/reset-password', data),\r\n  verifyToken: () => api.get('/auth/verify')\r\n}\r\n\r\nexport const userAPI = {\r\n  getProfile: () => api.get('/users/profile'),\r\n  updateProfile: (data) => api.put('/users/profile', data),\r\n  getBookings: () => api.get('/users/bookings'),\r\n  getReviews: () => api.get('/users/reviews')\r\n}\r\n\r\nexport const campingSpotAPI = {\r\n  getAll: (params) => api.get('/api/users/camping-spots', { params }),\r\n  getById: (id) => api.get(`/api/users/camping-spots/${id}`),\r\n  create: (data) => api.post('/api/users/camping-spots', data),\r\n  update: (id, data) => api.put(`/api/users/camping-spots/${id}`, data),\r\n  delete: (id) => api.delete(`/api/users/camping-spots/${id}`),\r\n  getFeatured: () => api.get('/api/users/camping-spots/featured'),\r\n  search: (params) => api.get('/api/users/camping-spots/search', { params }),\r\n  getCampingSpots: (params) => api.get('/api/users/camping-spots', { params }),\r\n  checkAvailability: (id, data) => api.post(`/api/users/camping-spots/${id}/check-availability`, data),\r\n  createReview: (id, data) => api.post(`/api/users/camping-spots/${id}/reviews`, data),\r\n  uploadImages: (id, formData) => api.post(`/api/users/camping-spots/${id}/images`, formData),\r\n  deleteImage: (id, imageId) => api.delete(`/api/users/camping-spots/${id}/images/${imageId}`),\r\n  createBooking: (id, data) => api.post(`/api/users/camping-spots/${id}/bookings`, data)\r\n}\r\n\r\nexport const bookingAPI = {\r\n  create: (data) => api.post('/bookings', data),\r\n  getAll: (params) => api.get('/bookings', { params }),\r\n  getById: (id) => api.get(`/bookings/${id}`),\r\n  update: (id, data) => api.put(`/bookings/${id}`, data),\r\n  cancel: (id) => api.post(`/bookings/${id}/cancel`)\r\n}\r\n\r\nexport const reviewAPI = {\r\n  create: (data) => api.post('/reviews', data),\r\n  getAll: (params) => api.get('/reviews', { params }),\r\n  getById: (id) => api.get(`/reviews/${id}`),\r\n  update: (id, data) => api.put(`/reviews/${id}`, data),\r\n  delete: (id) => api.delete(`/reviews/${id}`)\r\n}\r\n\r\nexport const adminAPI = {\r\n  getDashboardStats: () => api.get('/admin/dashboard/stats'),\r\n  getAllUsers: (params) => api.get('/admin/users', { params }),\r\n  updateUser: (id, data) => api.put(`/admin/users/${id}`, data),\r\n  deleteUser: (id) => api.delete(`/admin/users/${id}`),\r\n  getAllBookings: (params) => api.get('/admin/bookings', { params }),\r\n  updateBooking: (id, data) => api.put(`/admin/bookings/${id}`, data),\r\n  getAllReviews: (params) => api.get('/admin/reviews', { params }),\r\n  updateReview: (id, data) => api.put(`/admin/reviews/${id}`, data)\r\n}\r\n\r\nexport const ownerAPI = {\r\n  getDashboardStats: () => api.get('/owner/dashboard/stats'),\r\n  getCampingSpots: () => api.get('/owner/camping-spots'),\r\n  getCampingSpotById: (id) => api.get(`/owner/camping-spots/${id}`),\r\n  createCampingSpot: (data) => api.post('/owner/camping-spots', data),\r\n  updateCampingSpot: (id, data) => api.put(`/owner/camping-spots/${id}`, data),\r\n  deleteCampingSpot: (id) => api.delete(`/owner/camping-spots/${id}`),\r\n  getBookings: () => api.get('/users/bookings'),\r\n  getReviews: () => api.get('/owner/reviews')\r\n}\r\n\r\nexport default api "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}