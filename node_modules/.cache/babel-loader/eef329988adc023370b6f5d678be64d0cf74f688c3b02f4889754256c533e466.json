{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.VUE_APP_API_URL || 'http://localhost:3000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle common errors\napi.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    // Handle 401 Unauthorized errors\n    if (error.response.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  forgotPassword: email => api.post('/auth/forgot-password', {\n    email\n  }),\n  resetPassword: data => api.post('/auth/reset-password', data),\n  verifyToken: () => api.get('/auth/verify')\n};\nexport const userAPI = {\n  getProfile: () => api.get('/users/profile'),\n  updateProfile: data => api.put('/users/profile', data),\n  getBookings: () => api.get('/users/bookings'),\n  getReviews: () => api.get('/users/reviews')\n};\nexport const campingSpotAPI = {\n  getAll: params => api.get('/users/camping-spots', {\n    params\n  }),\n  getById: id => api.get(`/users/camping-spots/${id}`),\n  create: data => api.post('/users/camping-spots', data),\n  update: (id, data) => api.put(`/users/camping-spots/${id}`, data),\n  delete: id => api.delete(`/users/camping-spots/${id}`),\n  getFeatured: () => api.get('/users/camping-spots/featured'),\n  search: params => api.get('/users/camping-spots/search', {\n    params\n  }),\n  getCampingSpots: params => api.get('/users/camping-spots', {\n    params\n  })\n};\nexport const bookingAPI = {\n  create: data => api.post('/bookings', data),\n  getAll: params => api.get('/bookings', {\n    params\n  }),\n  getById: id => api.get(`/bookings/${id}`),\n  update: (id, data) => api.put(`/bookings/${id}`, data),\n  cancel: id => api.post(`/bookings/${id}/cancel`)\n};\nexport const reviewAPI = {\n  create: data => api.post('/reviews', data),\n  getAll: params => api.get('/reviews', {\n    params\n  }),\n  getById: id => api.get(`/reviews/${id}`),\n  update: (id, data) => api.put(`/reviews/${id}`, data),\n  delete: id => api.delete(`/reviews/${id}`)\n};\nexport const adminAPI = {\n  getDashboardStats: () => api.get('/admin/dashboard/stats'),\n  getAllUsers: params => api.get('/admin/users', {\n    params\n  }),\n  updateUser: (id, data) => api.put(`/admin/users/${id}`, data),\n  deleteUser: id => api.delete(`/admin/users/${id}`),\n  getAllBookings: params => api.get('/admin/bookings', {\n    params\n  }),\n  updateBooking: (id, data) => api.put(`/admin/bookings/${id}`, data),\n  getAllReviews: params => api.get('/admin/reviews', {\n    params\n  }),\n  updateReview: (id, data) => api.put(`/admin/reviews/${id}`, data)\n};\nexport const ownerAPI = {\n  getDashboardStats: () => api.get('/owner/dashboard/stats'),\n  getCampingSpots: () => api.get('/owner/camping-spots'),\n  getBookings: () => api.get('/owner/bookings'),\n  getReviews: () => api.get('/owner/reviews')\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","VUE_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","forgotPassword","email","resetPassword","data","verifyToken","get","userAPI","getProfile","updateProfile","put","getBookings","getReviews","campingSpotAPI","getAll","params","getById","id","update","delete","getFeatured","search","getCampingSpots","bookingAPI","cancel","reviewAPI","adminAPI","getDashboardStats","getAllUsers","updateUser","deleteUser","getAllBookings","updateBooking","getAllReviews","updateReview","ownerAPI"],"sources":["C:/Users/pmake/OneDrive - Thomas More/Desktop/Web Programming/Final/project/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.VUE_APP_API_URL || 'http://localhost:3000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n})\r\n\r\n// Add a request interceptor to add the auth token to requests\r\napi.interceptors.request.use(\r\n  config => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// Add a response interceptor to handle common errors\r\napi.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    if (error.response) {\r\n      // Handle 401 Unauthorized errors\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem('token')\r\n        window.location.href = '/login'\r\n      }\r\n    }\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  forgotPassword: (email) => api.post('/auth/forgot-password', { email }),\r\n  resetPassword: (data) => api.post('/auth/reset-password', data),\r\n  verifyToken: () => api.get('/auth/verify')\r\n}\r\n\r\nexport const userAPI = {\r\n  getProfile: () => api.get('/users/profile'),\r\n  updateProfile: (data) => api.put('/users/profile', data),\r\n  getBookings: () => api.get('/users/bookings'),\r\n  getReviews: () => api.get('/users/reviews')\r\n}\r\n\r\nexport const campingSpotAPI = {\r\n  getAll: (params) => api.get('/users/camping-spots', { params }),\r\n  getById: (id) => api.get(`/users/camping-spots/${id}`),\r\n  create: (data) => api.post('/users/camping-spots', data),\r\n  update: (id, data) => api.put(`/users/camping-spots/${id}`, data),\r\n  delete: (id) => api.delete(`/users/camping-spots/${id}`),\r\n  getFeatured: () => api.get('/users/camping-spots/featured'),\r\n  search: (params) => api.get('/users/camping-spots/search', { params }),\r\n  getCampingSpots: (params) => api.get('/users/camping-spots', { params })\r\n}\r\n\r\nexport const bookingAPI = {\r\n  create: (data) => api.post('/bookings', data),\r\n  getAll: (params) => api.get('/bookings', { params }),\r\n  getById: (id) => api.get(`/bookings/${id}`),\r\n  update: (id, data) => api.put(`/bookings/${id}`, data),\r\n  cancel: (id) => api.post(`/bookings/${id}/cancel`)\r\n}\r\n\r\nexport const reviewAPI = {\r\n  create: (data) => api.post('/reviews', data),\r\n  getAll: (params) => api.get('/reviews', { params }),\r\n  getById: (id) => api.get(`/reviews/${id}`),\r\n  update: (id, data) => api.put(`/reviews/${id}`, data),\r\n  delete: (id) => api.delete(`/reviews/${id}`)\r\n}\r\n\r\nexport const adminAPI = {\r\n  getDashboardStats: () => api.get('/admin/dashboard/stats'),\r\n  getAllUsers: (params) => api.get('/admin/users', { params }),\r\n  updateUser: (id, data) => api.put(`/admin/users/${id}`, data),\r\n  deleteUser: (id) => api.delete(`/admin/users/${id}`),\r\n  getAllBookings: (params) => api.get('/admin/bookings', { params }),\r\n  updateBooking: (id, data) => api.put(`/admin/bookings/${id}`, data),\r\n  getAllReviews: (params) => api.get('/admin/reviews', { params }),\r\n  updateReview: (id, data) => api.put(`/admin/reviews/${id}`, data)\r\n}\r\n\r\nexport const ownerAPI = {\r\n  getDashboardStats: () => api.get('/owner/dashboard/stats'),\r\n  getCampingSpots: () => api.get('/owner/camping-spots'),\r\n  getBookings: () => api.get('/owner/bookings'),\r\n  getReviews: () => api.get('/owner/reviews')\r\n}\r\n\r\nexport default api "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}