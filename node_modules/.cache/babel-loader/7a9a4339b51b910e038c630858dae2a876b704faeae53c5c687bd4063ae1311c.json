{"ast":null,"code":"export default {\n  name: 'AdminReviews',\n  data() {\n    return {\n      reviews: [],\n      searchQuery: '',\n      ratingFilter: '',\n      statusFilter: ''\n    };\n  },\n  computed: {\n    filteredReviews() {\n      return this.reviews.filter(review => {\n        const matchesSearch = review.userName.toLowerCase().includes(this.searchQuery.toLowerCase()) || review.spotName.toLowerCase().includes(this.searchQuery.toLowerCase()) || review.content.toLowerCase().includes(this.searchQuery.toLowerCase());\n        const matchesRating = !this.ratingFilter || review.rating === parseInt(this.ratingFilter);\n        const matchesStatus = !this.statusFilter || review.status.toLowerCase() === this.statusFilter;\n        return matchesSearch && matchesRating && matchesStatus;\n      });\n    }\n  },\n  async created() {\n    // TODO: Fetch reviews from API\n    this.reviews = [{\n      id: 1,\n      userName: 'John Doe',\n      spotName: 'Mountain View Camp',\n      rating: 5,\n      content: 'Amazing experience! The views were breathtaking and the facilities were clean and well-maintained.',\n      date: '2024-03-01',\n      status: 'Published',\n      response: 'Thank you for your wonderful review! We\\'re glad you enjoyed your stay.'\n    }, {\n      id: 2,\n      userName: 'Jane Smith',\n      spotName: 'Lakeside Retreat',\n      rating: 4,\n      content: 'Great location and friendly staff. Could use more amenities.',\n      date: '2024-03-05',\n      status: 'Pending',\n      response: null\n    }, {\n      id: 3,\n      userName: 'Mike Johnson',\n      spotName: 'Forest Haven',\n      rating: 2,\n      content: 'Disappointing experience. The site was not as described and quite dirty.',\n      date: '2024-03-10',\n      status: 'Pending',\n      response: null\n    }];\n  },\n  methods: {\n    handleSearch() {\n      // Search is handled by computed property\n    },\n    handleFilter() {\n      // Filtering is handled by computed property\n    },\n    async updateStatus(review, newStatus) {\n      try {\n        // TODO: Update review status in API\n        review.status = newStatus;\n      } catch (error) {\n        console.error('Error updating review status:', error);\n      }\n    },\n    async deleteReview(review) {\n      if (confirm(`Are you sure you want to delete this review?`)) {\n        try {\n          // TODO: Delete review from API\n          this.reviews = this.reviews.filter(r => r.id !== review.id);\n        } catch (error) {\n          console.error('Error deleting review:', error);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","reviews","searchQuery","ratingFilter","statusFilter","computed","filteredReviews","filter","review","matchesSearch","userName","toLowerCase","includes","spotName","content","matchesRating","rating","parseInt","matchesStatus","status","created","id","date","response","methods","handleSearch","handleFilter","updateStatus","newStatus","error","console","deleteReview","confirm","r"],"sources":["src/views/admin/AdminReviews.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-reviews\">\r\n    <div class=\"header\">\r\n      <h1>Reviews Management</h1>\r\n      <div class=\"search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          v-model=\"searchQuery\"\r\n          placeholder=\"Search reviews...\"\r\n          @input=\"handleSearch\"\r\n        >\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"filters\">\r\n      <select v-model=\"ratingFilter\" @change=\"handleFilter\">\r\n        <option value=\"\">All Ratings</option>\r\n        <option value=\"5\">5 Stars</option>\r\n        <option value=\"4\">4 Stars</option>\r\n        <option value=\"3\">3 Stars</option>\r\n        <option value=\"2\">2 Stars</option>\r\n        <option value=\"1\">1 Star</option>\r\n      </select>\r\n      <select v-model=\"statusFilter\" @change=\"handleFilter\">\r\n        <option value=\"\">All Status</option>\r\n        <option value=\"published\">Published</option>\r\n        <option value=\"pending\">Pending</option>\r\n        <option value=\"rejected\">Rejected</option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"reviews-grid\">\r\n      <div v-for=\"review in filteredReviews\" :key=\"review.id\" class=\"review-card\">\r\n        <div class=\"review-header\">\r\n          <div class=\"user-info\">\r\n            <h3>{{ review.userName }}</h3>\r\n            <p class=\"camping-spot\">{{ review.spotName }}</p>\r\n          </div>\r\n          <div class=\"review-meta\">\r\n            <div class=\"rating\">\r\n              <span v-for=\"i in 5\" :key=\"i\" class=\"star\">\r\n                {{ i <= review.rating ? '★' : '☆' }}\r\n              </span>\r\n            </div>\r\n            <span class=\"date\">{{ review.date }}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"review-content\">\r\n          <p>{{ review.content }}</p>\r\n          <div v-if=\"review.response\" class=\"owner-response\">\r\n            <strong>Owner Response:</strong>\r\n            <p>{{ review.response }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"review-footer\">\r\n          <span class=\"status-badge\" :class=\"review.status.toLowerCase()\">\r\n            {{ review.status }}\r\n          </span>\r\n          <div class=\"actions\">\r\n            <button \r\n              v-if=\"review.status === 'Pending'\"\r\n              @click=\"updateStatus(review, 'Published')\" \r\n              class=\"btn-approve\"\r\n            >\r\n              Approve\r\n            </button>\r\n            <button \r\n              v-if=\"review.status === 'Pending'\"\r\n              @click=\"updateStatus(review, 'Rejected')\" \r\n              class=\"btn-reject\"\r\n            >\r\n              Reject\r\n            </button>\r\n            <button @click=\"deleteReview(review)\" class=\"btn-delete\">\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'AdminReviews',\r\n  data() {\r\n    return {\r\n      reviews: [],\r\n      searchQuery: '',\r\n      ratingFilter: '',\r\n      statusFilter: ''\r\n    }\r\n  },\r\n  computed: {\r\n    filteredReviews() {\r\n      return this.reviews.filter(review => {\r\n        const matchesSearch = \r\n          review.userName.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n          review.spotName.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n          review.content.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n        \r\n        const matchesRating = !this.ratingFilter || \r\n          review.rating === parseInt(this.ratingFilter)\r\n        \r\n        const matchesStatus = !this.statusFilter || \r\n          review.status.toLowerCase() === this.statusFilter\r\n\r\n        return matchesSearch && matchesRating && matchesStatus\r\n      })\r\n    }\r\n  },\r\n  async created() {\r\n    // TODO: Fetch reviews from API\r\n    this.reviews = [\r\n      {\r\n        id: 1,\r\n        userName: 'John Doe',\r\n        spotName: 'Mountain View Camp',\r\n        rating: 5,\r\n        content: 'Amazing experience! The views were breathtaking and the facilities were clean and well-maintained.',\r\n        date: '2024-03-01',\r\n        status: 'Published',\r\n        response: 'Thank you for your wonderful review! We\\'re glad you enjoyed your stay.'\r\n      },\r\n      {\r\n        id: 2,\r\n        userName: 'Jane Smith',\r\n        spotName: 'Lakeside Retreat',\r\n        rating: 4,\r\n        content: 'Great location and friendly staff. Could use more amenities.',\r\n        date: '2024-03-05',\r\n        status: 'Pending',\r\n        response: null\r\n      },\r\n      {\r\n        id: 3,\r\n        userName: 'Mike Johnson',\r\n        spotName: 'Forest Haven',\r\n        rating: 2,\r\n        content: 'Disappointing experience. The site was not as described and quite dirty.',\r\n        date: '2024-03-10',\r\n        status: 'Pending',\r\n        response: null\r\n      }\r\n    ]\r\n  },\r\n  methods: {\r\n    handleSearch() {\r\n      // Search is handled by computed property\r\n    },\r\n    handleFilter() {\r\n      // Filtering is handled by computed property\r\n    },\r\n    async updateStatus(review, newStatus) {\r\n      try {\r\n        // TODO: Update review status in API\r\n        review.status = newStatus\r\n      } catch (error) {\r\n        console.error('Error updating review status:', error)\r\n      }\r\n    },\r\n    async deleteReview(review) {\r\n      if (confirm(`Are you sure you want to delete this review?`)) {\r\n        try {\r\n          // TODO: Delete review from API\r\n          this.reviews = this.reviews.filter(r => r.id !== review.id)\r\n        } catch (error) {\r\n          console.error('Error deleting review:', error)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.admin-reviews {\r\n  padding: 2rem;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.search-bar input {\r\n  padding: 0.75rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  width: 300px;\r\n}\r\n\r\n.filters {\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.filters select {\r\n  padding: 0.5rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  min-width: 150px;\r\n}\r\n\r\n.reviews-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\r\n  gap: 1.5rem;\r\n}\r\n\r\n.review-card {\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 1.5rem;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.review-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.user-info h3 {\r\n  margin: 0;\r\n  color: #2c3e50;\r\n}\r\n\r\n.camping-spot {\r\n  color: #666;\r\n  margin: 0.25rem 0 0 0;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.review-meta {\r\n  text-align: right;\r\n}\r\n\r\n.rating {\r\n  color: #f59e0b;\r\n  font-size: 1.25rem;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.date {\r\n  color: #666;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.review-content {\r\n  margin: 1rem 0;\r\n  color: #374151;\r\n}\r\n\r\n.owner-response {\r\n  margin-top: 1rem;\r\n  padding: 1rem;\r\n  background: #f8fafc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.owner-response strong {\r\n  color: #2c3e50;\r\n}\r\n\r\n.owner-response p {\r\n  margin: 0.5rem 0 0 0;\r\n  color: #666;\r\n}\r\n\r\n.review-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 1rem;\r\n  padding-top: 1rem;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.status-badge {\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 20px;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.status-badge.published {\r\n  background: #e3fcef;\r\n  color: #42b983;\r\n}\r\n\r\n.status-badge.pending {\r\n  background: #fef3c7;\r\n  color: #d97706;\r\n}\r\n\r\n.status-badge.rejected {\r\n  background: #fee2e2;\r\n  color: #ef4444;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.btn-approve,\r\n.btn-reject,\r\n.btn-delete {\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 4px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  border: none;\r\n}\r\n\r\n.btn-approve {\r\n  background: #e3fcef;\r\n  color: #42b983;\r\n}\r\n\r\n.btn-reject {\r\n  background: #fee2e2;\r\n  color: #ef4444;\r\n}\r\n\r\n.btn-delete {\r\n  background: #f3f4f6;\r\n  color: #374151;\r\n}\r\n</style> "],"mappings":"AAsFA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,WAAA;MACAC,YAAA;MACAC,YAAA;IACA;EACA;EACAC,QAAA;IACAC,gBAAA;MACA,YAAAL,OAAA,CAAAM,MAAA,CAAAC,MAAA;QACA,MAAAC,aAAA,GACAD,MAAA,CAAAE,QAAA,CAAAC,WAAA,GAAAC,QAAA,MAAAV,WAAA,CAAAS,WAAA,OACAH,MAAA,CAAAK,QAAA,CAAAF,WAAA,GAAAC,QAAA,MAAAV,WAAA,CAAAS,WAAA,OACAH,MAAA,CAAAM,OAAA,CAAAH,WAAA,GAAAC,QAAA,MAAAV,WAAA,CAAAS,WAAA;QAEA,MAAAI,aAAA,SAAAZ,YAAA,IACAK,MAAA,CAAAQ,MAAA,KAAAC,QAAA,MAAAd,YAAA;QAEA,MAAAe,aAAA,SAAAd,YAAA,IACAI,MAAA,CAAAW,MAAA,CAAAR,WAAA,YAAAP,YAAA;QAEA,OAAAK,aAAA,IAAAM,aAAA,IAAAG,aAAA;MACA;IACA;EACA;EACA,MAAAE,QAAA;IACA;IACA,KAAAnB,OAAA,IACA;MACAoB,EAAA;MACAX,QAAA;MACAG,QAAA;MACAG,MAAA;MACAF,OAAA;MACAQ,IAAA;MACAH,MAAA;MACAI,QAAA;IACA,GACA;MACAF,EAAA;MACAX,QAAA;MACAG,QAAA;MACAG,MAAA;MACAF,OAAA;MACAQ,IAAA;MACAH,MAAA;MACAI,QAAA;IACA,GACA;MACAF,EAAA;MACAX,QAAA;MACAG,QAAA;MACAG,MAAA;MACAF,OAAA;MACAQ,IAAA;MACAH,MAAA;MACAI,QAAA;IACA,EACA;EACA;EACAC,OAAA;IACAC,aAAA;MACA;IAAA,CACA;IACAC,aAAA;MACA;IAAA,CACA;IACA,MAAAC,aAAAnB,MAAA,EAAAoB,SAAA;MACA;QACA;QACApB,MAAA,CAAAW,MAAA,GAAAS,SAAA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,kCAAAA,KAAA;MACA;IACA;IACA,MAAAE,aAAAvB,MAAA;MACA,IAAAwB,OAAA;QACA;UACA;UACA,KAAA/B,OAAA,QAAAA,OAAA,CAAAM,MAAA,CAAA0B,CAAA,IAAAA,CAAA,CAAAZ,EAAA,KAAAb,MAAA,CAAAa,EAAA;QACA,SAAAQ,KAAA;UACAC,OAAA,CAAAD,KAAA,2BAAAA,KAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}